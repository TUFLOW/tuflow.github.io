[["index.html", "TUFLOW CATCH User Manual ", " TUFLOW CATCH User Manual July 2024 "],["introduction.html", "Introduction About this manual How to use this manual", " Introduction About this manual This document is the user manual for TUFLOW CATCH. How to use this manual Instructions are provided below on how to use this manual, including aspects of navigation and table filtering. These instructions are not provided elsewhere. Navigation This manual is designed for digital use within any web browser and has the following features: Section headers, to level three, are directly navigable via the left hand pane’s table of contents. This table of contents pane can be toggled on and off from view via the “s” key if more or less page width is required The angled arrows that float at the left and right hand side midpoints of every page can be used to navigate sequentially back and forth to the commencement of preceding or subsequent top level sections Model commands, parameters and cross references for tables and figures are navigable through hyperlinks, where appropriate. This includes parameters within equations, which will also appear as blue hyperlinks when active The space bar can be used to scroll down within each page without skipping text. Shift + space bar will similarly scroll up Browser back and forward buttons (or their equivalent keyboard shortcuts alt + \\(\\langle\\)left arrow\\(\\rangle\\) and alt + \\(\\langle\\)right arrow\\(\\rangle\\), respectively) can be used to navigate through browsing history. Some browsers may not return to the scroll location in a page last visited, but to the last clicked section header. Hyperlinks have been built into the body of the manual, and these can be used in lieu of browser buttons if required It is recommended that this manual be viewed in a browser window that is maximised or operating in full screen mode, with the latter (although browser dependent) typically toggled via the F11 key. When following hyperlinks, the target (i.e. location linked to) is displayed at the top of the landing page. The exception to this occurs when a target is located near the bottom of the landing page’s content. In this case, it is not possible for a web browser to display the target at the top of a page because this would generate underlying white space, and as such, the target will appear in the main body of the landing page. Searching This entire manual content can be searched by using the search box at the top of the table of contents pane (i.e. screen top left near the TUFLOW logo). This search box can be toggled on and off by clicking the search icon (magnifying glass) at the top left of any page. The table of contents is dynamically filtered in response to entering text in the search box, and clicking on any remaining table of contents entry will navigate directly to the searched text. Searched text will be highlighted within a page for easy identification, and multiple instances within one page can be navigated through by using the up and down arrow keys. Clearing the search box will restore the table of contents. Tables Where appropriate, tables are searchable via use of the search box, which is located at the top right of any search enabled table. Not all tables are searchable. When text is entered into the search box, table rows are dynamically filtered to only show those that contain the search text. This allows on-the-fly condensing of large tables so that only relevant content is presented. Tables can be sorted alphabetically (or reverse alphabetically) with respect to any column by clicking column headers. Where appropriate, the number of rows displayed is selectable via the Show entries drop down. Undisplayed rows can be accessed by clicking Previous or Next or by using the numbered navigation boxes, all of which are located at the bottom of each table. Below is an example of a searchable table. Type “lateral” (with or without the inverted commas) into the search box to see the table behaviour, or change the number of rows displayed (given this demonstration table has seven rows, only selecting “5” will change the number of rows displayed) and use the navigation buttons at the bottom of the table to look through all the data. The right hand column has hyperlinked words that allow navigation between related commands, or different versions of the same command, for ease of access. All hyperlinks have been deliberately disabled in this demonstration table, but are active (and explained) in live tables elsewhere in this manual. Command Description Links Catch Output Folder == \\(\\langle\\)folder name\\(\\rangle\\) Used in a global setting block block to control the location to which receiving model boundary condition files are written. \\(\\text{ }\\) Catch Output Interval Nodestring == \\(\\langle\\)dt (s)\\(\\rangle\\) Used in a global setting block block to control the timestep of receiving model boundary condition files written for nodestring inflows. \\(\\text{ }\\) Catch Output Interval Lateral == \\(\\langle\\)dt (s)\\(\\rangle\\) Used in a global setting block block to control the timestep of receiving model boundary condition files written for lateral inflows. \\(\\text{ }\\) CSV Write Frequency Day == \\(\\langle\\)dt (days)\\(\\rangle\\) Used in a global setting block block to control the frequency at which receiving model boundary condition files are written from memory to csv. \\(\\text{ }\\) Date Format == ISODATE Used in a global setting block block to set the time format. \\(\\text{ }\\) Start Date == \\(\\langle\\)dd/mm/yyyy hh:mm:ss\\(\\rangle\\) Used in a global setting block block to set the simulation start date. \\(\\text{ }\\) End Date == \\(\\langle\\)dd/mm/yyyy hh:mm:ss\\(\\rangle\\) Used in a global setting block block to set the simulation end date. \\(\\text{ }\\) Colour coding is often used for distinguishing different tabulated data types. In the above example, TUFLOW CATCH commands are pink and the associated argument options for each command are blue and contained in angled parentheses. Colour coding applied to other table types is explained throughout this manual when required. Commands Where specific commands are described, they appear in highlighted text, and often as a clickable link to the corresponding command description in Appendix 5. That Appendix is a searchable table of all commands, as per the demonstration table presented in this introduction. The below is an example of a TUFLOW CATCH command (the hyperlink has been disabled for this example). \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) Catch Output Folder == Where commands specify parameters (e.g. time steps etc.) then for consistency and brevity, these parameters are included directly in the command example using their notation (see following section that describes notation) rather than descriptive words. These notated parameters are also often a clickable link to descriptive explanations in Appendix ??. The link below is an example of a TUFLOW CATCH command with a parameter presented in notation form. Hyperlinks have been removed in this example. CSV Write Frequency Day == \\(dT_{csv-write}\\) Parameter notation The primary groups of parameters are listed below, with the letter or symbol used to denote each. Typical generalisations of units are parenthesised. Time steps, \\(dT\\) (time, seconds or days) Areal rates, \\(R_a\\) (mass per unit area per unit time) Limits, \\(L\\) (mass per unit area) Concentrations, \\(C\\) (mass per unit volume) Time constants, \\(T\\) (seconds) Rain rates, \\(R_r\\) (millimetres per hour) Rain depths, \\(R_d\\) (millimetres) Shear, \\(\\tau\\) (N per m^2) Typically (but not always) an instance of each of these groups will describe a simulated constituent and a process. Where appropriate, the simulated constituent and process are denoted as superscripts and subscripts, respectively. For example: The areal rate of accumulation of nitrate is notated as \\(R_{acc}^{NO_3}\\) The critical shear stress for erosion of sediment fraction 1 is notated as \\(\\tau_{ero}^{sed1}\\), The rain rate threshold for washoff of particulate organic carbon is notated as \\(R_{r}^{POC}\\) The rain depth threshold for washoff of free reactive phosphorus is notated as \\(R_{d}^{FRP}\\) Feedback Constructive suggestions to improve this manual are welcome, and can be emailed to support@tuflow.com. "],["Overview-1.html", "Section 1 Overview 1.1 Context 1.2 Features 1.3 Configurations 1.4 Science 1.5 Support", " Section 1 Overview 1.1 Context TUFLOW CATCH enables the seamless simulation of whole-of-catchment hydrologic, hydraulic, pollutant export and receiving waterway processes. It supports 1D, 2D and 3D simulation of these processes from top of catchment to receiving waterway outlet via solution of the relevant equations of motion and transport, and without recourse to lumped spatial or temporal assumptions. It draws on the power of GPU acceleration to explicitly simulate catchment water flow and pollutant processes in the surface and subsurface, and automatically reconfigures these predictions to drive downstream multidimensional receiving waterway hydrodynamic, sediment transport and water quality models. This modern framework, that draws on advanced compute capability, allows environmental modellers to holistically manage and understand catchments of interest and their receiving waters in an efficient, integrated and rigourous manner, without the need for manual model linking or reliance on top down average assumption modelling techniques. TUFLOW CATCH’s design is flexible so as to support tailoring of its setup to meet individual application demands and complexity, and allows for execution of multiannual studies such as (but not limited to): Assessment of the efficacy of proposed catchment management interventions (such as installation of constructed wetlands) on downstream receiving riverine or estuarine health Assessment of the interaction of catchment inflows with water supply offtakes or other sensitive receptors Quantitative Microbial Risk Assessments Sediment and other pollutant export catchment dynamics investigations \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) 1.2 Features Several key features have been included in the design of TUFLOW CATCH to support its use. Some are listed below. Simulation engine. To affect whole-of-catchment simulation, TUFLOW CATCH links and augments the power and functionality of two existing TUFLOW engines. This means that the decades of development, expertise and rigour embedded in the TUFLOW suite of products is exploited by TUFLOW CATCH. These existing TUFLOW engines are: TUFLOW HPC: Fixed grid simulation of 2D Surface and subsurface catchment hydrology, hydraulics, pollutant export and transport TUFLOW FV: Flexible mesh simulation of 1D, 2D and 3D receiving waterway hydrodynamic, advection dispersion, heat, sediment transport, water quality and particle tracking. Conceptually, TUFLOW CATCH links and coordinates TUFLOW HPC and TUFLOW FV as Figure 1.1. TUFLOW HPC coverage is represented by the fixed grid icons, and TUFLOW FV shown to be contained within the region enclosed by a brown boundary line Figure 1.1: Conceptual arrangement of TUFLOW CATCH engines Pollutant export. TUFLOW CATCH adds pollutant accumulation and washoff functionality to TUFLOW HPC. Pollutants are able to be accumulated and washed off on a cell by cell basis and under a range of user-selectable algorithms (accumulation or shear stress based, for example), and then routed as surface and surface flows and loads, via solution of the equations of motion and transport (rather than using lumped top down averaging assumptions) Automatic linkage TUFLOW CATCH automatically links the bottom of catchment TUFLOW HPC predictions (for both flow and pollutant loads) to the upstream of TUFLOW FV’s model domain to present a single integrated modelling platform to the user, with no need for manual handling or other post/pre processing. To affect this, TUFLOW CATCH automatically Determines the spatial locations where surface and subsurface waters drain to the user defined TUFLOW FV mesh and designates these as inflow locations to TUFLOW FV, and then Writes the TUFLOW HPC predictions as fully formatted TUFLOW FV inflow boundary conditions files and blocks, either as nodestrings or elements Command syntax. TUFLOW CATCH uses familiar TUFLOW style command == argument(s) syntax that has a long established pedigree within all other TUFLOW products Flexibility of constituents. TUFLOW CATCH can simulate any constituents that are initialised in TUFLOW FV, across all its modules, including sediment transport and water quality Log file user feedback. TUFLOW CATCH simulations generate TUFLOW HPC and TUFLOW FV log files as per usual that report all simulation configuration details for review Results viewing. TUFLOW CATCH has its own freely available QGIS plugin to support viewing and interrogation of combined TUFLOW HPC and TUFLOW FV results, as a single data set, such as Figure 1.2 Figure 1.2: Example of QGIS plugin combined results visualisation 1.3 Configurations The primary configurations for which TUFLOW CATCH is intended to be executed are as follows: Hydrology. The most basic configuration of TUFLOW CATCH is to simulate only water movement through surface and subsurface catchment flows, and to automatically route these into a downstream receiving waterway model. Use cases might include investigation of velocity fields in receiving waterways under a range of separate or continuous catchment inflow regimes, or modification of these fields in response to changes in catchment conditions, such as urbanisation. In this instance, the computational engines would be configured as follows: TUFLOW HPC: Simulate surface and subsurface hydrology, and write inflow boundary condition files for TUFLOW FV TUFLOW FV: Simulate only 2D or 3D barotropic hydrodynamics (i.e. without salinity, temperature or water density simulation) Pollutant export. The next level of functionality offered by TUFLOW CATCH is the addition of pollutant export within the catchment simulation, without the explicit and subsequent simulation of the fate and transport fo these pollutants in a downstream waterway model. Use cases might include investigation of pollutant export properties of a catchment under differing rainfall conditions, or the variation of this export in response to the implementation of intervention measures or land use changes. In this instance, the computational engines would be configured as follows: TUFLOW HPC: Simulate surface and subsurface hydrology, with pollutant accumulation, washoff and transport, and write summary files of total pollutant export at catchment outlet. Inflow boundary condition files for TUFLOW FV would also be written but remain unused TUFLOW FV: No direct simulation, other than to inform TUFLOW HPC of the constituents to be simulated. This is affected through TUFLOW CATCH’s interrogation of the sediment transport and water quality configurations specified in the TUFLOW FV simulation. A dummy TUFLOW FV model mesh is automatically generated by TUFLOW CATCH to support this configuration Integrated. This level represents the full functionality offered by TUFLOW CATCH. It augments the Pollutant export configuration above by including the explicit 2D or 3D simulation of the fate and transport of all catchment derived flows and pollutants within the downstream waterway model. Use cases might include the investigation of the efficacy of catchment intervention works on downstream water quality over multiannual periods. In this instance, the computational engines would be configured as follows: TUFLOW HPC: Simulate surface and subsurface hydrology, with pollutant accumulation, washoff and transport, and write summary files of total pollutant export at catchment outlet, as well as inflow boundary condition files for TUFLOW FV TUFLOW FV: Direct simulation of 2D or 3D baroclinic hydrodynamics, with sediment transport and water quality (and optionally particle tracking) as specified by the user If only the simulation of surface and subsurface water flows are of interest with no linkage between TUFLOW HPC and TUFLOW FV (i.e. the Hydrology configuration above but with no linkage to TUFLOW FV), then TUFLOW HPC can be run in isolation without the need for TUFLOW CATCH. Simply setting up and running TUFLOW HPC with appropriate results outputs at bottom of catchment would suffice. If either linkage with TUFLOW FV or simulation of pollutant export is of interest, then TUFLOW CATCH is required. TUFLOW CATCH supports one-way linking of flows and concentrations from TUFLOW HPC to TUFLOW FV. 1.4 Science The science underpinning TUFLOW CATCH is that developed for TUFLOW HPC and TUFLOW FV (including their respective modules) and is described in those user and science manuals: TUFLOW HPC TUFLOW FV TUFLOW FV Sediment Transport module TUFLOW FV Water Quality module TUFLOW FV Particle Tracking module 1.5 Support BMT sells, distributes and supports TUFLOW CATCH. Contact support@tuflow.com or sales@tuflow.com for support and sales inquiries. Several supporting appendices have also been included in this manual. These contain content to assist users in understanding and applying TUFLOW CATCH. These Appendices are interlinked and hyperlinked with content from the body of the manual where appropriate, and are: Appendix ?? Description of command syntax and nomenclature Appendix 5 Listing of all commands, and their syntax, arguments, descriptions and cross references Appendix ?? includes a purpose built small TUFLOW CATCH demonstration model The user is directed to the respective manuals noted in Section 1.4 above for TUFLOW HPC and TUFLOW FV commands other than those specific to TUFLOW CATCH. "],["Architecture-1.html", "Section 2 Architecture 2.1 Context 2.2 Core Architecture", " Section 2 Architecture This section provides a description of TUFLOW CATCH’s core architecture. This description is intentionally introductory, and details required to set up and execute simulations that deploy TUFLOW CATCH are provided in Section 4. \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) 2.1 Context As our understanding of the natural environment advances, the questions asked of environmental numerical models are rapidly increasing in breadth and complexity. Setting up, calibrating and executing defensible environmental models to assist in addressing these questions has therefore become an increasingly challenging proposition. This is particularly relevant with regard to whole-of-catchment studies where the linkage between catchment management intervention and associated receiving water quality changes is of increasing interest (and complexity) within the environmental management space. The architecture and functionality of TUFLOW CATCH has therefore been deliberately designed to assist environmental modellers in overcoming some of these challenges, and in doing so improve the efficiency and effectiveness with which numerical modelling can support environmental management at the catchment scale. Importantly, TUFLOW CATCH’s architecture provides a mechanism by which users can seamlessly simulate hydrologic, hydraulic, pollutant export and transformative receiving water quality processes within one unified, automated and internally consistent framework. This deliberate design choice has been motivated by the observation that historically, catchment and receiving waterway simulations have often been undertaken using disparate modelling platforms not designed or intended to be linked, and that (more often then not) operate under materially different assumptions and levels of internal scientific rigour. One example of such an instance might be where predictions from a catchment model that uses average (spatially and temporally lumped) hydrology and pollutant export assumptions are used to provide inflow boundary conditions to a fully three dimensional receiving water quality model that operates on a highly spatial and temporally resolved domain and makes limited average assumptions. TUFLOW CATCH exploits the latest compute power advances and scientific rigour to overcome such problematic disconnects. In short, TUFLOW CATCH has been designed to provide access to state of the art environmental modelling science at the integrated catchment scale. The core architecture that provides this easy access is described below. The associated execution commands are provided in Section 4, and the details of the methods deployed in supplementary processes such as geolocation are described in Sections 3.1 and 3.2. 2.2 Core Architecture TUFLOW CATCH provides three primary functions: Coordination of the execution of TUFLOW HPC and TUFLOW FV across a whole-of-catchment domain Automatic geolocation and writing of flow and concentration boundary conditions for TUFLOW FV (as the receiving water model), generated from TUFLOW HPC (as the catchment model) predictions Pollutant export and transport calculations within a catchment The first of these is its core architectural capability and so is described here in Section 2.2.1. The latter two are technical componentry of this acrchitecture and so are detailed in Sections 3.1 and 3.2, respectively. 2.2.1 Execution Coordination TUFLOW CATCH overarches both TUFLOW HPC and TUFLOW FV to coordinate their execution to affect integrated numerical simulation of water and pollutant flows (and transformations) across a catchment and its receiving waters. Whilst not undertaking the solution of equations itself, TUFLOW CATCH does coordinate these supporting TUFLOW products to do so in their respective domains, which are: TUFLOW HPC: 1D and 2D surface and subsurface catchment hydrology and hydraulics, with pollutant export and transport TUFLOW FV: 1D, 2D and 3D hydrodynamic, sediment transport, water quality and particle tracking (or module subsets thereof) receiving waterway modelling The order of execution of TUFLOW HPC and TUFLOW FV, coordinated automatically under TUFLOW CATCH is as follows: Execute TUFLOW FV, run in test mode, with the intention of Reading the TUFLOW FV model mesh (either as built by the user, or as a dummy mesh constructed by TUFLOW CATCH if no user mesh is specified) and writing the associated mesh check file for subsequent use by TUFLOW HPC in its automatic geolocation processes Reading the TUFLOW FV sediment transport and/or water quality log files to determine the suite of constituents to be simulated in the receiving waterway, and therefore those that require specification and simulation as catchment based pollutants in TUFLOW HPC. If no pollutants are to be simulated (i.e. TUFLOW CATCH is intended only for use in terms of water simulation) then these files will be absent and their interrogation skipped accordingly Execute TUFLOW HPC, with the intention of Reading the TUFLOW FV mesh check files to determine the receiving water model domain location and extent Comparing this mesh with the TUFLOW HPC grid to then determine which TUFLOW HPC cells are to be designated as transfer cells where boundary conditions for TUFLOW FV are to be written (see Section 3.1) from TUFLOW HPC predictions Checking the pollutants specified in the pollutant export model for consistency with those set in the TUFLOW FV simulation (if any) Executing the TUFLOW HPC catchment based hydrologic, hydraulic and/or pollutant export modelling (if requested) over the period specified Writing TUFLOW FV boundary conditions at designated transfer cells Reporting catchment based simulation results such as dynamic pollutant concentrations in the surface and/or subsurface domains, dry store evolutions and/or ersoion/deposition zones (see Section 3.2) Re-execute TUFLOW FV (optional, only if receiving waterway processes are to be investigated), with the intention of Executing 1D, 2D and 3D hydrodynamic, sediment transport, water quality and particle tracking (or subsets thereof) receiving waterway modelling, using the boundary conditions developed by TUFLOW HPC above Reporting receiving waterway simulation results such as pollutant concentrations and diagnostic mass fluxes The intention of the above execution coordination is that it provides a robust means to automatically unidirectionally link catchment and receiving waterway models to support integrated environmental assessment. It is noted that this architecture: Supports multiple users working on a project simultaneously by allowing (from the same TUFLOW CATCH control file): Simulation of TUFLOW HPC without needing to execute TUFLOW FV (other than in test mode), and/or Simulation of TUFLOW FV without needing to execute TUFLOW HPC. In this instance inflow boundaries are assumed to be zero flow, which is useful for model build stages such as mesh construction, checking, speed testing and dry weather tidal / thermal stratification calibration Aligns with the use of versioning control platforms (such as GitHub or GitLab, for example), to support multi-user co-development. Such use under versioning platforms was intended as part of TUFLOW CATCH’s architectural development, and it means that the same TUFLOW CATCH control file can be used by multiple users to drive respective TUFLOW HPC and TUFLOW FV model builds - the model development process is then unified under one control file’s umbrella, and the need to build disparate TUFLOW HPC and TUFLOW FV models, and then somehow recast these into a TUFLOW CATCH control file framework, is avoided. "],["ProcessDescriptions-1.html", "Section 3 Process Descriptions 3.1 Geolocation 3.2 Pollutant Export", " Section 3 Process Descriptions Previous chapters have presented an overview of the architecture and capabilities of TUFLOW CATCH. This chapter presents the details of the processes that TUFLOW CATCH executes. It does not present the processes executed by either TUFLOW HPC or TUFLOW FV: these are detailed in the respective model manuals and should be referred to as such. TUFLOW CATCH provides three primary functions: Coordination of the execution of TUFLOW HPC and TUFLOW FV across an entire catchment and receiving water domain Automatic geolocation and writing of flow and concentration boundary conditions for TUFLOW FV, generated from TUFLOW HPC predictions Pollutant export and transport calculations within a catchment The first of these is its core architectural capability and so is described in Section 2.2.1. The latter two are technical componentry of this acrchitecture and so are detailed here in Sections 3.1 and 3.2, respectively. 3.1 Geolocation Manually linking catchment and receiving water models can potentially be a time-consuming and error prone process. TUFLOW CATCH undertakes this task automatically via a process of geolocation, whereby TUFLOW HPC cells that spatially coincide with either (user nominated, see Section XXXX) TUFLOW FV nodestring inflows or TUFLOW FV mesh cells are identified. These TUFLOW HPC cells are called transfer cells. Once identified, these transfer cells track the local surface and groundwater flow volumes and constituent masses predicted by TUFLOW HPC, and each transfer cell’s outflows are converted into timeseries of flow rates and concentrations and exported into the comma delimited (.csv) format expected by TUFLOW FV. It is noted that: Where the user has nominated a nodestring/s as transfer locations from TUFLOW HPC to TUFLOW FV, TUFLOW CATCH will write the corresponding TUFLOW FV boundary condition files as ‘Q’ types that include the transfer of momentum from TUFLOW HPC to TUFLOW FV. As such, these boundaries (and specifying the corresponding TUFLOW FV nodestrings) should be considered where channelised riverine inflows and the like are to be matched, i.e. where inflow momentum is important in controlling receiving water hydrodynamics Where TUFLOW CATCH automatically geolocates non-nodestring transfer locations from TUFLOW HPC to TUFLOW FV, TUFLOW CATCH will write the corresponding TUFLOW FV boundary condition files as ‘QC’ types that exclude the transfer of momentum from TUFLOW HPC to TUFLOW FV. As such, these boundaries should typify non-channelised ‘lateral’ inflows where momentum transfer is less important in controlling receiving water hydrodynamics Boundary data for TUFLOW FV is written with date (dd/mm/yyyy hh:mm:ss) format. This automated selection of linkage cells is sufficiently robust to handle differences in mesh/grid resolution between TUFLOW HPC and TUFLOW FV, including cases where the TUFLOW HPC model is higher resolution than the (local) TUFLOW FV model mesh, and vice-versa. Some typical cases are presented in Figure 3.1. Figure 3.1: Examples of linkages under varying TUFLOW HPC and TUFLOW FV cell resolutions If a TUFLOW FV mesh element does not contain one or more TUFLOW HPC cell centres, then the TUFLOW HPC cell that contains the TUFLOW FV element centroid is selected. Finally, after all mesh elements and boundary nodestrings are processed, any cells entirely within the TUFLOW FV mesh are deactivated entirely from TUFLOW HPC computations - these locations within the overall model domain are simulated by TUFLOW FV. The locations of the TUFLOW HPC transfer cells automatically geolocated by TUFLOW CATCH are reported in the TUFLOW HPC ‘hpc_transfer’ check file for review. The corresponding TUFLOW FV boundary condition locations are also reported in the TUFLOW FV ‘bc_check_P’ check files. An example of both is presented in Figure 3.2, with TUFLOW HPC and TUFLOW FV check file outputs on the left (brown squares) and right (red dots), respectively. Figure 3.2: HPC transfer cell (left) and TUFLOW FV boundary cell (right) check file examples The above geolocation process does not exclude or prevent the TUFLOW FV user from manually specifying additional boundaries to a TUFLOW FV model. For example, tidal or wastewater discharge (or other) boundaries can be specified by the user within the TUFLOW CATCH control file as per a normal TUFLOW FV model set up by specify ‘bc’ blocks as required. TUFLOW CATCH will collect these manual (user defined) boundaries and all automatically geolocated boundaries and apply them to the execution of TUFLOW FV under TUFLOW CATCH. An example of how this geolocation method supports transfer of water, concentrations and momentum is provided in Figure 3.3. The animation presents a catchment derived TUFLOW HPC flow originating from left of screen (and from the fixed grid domain) being transferred automatically into the (flexible mesh) TUFLOW FV domain, and then advected downstream to the right. Constituent concentrations vary from low (blue) to red (high). Figure 3.3: Example of transferral of an inflow (from left to right) from TUFLOW HPC to TUFLOW FV 3.2 Pollutant Export TUFLOW CATCH supports the simulation of pollutant generation and transport. It does so on a spatially varying basis via use of materials so that, in a manner analogous to hydraulic roughness calculations (that also use materials), pollutant export simulation is ultimately affected on a computational cell by computational cell basis. This obviates the need to make lumped hydrologic or pollutant export related assumptions, and facilitates the solution of the equations of motion and constituents on a spatially and temporally resolved basis. \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) In general terms, pollutant export simulation within TUFLOW CATCH allows for either: Specification of a constant concentration (to be written to TUFLOW FV boundary conditions without numerical simulation. Examples include water quality constituents that are not meaningfully conceptualised as being liberated from a ground surface, such as dissolved oxygen, or Specification of a time varying concentration (again to be written to TUFLOW FV boundary conditions without numerical simulation). Examples include water temperature Specification of the following on a material by material basis, for a given pollutant: The computational pollutant export method to be used The parameters associated with the selected computational pollutant export method, or Different pollutant export methods across the above options for different pollutants can be used within a single TUFLOW CATCH simulation. Commands are provided in detail in Section 4, however an example of such a specification is provided following, with incomplete (…) parameter lists for brevity. Constant POLLUTANT_C == 8.0 Time-series POLLUTANT_D == temptre Material == 1,4 \\(\\blockindent\\)POLLUTANT_A,method==sed4,param1==43.0… \\(\\blockindent\\)POLLUTANT_B,method==rate,param1==12.0… \\(\\blockindent\\)POLLUTANT_X,method==sed1,param1==0.37… \\(\\blockindent\\)POLLUTANT_Y,method==sed2,param1==5.23… \\(\\blockindent\\)… End Material Multiple constant and time-series pollutants can be specified, and material blocks can be specified to apply to more than one material (the above example applies to materials 1 and 4, for example). Different computational pollutant export methods can be assigned to different pollutants within a single material block. The above pollutant export models are described following. 3.2.1 Constant The constant pollutant export method is the simplest of all available methods. It does not involve any calculations within TUFLOW CATCH. Rather, it has TUFLOW CATCH assign the specified constant value to the relevant column in all TUFLOW FV boundary condition files produced, for all times. It is suitable for pollutants that are conceptually inconsistent with generation from a ground surface, such as dissolved oxygen or phytoplankton. 3.2.2 Timeseries The constant pollutant export method does not involve any calculations within TUFLOW CATCH. Rather, it has TUFLOW CATCH assign an interpolated timeseries value to the relevant column in all TUFLOW FV boundary condition files produced. Interpolation is based on matching the specified timeseries timestamp with the output frequency of TUFLOW FV boundary condition files. It is suitable for pollutants that are conceptually inconsistent with generation from a ground surface and also likely to vary temporally, such as water temperature. One timeseries per pollutant can be specified and it is applied across the entire model domain. 3.2.3 Accumulation and washoff Accumulation/washoff methods are common in urban water modelling and are conceptually distinct from event mean concentration / dry weather concentration (EMC/DWC) methods. The former have been the subject of considerable research and development since at least the 1970s. In short, the accumulation washoff method conceptualises pollutant accumulation during no-flow or low-flow conditions and washoff during higher-flow conditions. Typically, a proportion of the accumulated pollutant runs off if a threshold flow or flow depth is reached (i.e. enough energy is available for liberation of mass). This mechanism is generally based on a non-linear function for the runoff, if runoff is not explicitly simulated (e.g. in models that make lumped average assumptions). TUFLOW CATCH’s implementation of this method (that explicitly simulates hydrology so does not resort to such lumped assumptions) is described following. 3.2.3.1 Accumulation TUFLOW CATCH allows for the specification of accumulation rates (kg/ha/yr) for each pollutant simulated, on a spatially varying (material by material) basis. These rates are linearly applied in time until a user specified maximum areal mass (also kg/ha/yr) is reached. Even though these rates and maximums are specified per material, they are used to undertake accumulation calculations on a cell by cell basis at the beginning of every timestep. For example, if a user has specified a 5 metre TUFLOW HPC grid size, then pollutant accumulation calculations will be undertaken at this same spatial resolution. As each pollutant accumulates, it is added to TUFLOW CATCH’s dry store mass, which is also tracked on a cell by cell basis. It is this dry store mass that is then depleted (washed off) when user specified hydrologic conditions are met (see Section 3.2.3.2). Each pollutant’s and each cell’s dry store mass is temporally incremented at the specified rate, up to a user specified limiting areal mass (kg/ha). One advantage of the pollutant accumulation method is that the user has full control over the spatial distribution of the associated rates, through the use of materials. Specifically, each material is assigned these rates, and materials are (typically) specified as polygons that cover regions with similar pollutant properties (analogous to roughness materials). Although it may seem natural to equate this spatial distribution of pollutant properties with land uses (as is often the case in lumped hydrology/pollutant export models), this is not a requirement of TUFLOW CATCH. Indeed, the user has full discretion with regard to how pollutant properties are set, and whilst perhaps making initial use of land use data, it is possible that different material polygons that represent the same land use are given different pollutant properties. For example, an ‘urban’ land use might be tagged to two separate housing estates in a generic land use GIS vector layer, but the user may also know that one estate has stormwater treatment devices in place and the other does not. In such an instance, different pollutant accumulation (and washoff) parameters can be applied through TUFLOW CATCH. In short, TUFLOW CATCH has been deliberately designed to allow users to insert their local knowledge of the systems being modelled into the model build process directly, down to a cell by cell spatial resolution if required, without being limited by lumping assumptions. Akin to the flexibility offered in spatial resolution, TUFLOW CATCH allows full control over the specification of pollutant accumulation rates, and in doing so allows the user to inform the modelling process with local knowledge and expertise. Users are therefore encouraged to undertake their own reviews and specifications of pollutant accumulation rates, and assocaited material configurations. Notwithstanding this, some indicative pollutant accumulation rates are provided in Table 3.1. These are indicative and are not intended to be seen as endorsed or recommended. Table 3.1: Indicative pollutant accumulation rates Pollutant Lower estimate (kg/ha/yr) Upper estimate (kg/ha/yr) Ammonium 0.20 2e+00 Nitrate 0.50 3e+00 Filterable reactive phosphorus 0.01 3e-02 Dissolved organic nitrogen 1.00 2e+00 Particulate organic nitrogen 1.00 3e+00 Dissolved organic phosphorus 0.01 5e-03 Particulate organic phosphorus 0.06 6e-01 Dissolved organic carbon 20.00 7e+01 Particulate organic carbon 12.00 4e+01 The relevant TUFLOW CATCH commands are described in Section XXXX. 3.2.3.2 Washoff TUFLOW CATCH allows for the specification of the manner in which the accumulated dry store mass described in Section 3.2.3.1 is washed off in response to local hydrologic conditions. This specification occurs in the same command line as accumulation rates (for a given pollutant), which is therefore also on a material by material basis: for a given material and pollutant, the accumulation and washoff parameters are co-specified, and therefore related. The TUFLOW CATCH washoff method is presented conceptually in Figure 3.4. Under wet weather conditions, a mass \\(\\Delta\\) is dissolved from the dry store mass (\\(\\alpha_{dry}\\)) into the wet store (\\(\\alpha_{wet}\\)) (i.e. to add to a water concentration) at a rate given by a user defined time constant (also referred to as a time of concentration), T\\(_c\\), such that over a timestep \\(dt\\): \\[\\begin{equation} \\Delta = dt\\frac{\\alpha_{dry}}{T_c} \\tag{3.1} \\end{equation}\\] This dissolution only occurs once user-specified minimum rain rates, \\(RR_{min}\\), and surface water depths \\(d_{min}\\) have both been exceeded. Otherwise, the dry store masses described in Section 3.2.3.1 are accumulated at the rates specified. Figure 3.4: Washoff method If a pollutant is released into its wet store, it is transported according to the progression of hydraulic flows (and associated advection and dispersion), which is completed as a separate calculation step to the generation update. Settling velocities can be optionally assigned to individual pollutants. Any settling returns pollutants from the wet store to the dry store. This is not recommended for dissolved pollutants. If soils and subsurface flow (interflow) is not simulated in TUFLOW HPC, then this transport is purely surficial. If soils are included then released pollutants will be transported in both the surface and subsurface in accordance with water flows. TUFLOW CATCH allows for the optional prevention of infiltration of a given pollutant into the subsurface flow if soils are included in the TUFLOW HPC simulation. This is relevant for particulate pollutants such as sediment or particulate organic material. A conceptualisation of TUUFLOW CATCH’s pollutant generation and transport methods is presented in Figure 3.5. Figure 3.5: TUFLOW CATCH pollutant generation method The relevant TUFLOW CATCH commands are described in Section XXXX. 3.2.4 Shear Stress Shear stress generation methods are common in natural waterway (e.g. estuaries and coastal oceans) modelling studies, particularly with regard to the simulation of sediment transport. In short, these methods conceptualise sediment release from the bed as a function of overlying hydrodynamic shear stress: once a specified minimum shear stress is exceeded, sediment is released to the water column. Similarly, these methods also allow for deposition of previously suspended sediment back to the bed, and this is typically allowed to occur once hydrodynamic shear stress drops below a specified maximum depositional shear stress. More advanced methods allow for construction of intermediary bed roughness models that translate raw hydrodynamic shear stress to the corresponding shear stress that is actually felt by the bed and can therefore cause erosion (or allow deposition). These methods therefore allow for the ongoing erosion and deposition of particulate materials as hydrodynamic conditions evolve in time and space.TUFLOW CATCH’s implementation of this method is described following. 3.2.4.1 Erosion TUFLOW CATCH allows for the specification of erosion behavior of any pollutant, on a spatially varying (material by material) basis. Even though this behaviour is specified per material, it used to undertake erosion calculations on a cell by cell basis at the beginning of every timestep. For example, if a user has specified a 5 metre TUFLOW HPC grid size, then erosion calculations will be undertaken at this same spatial resolution. As each pollutant erodes from its dry store mass, it is transferred to its wet store and advected/dispersed accordingly. This removal is tracked and reported at the end of a simulation as a loss to each cell’s dry store mass (kg/ha). TUFLOW CATCH adopts the Mehta erosion model on a cell by cell basis, such that the erosive flux \\(F_e\\) (g/m\\(^2\\)/s) is given by Equation (3.2) \\[\\begin{equation} F_e = E_r\\left(\\frac{\\tau}{\\tau_{ce}}-1\\right)^{\\alpha} \\tag{3.2} \\end{equation}\\] \\(E_r\\) is the erosion rate constant (g/m\\(^2\\)/s), \\(\\tau\\) is the hydrodynamic shear stress (N/m\\(^2\\)), \\(\\tau_{ce}\\) is the user specified critical shear stress for erosion (N/m\\(^2\\)), \\(\\alpha\\) is set to 1.0 and \\(\\tau &gt; \\tau_{ce}\\). TUFLOW CATCH does not deploy a bed roughness model so \\(\\tau\\) is the pure hydrodynamic shear stress calculated from cell velocity. Once computed, \\(F_e\\) is multiplied by cell area and timestep to compute eroded mass flux. This eroded mass is tracked so that at simulation end, TUFLOW CATCH produces a map of eroded areas that allows for identification, fro example, of ‘hotspot’ erosion locations. Users can specify a limit to the mass of pollutant that is eroded within each material to simulate, for example, the attainment of bedrock. The cell water depth below which no erosion occurs is also user specifiable. The relevant TUFLOW CATCH commands are described in Section XXXX. 3.2.4.2 Deposition TUFLOW CATCH allows for the specification of depositional behavior of any pollutant, on a spatially varying (material by material) basis. Even though this behaviour is specified per material, it used to undertake deposition calculations on a cell by cell basis at the beginning of every timestep. As each pollutant deposits from its wet store mass, it is transferred to its dry store mass. This deposition is tracked and reported at the end of a simulation as a gain to each cell’s dry store mass (kg/ha). TUFLOW CATCH adopts the Krone deposition model on a cell by cell basis, such that the depositional flux \\(F_d\\) (g/m\\(^2\\)/s) is given by Equation (3.3) \\[\\begin{equation} F_d = \\left(1-\\frac{\\tau}{\\tau_{cd}}\\right)w_sC \\tag{3.3} \\end{equation}\\] \\(\\tau\\) is the raw hydrodynamic shear stress (N/m\\(^2\\)), \\(\\tau_{cd}\\) is the user specified critical shear stress for deposition (N/m\\(^2\\)), w\\(_s\\) is the user specified settling velocity, \\(C\\) is the wet store cell concentration of pollutant and \\(\\tau &lt; \\tau_{cd}\\). The relevant TUFLOW CATCH commands are described in Section XXXX. "],["SimulationConstruction-1.html", "Section 4 Simulation Construction 4.1 Context 4.2 Initialisation 4.3 General arrangement 4.4 Intent 4.5 Initialisation 4.6 TUFLOW FV control file commands 4.7 Water quality control file commands 4.8 Simulation Class: DO", " Section 4 Simulation Construction 4.1 Context Previous sections have presented the architecture and processes available within TUFLOW CATCH. This section describes the construction of a TUFLOW CATCH simulation. This includes descriptions of all commands, with hyperlinks to the Appendices where commands and explanations are listed in a searchable and sortable table for ease of access. 4.2 Initialisation TUFLOW CATCH requires construction of a suite of folder substructures to support simulations. Ideally, these should be all co-located at the same folder level underneath a single directory that sits within an overall project directory. These substructures correspond to each of the three products used in a TUFLOW CATCH simulation and should be names as follows: TUFLOWCATCH TUFLOW (TUFLOW HPC) TUFLOWFV Each of these substructures has its own subfolder structure, consistent with those suggested for each for standalone TUFLOW HPC and TUFLOW FV modelling studies. For consistency, the suggested TUFLOWCATCH substructure is also similar. To assist with this set up, and indeed more broadly with the initialisation, execution and results interrogation of a TUFLOW CATCH simulation, a freely available TUFLOW CATCH QGIS plugin has been developed. TUFLOW eLearning resources (also free of charge) have been prepared to support deployment and use of this TUFLOW CATCH plugin, and as such the content of that resource is not repeated here. Users are however encouraged to access this resource before initialising their first TUFLOW CATCH simulation: using this plugin is seen as a core component of the set up of a TUFLOW CATCH simulation. Doing so manually is discouraged. The eLearning materials can be accessed by: Registering for TUFLOW eLearning here if not already registered Emailing support@tuflow.com noting the registered username and with a request access to the TUFLOW CATCH plugin eLearning course Following instructions subsequently provided to access the course Complete the course On completion of the course, users will be able to initialise a TUFLOW CATCH simulation in the desired geographical projection system, complete with automatically populated templates for all control files. The sections following assume that this initialisation process has occurred and describe the resulting general arrangements and subsequent construction of a TUFLOW CATCH simulation. 4.3 General arrangement 4.3.1 Control file A TUFLOW CATCH simulation is set up and executed by constructing a TUFLOW CATCH control file, extension *.tcc. This control file has four separate but linked blocks: Global commands TUFLOW HPC commands Pollutant export commands TUFLOW FV commands All blocks must be included in the above order, but can be optionally switched on and off with a single command (rather than extensive line commenting) to suit modelling needs. For example, a user working only on HPC model build tasks can turn off the pollutant export and TUFLOW FV sections and continue building a TUFLOW HPC model as per normal, without the need to always run all components of TUFLOW CATCH. ### Folder structure {#SCGeneralFS-2} 4.4 Intent TUFLOW CATCH coordinates and executes TUFLOW HPC, a pollutant export model and TUFLOW FV, all automatically and with no direct user input required to affect this linkage. This does not mean that TUFLOW CATCH cannot be run until all models (TUFLOW HPC, pollutant export and TUFLOW FV) are fully constructed. To the contrary, the intention is that for application to integrated catchment studies that will at some stage need to draw on the power of TUFLOW CATCH, the single TUFLOW CATCH control file is used as the common control file for all model construction from project inception, even where this construction is undertaken in parallel by multiple users. The reason for this is that, for example, the TUFLOW HPC block of the TUFLOW CATCH control file is nothing other than a standard TUFLOW HPC *.tcf control file, with a small number of additional TUFLOW CATCH commands. This is intentional, and means that an experienced (or beginner) TUFLOW HPC modeller can follow normal model set up processes and procedures to construct the TUFLOW HPC component of TUFLOW CATCH model, unhindered, but via the TUFLOW CATCH control file arrangement. The same logic applies to users constructing the TUFLOW FV sections of a TUFLOW CATCH model - the TUFLOW HPC sections of the TUFLOW CATCH control file can be turned off and TUFLOW FV model construction commenced as usual through the *.tcc rather than *.fvc control file. Users in teams that adopt this approach may want to consider using versioning control software to manage concurrent multiple user contributions. It is understood that in some legacy cases, existing TUFLOW HPC or TUFLOW FV models (that were originally built outside TUFLOW CATCH) will need to be converted into a block of a TUFLOW CATCH control file. If this is the case, then the process is a matter of copying and pasting from the original control files into the relevant TUFLOW CATCH control file block and populating the supporting folder structures with model data. The key change that will be required on pasting into a *.tcc block will be to change file path references to be to the folder structure associated with the TUFLOW CATCH simulation (see Section ). This is only required from the *.tcc as it points to immediately called files, and no further. 4.5 Initialisation TUFLOW FV and WQ Module control file commands are presented following. 4.6 TUFLOW FV control file commands A TUFLOW FV simulation is executed as described in the TUFLOW FV user manual. If the WQ Module is to be activated in a simulation then the following commands are to be included. 4.6.1 WQ Module activation Activation of the WQ Module is affected by specification of the following mandatory command in the TUFLOW control file: water quality model == TUFLOW Following this activation, TUFLOW FV will look for the specification of the name of the separate WQ Module control file via the following mandatory command: water quality control file == &lt;water quality control file name&gt;.fvwq This *.fvwq is separate to the *.fvc and contains user specified information that describes the configuration of the water quality simulation. If the *.fvwq is located in the same directory as the *.fvc, then this filename specification needs no associated path. It is recommended however that the *.fvwq be located in a directory separate to the *.fvc so that log and other related water quality specific files can be easily curated. If this approach is adopted, the following additional *.fvc command is required, noting that the folder path is specified as relative to the folder in which the *.fvc resides: water quality model directory == &lt;relative path to WQ directory&gt;\\(\\backslash\\) This command must terminate in a \\(\\backslash\\) character. If this command is issued, then the *.fvwq water quality control file must be located in the directory specified. In certain circumstances, executing water quality calculations in shallow cells can cause numerical instabilities. To control this behaviour, the WQ Module allows for water quality calculations to be switched off in cells that have depths less than a specified minimum (advection dispersion calculations will however continue to be performed - it is only the water quality-related non-conservative transformations that are turned off). This minimum depth (in meters) is specified in the TUFLOW FV *.fvc via the command: cell water quality depth == \\(d_{min-wq}\\) If this command is not issued then the default minimum depth of 0.01m (1cm) is applied. This command parallels the TUFLOW FV command that controls the execution of hydrodynamic calculations as a function of water depth: cell wet/dry depths == cell dry depth (m), cell wet depth (m) In this TUFLOW FV command: The cell dry depth value (default = 1.0e-06 m) corresponds to the water depth below which a cell is dropped completely from hydrodynamic (TUFLOW FV) computations (subject to the status of surrounding cells) and is therefore considered to be ‘dry’. Cells that have dried in a given time step are given a stat value of 0 in all TUFLOW FV results files, so this stat field acts as a mask to determine which cells are wet and dry when using post processing tools and or scripts. Dry cells are not contoured in QGIS or SMS when viewed, but appear as transparent. If set to a negative value the cell dry depth is set to zero. The cell wet depth value (default = 1.0e-02 m) corresponds to the water depth below which a cell’s momentum is set to zero in order to avoid unphysical velocities at very low depths. The cell is not considered to be dry and therefore has a stat value of -1. If this value is less than or equal to the cell dry depth, it is set to the cell dry depth. Given this, it is therefore recommended that across these commands and/or defaults, a user ensures that the following holds (as it does for the default values noted above): \\[\\begin{equation} \\text{cell dry depth} \\lt \\text{cell wet depth} \\lt \\text{cell water quality depth} \\tag{4.1} \\end{equation}\\] If, for example, cell water quality depth is set to a value less than cell dry depth, then water quality calculations will be attempted on cells that TUFLOW FV considers to be dry, which is to be avoided. If a situation arose where it was absolutely necessary, then cell water quality depth could be set to a value less than cell wet depth (but still greater than cell dry depth), but this is not recommended. To summarise, and if the recommended relative magnitudes of depths presented in Equation (4.1) is adopted, then the following applies: water depth \\(\\gt\\) cell water quality depth: water quality calculations and momentum calculations performed cell water quality depth \\(\\gt\\) water depth \\(\\gt\\) cell wet depth : water quality calculations switched off, momentum calculations performed (advection and dispersion calculations also performed on water quality variables) cell wet depth \\(\\gt\\) water depth \\(\\gt\\) cell dry depth: water quality calculations switched off, momentum calculations switched off (advection and dispersion calculations also performed) cell dry depth \\(\\gt\\) water depth: no calculations performed - cell is considered dry To support debugging, water quality calculations can also be turned off completely for all cells and all timesteps by issuing this command in the TUFLOW FV *.fvc: disable water quality model == \\(B_{disable-wq}\\) and setting \\(B_{disable-wq}\\) = 1. Omitting this command, or setting \\(B_{disable-wq}\\) to zero (“0”) instead of one (“1”), will activate water quality calculations. If this command is set to one (“1”), then the WQ Module will still initialise are report as such, but when TUFLOW executes, the module will not be called. Consistent with their specification in the *.fvc, the status of these latter two commands and their arguments are reported in the TUFLOW FV log file, rather than the WQ Module log file. An example block of these five commands that together activate the WQ Module, point TUFLOW FV to the water quality control file ..\\(\\backslash\\)WQ\\(\\backslash\\)Model_000.fvwq and set the minimum depth for executing water quality calculations to 5 centimetres is: water quality model == TUFLOW water quality model directory == ..\\WQ\\ water quality control file == .\\Model_000.fvwq cell water quality depth == 0.05 disable water quality model == 0 4.6.2 Initial and boundary conditions In addition to activating the WQ Module and specifying its control file, WQ Module initial and boundary condition information is also set through the TUFLOW FV control file. The processes for doing so are described below. These are followed by discussion of the related matter of constituent ordering within initial and boundary condition specifications. 4.6.2.1 Initial conditions Water quality initial conditions are specified within or via the TUFLOW FV control file, akin to the manner in which the sediment initial conditions are set on behalf of the sediment transport module. This specification is mandatory. There are currently a number of ways that water quality initial conditions may be specified. All are affected through TUFLOW FV commands which are described in the TUFLOW FV user manual. If no water quality initial conditions are specified, then a simulation will not execute. The specifications relevant to water quality simulations are described below. The potential limitations of some of these approaches are recognised and will be addressed in future release of the WQ Module. 4.6.2.1.1 Restart files Restart files are binary files that are generated from previous simulations. These can be used as inputs to initialise water quality simulations, provided that the restart and simulation model geometries, and water quality simulation computed variables and units are identical. A restart file is specified for all simulated quantities (not just water quality) and is controlled through commands described in the TUFLOW FV user manual. The key command is restart == &lt;restart file name&gt;.rst Most often, restart files are located in the log directory, but this is not mandatory. 4.6.2.1.2 Globally uniform Globally uniform (i.e. across all spatial dimensions) initial conditions are set via a command issued from within the TUFLOW FV control file. This is often useful in setting initial conditions for simple small water bodies or at the commencement of a modelling process where initial conditions are set to be placeholders and updated at a later time. The command to do so is: initial wq concentration == ordered initial conditions Each water quality computed variable is set to a single value everywhere. These initial concentrations must be specified in a particular order and this order is described in the following sections for different simulation classes. If the above command is used to set water quality initial conditions, then it must be accompanied by parallel commands that set globally uniform salinity, temperature (and optionally sediment) initial conditions: initial temperature == 15.0 initial Water Level == 1.00 initial sediment concentration == 10.0 initial salinity == 3.5 Setting a mix of globally uniform and other initial conditions (such as profile, 2d or 3d) is not permitted. 4.6.2.1.3 Globally laterally uniform Globally laterally uniform initial conditions use an initial profile to set hydrodynamic and water quality computed variable concentrations to be everywhere the same laterally, but to vary vertically. This is often useful in setting initial conditions for deep stationary water bodies such as lakes or reservoirs. The command to do so is: initial scalar profile == &lt;initial condition file name&gt;.csv An example of the form of the text file argument initial condition file name.csv for simulating five water quality constituents is: Depth,Sal,temp,sed_1,WQ_1,WQ_2,WQ_3,WQ_4,WQ_5 0.0,2.0,22.0,5.0,8.0,22.0,2.6,1.4,0.5 10.0,2.5,15.0,15.0,5.0,32.0,2.6,1.4,0.2 20.0,3.0,10.0,25.0,0.0,42.0,5.6,5.4,0.1 If the above command is used, then it must include profile information that also sets laterally uniform salinity, temperature (and optionally sediment) initial conditions. Setting a mix of laterally uniform and other initial conditions (such as globally uniform, 2d or 3d) is not permitted. The order of these columns in the argument csv file is not important, but the columns headers are keywords and must be used as shown. For example, the following structure for initial condition file name.csv is permitted: Depth,temp,WQ_3,Sal,sed_1,WQ_4,WQ_1,WQ_2,WQ_5 0,22,2.6,2,5,1.4,8,22,0.5 10,15,2.6,2.5,15,1.4,5,32,0.2 20,10,3,3,25,5.4,0,42,0.1 Notwithstanding this, it is still considered best practise to develop initial and boundary condition files that have a logically sequential order. Water quality initial conditions headers are labelled “WQ_1”, “WQ_2” onward, and the match between these header labels and water quality computed variables is set by the computed variable ordering of the simulation class deployed. 4.6.2.1.4 Globally vertically uniform Globally vertically uniform initial conditions use an initial two dimensional map to set hydrodynamic and water quality computed variable concentrations to be everywhere the same vertically, but to vary laterally. This is often useful in setting initial conditions for shallow water bodies that have horizontal concentration gradients such as small estuaries or urban lakes. The command to do so is: initial condition 2d == &lt;initial condition file name&gt;.csv An example of the form of the text file argument initial condition file name.csv for simulating five water quality constituents is: ID,WL,sal,temp,sed_1,WQ_1 1,1.0,3.5,15,10.0,8.0 2,1.0,3.5,15,10.0,7.5 3,1.0,3.5,15,10.0,7.0 4,1.0,3.5,15,10.0,6.5 If the above command is used, then it must include information that also sets vertically uniform salinity and temperature (and optionally sediment) initial conditions, as well as water level. Setting a mix of vertically uniform and other initial conditions (such as globally uniform, laterally uniform or 3d) is not permitted. The order of these columns in the argument csv file is not important, but the columns headers are keywords and must be used as shown. For example, the following structure for initial condition file name.csv is permitted: ID,WQ_1,WL,sed_1,sal,temp 1,8.0,1.0,10.0,3.5,15 2,7.5,1.0,10.0,3.5,15 3,7.0,1.0,10.0,3.5,15 4,6.5,1.0,10.0,3.5,15 Notwithstanding this, it is still considered best practise to develop initial and boundary condition files that have a logically sequential order. Water quality initial conditions headers are labelled “WQ_1”, “WQ_2” onward, and the match between these header labels and water quality computed variables is set by the computed variable ordering of the simulation class deployed. 4.6.2.1.5 Globally varying Globally variable initial conditions use an initial three dimensional map to set hydrodynamic and water quality computed variable concentrations at each 3D cell. This is analogous to using a restart file. The command to do so is: initial condition 3d == &lt;initial condition file name&gt;.csv An example of the form of the text file argument initial condition file name.csv for simulating five water quality constituents is as follows, noting that the “ID” column refers to a three dimensional cell ID, rather than the two dimensional column ID used in the initial condition 2d == command. ID,WL,sal,temp,sed_1,WQ_1 1,1.0,3.5,15,10.0,8.0 2,1.0,3.5,14,10.0,7.5 3,1.0,3.5,13,10.0,7.0 4,1.0,3.5,12,8.0,6.5 5,1.0,3.5,15,10.0,8.0 6,1.0,3.5,14,10.0,7.4 7,1.0,3.5,13,10.0,7.1 8,1.0,3.5,11,9.0,6.6 If the above command is used, then it must include information that also sets globally varying salinity and temperature (and optionally sediment) initial conditions, as well as water level. Setting a mix of vertically uniform and other initial conditions (such as globally uniform, laterally uniform or 2d) is not permitted. The order of these columns in the argument csv file is not important, but the columns headers are keywords and must be used as shown. For example, the following structure for initial condition file name.csv is permitted: ID,WQ_1,WL,sed_1,sal,temp 1,8.0,1.0,10.0,3.5,15 2,7.5,1.0,10.0,3.5,14 3,7.0,1.0,10.0,3.5,13 4,6.5,1.0,8.0,3.5,12 5,8.0,1.0,10.0,3.5,15 6,7.4,1.0,10.0,3.5,14 7,7.1,1.0,10.0,3.5,13 8,6.6,1.0,9.0,3.5,12 Notwithstanding this, it is still considered best practise to develop initial and boundary condition files that have a logically sequential order. Water quality initial conditions headers are labelled “WQ_1”, “WQ_2” onward, and the match between these header labels and water quality computed variables is set by the computed variable ordering of the simulation class deployed. 4.6.2.2 Boundary conditions Water quality boundary conditions are also specified via the *.fvc file, either directly or via an include statement that points TUFLOW FV to a subsidiary boundary condition control file(s). This specification of water quality variable concentrations is optional, so in early water quality model construction stages this specification can be omitted. Omitted water quality boundary conditions will be set to zero. It is not recommended that this approach be taken beyond initial simulation setup stages, but that it be used only to develop a water quality simulation to the point where it executes without issuing error or unwanted warning messages. At this point, all water quality boundary conditions should be assigned. All TUFLOW boundary conditions that specify water temperature or salinity will also require specification of the behaviour of simulated water quality variables. Common boundary conditions to which this applies include inflows (e.g. types Q, QC, QN, QG and others) and tidal boundaries (e.g. types WLS). Wave and meteorological boundary conditions do not need specification of water quality conditions. As for initial conditions, boundary conditions that use columnar data structures (e.g. *.csv files) are interpreted using column headers specified in an expected order within calling TUFLOW FV BC blocks. Further detail and the associated ordering is provided in the following sections (sections 4.8, ?? and ?? for simulation classes DO, inorganics and organics, respectively). 4.6.2.3 Ordering Specification of initial conditions and most boundary conditions presently relies on listing water quality variables in a particular order. This applies in all instances when water quality initial or boundary conditions are provided in columnar or list form, which is most frequently in text file format. This is conceptually similar to the manner in which TUFLOW FV also relies on ordering of its initial and boundary conditions. Future releases of TUFLOW FV will allow alternative methods for specification of initial and boundary conditions that do not rely on assumed ordering. In the interim however, the following applies. 4.6.2.3.1 Initial Conditions Initial conditions, if set using means other than a restart file, must be specified with water quality constituents in a preset order (globally uniform), or be referenced using incrementally numbered headers as “WQ_1”, “WQ_2” etc (profile, 2d or 3d, see Section 4.6.2.1). For globally uniform initial conditions (Section 4.6.2.1.2), the following *.fvc command can be used for a typical inorganics simulation class: initial wq concentration == 7.5, 0.0, 4.2, 10.5, 0.6, 5.5 There are no references to headers or variable names, but TUFLOW FV assumes that these numbers correspond to the ordered variables of the particular configuration of the inorganics simulation class returned to it from the WQ Module. In this example, this ordering is: Dissolved oxygen (7.5 mg/L) Silicate (0.0 mg/L) Ammonium (4.2 mg/L) Nitrate (10.5 mg/L) Filterable reactive phosphorus (0.6 mg/L), and One phytoplankton group (5.5 \\(\\mu\\)g/L) The expected ordering is the same as that for boundary condition specifications, as described below. For other initial condition specifications that involve providing csv files, the headers “WQ_1”, “WQ_2” etc must be used to denote water quality initial conditions. The ordering of the associated columns does not matter, however the assignment of a computed variable initial condition to a “WQ_XX” header (where XX is a number) does rely on the ordering described below - the first water quality computed variable expected should be headed “WQ_1” and so on. 4.6.2.3.2 Boundary Conditions Ordering of water quality boundary conditions is only important when specifying header information via the bc header == (or equivalent) command within a TUFLOW FV *.fvc file BC block. It is in these commands (where comma separated header strings are specified) that TUFLOW FV expects a particular order of TUFLOW FV and WQ Module constituents. No column ordering is expected in boundary condition data files themselves. Ordering is only expected in the order of headers specified within a BC block within an TUFLOW FV control file. This is best illustrated by example. If a user has elected to deploy the inorganics simulation class without sediment, then the following will be simulated (beyond the basic velocity and water level hydrodynamic variable suite): Salinity Temperature Dissolved oxygen Silicate Ammonium Nitrate Filterable reactive phosphorus One (assumed for this example, but can be multiple) phytoplankton group These will eventually need proper boundary condition specification in boundary condition blocks and have supporting data provided in (usually) text files. In a simple model with only one WL boundary condition, a bc block of the following form would be required as a minimum to properly specify the hydrodynamic and water quality boundaries: bc == WL, 1, datafile.csv \\(\\blockindent\\) bc header == time, wsel, sali, temp, DOxy, SiO4, NH41, nitr, frph, bluegreen end bc To be clear: The names listed on the bc header == line (time, wse etc.) are not keywords or special names, and can be any names that a user chooses TUFLOW FV will however, assume that these names (whatever they have been set to) have been listed in such an order that they have a one to one correspondence to the ten computed variables as follows: time \\(\\rightarrow\\) Time stamp wsel \\(\\rightarrow\\) Water surface elevation sali \\(\\rightarrow\\) Salinity temp \\(\\rightarrow\\) Temperature DOxy \\(\\rightarrow\\) Dissolved oxygen SiO4 \\(\\rightarrow\\) Silicate NH41 \\(\\rightarrow\\) Ammonium nitr \\(\\rightarrow\\) Nitrate frph \\(\\rightarrow\\) Filterable reactive phosphorus bluegreen \\(\\rightarrow\\) Phytoplankton group one TUFLOW then matches the user specified names to the expected simulation variables, based on this ordering, to then interrogate boundary condition files. Following the above matching, TUFLOW FV interrogates the relevant boundary condition file (“datafile.csv” in the example above), where this file can have its columns arranged in any order: the order of these columns does not matter because TUFLOW FV will use the mapping previously developed via the bc header == command to look through all data file columns one by one, searching for the headers specified, regardless of the actual ordering of boundary condition file columns. For example, the silicate boundary condition data could be positioned in column 14 of the boundary condition file, but as long as it is labelled with the correct header (“SiO4” as specified in bc header ==), TUFLOW FV will know to assign column 14 of the boundary condition data file to the silicate computed variable. Ordering is set by the user’s selection of simulation class and constituent models, and is explicitly listed in each simulation class section (Sections 4.8.5, ?? and ?? for DO, inorganics and organics, respectively). The expected ordering for a particular simulation is also reported in the simulation water quality log file for checking. 4.7 Water quality control file commands The water quality control file comprises three parts, with each part containing different types of commands and flags. Whilst it is recommended that these parts be kept separate and in the order described below (especially given how complex water quality simulations can become), doing so is not mandatory and commands or command blocks may be entered in any order. These parts are as follows, with the first two mirroring the architecture described in Section 2: Simulation controls (i.e. simulation class) Constituent model settings (i.e. constituent model class) Material specifications Notwithstanding this, a WQ Module control file need not contain any commands, and can be completely blank. This is by design, and intended to allow users to rapidly set up and execute a TUFLOW water quality simulation. If the water quality control file is left blank, then the WQ Module will: Construct a simulation using the dissolved oxygen simulation class (which is the simplest class) Set the simulation units to mg/L Set library defaults for all parameters Set the water quality model timestep to the default Assign zero dissolved oxygen concentration to all boundary conditions. This is by design, and will assist in ensuring that the subsequent user-defined updating of boundary conditions is thorough and complete (zero dissolved oxygen boundary conditions are rare and therefore easily identifiable). Initial conditions will also need to be specified in the TUFLOW FV control file as per Section 4.6.2. Specification of boundary conditions can be deferred. The water quality control file sections are described below. Details specific to each simulation class and constituent model are provided in subsequent sections 4.7.1 Part 1: Simulation controls Simulation controls set the high level operation of the WQ Module and are not specific to a simulation class. All are optional. Available commands set the: Simulation class via simulation class == Timestep dt (in seconds) at which TUFLOW calls the WQ Module via wq dt == Units of simulation via wq units == Frequency of equilibrium substepping fess (in number of timesteps) to execute non-kinetic equilibrium calculations via wq equilibrium substeps == Reporting or suppression of minimum / maximum concentration exceedances (see Section 4.7.2) via report min max warnings == A typical simulation control section might therefore look like the following: simulation class == DO wq dt == 600.0 wq units == mgl wq equilibrium substeps == 1 report min max warnings == on 4.7.2 Part 2: Constituent model settings Constituent model settings are those that: Specify the constituent model to be used within each preset constituent model class. These are referred to as constituent model blocks Set the parameters for each of these constituent models, as commands within these blocks All are optional, however if a constituent model block is initiated then it requires an end XXXX model command to terminate the block, where XXXX is the name of the constituent model class, such as inorganic nitrogen. An example of a user selecting to use the adsorbed filterable reactive phosphorous constituent model (that is a model available within the inorganic phosphorus constituent model class), and setting some parameters within that model is as follows: inorganic phosphorus model == frpads atmospheric deposition == 12.6, 0.5 end inorganic phosphorus model Parameters not specified by the user are set to library defaults. All constituent models allow for constraining (and then reporting) the predictions of their respective computed variable concentrations via the setting of minimum and maximum limits, if desired. This is often useful in identifying unusual model behaviours or instabilities. Where exceedences of these limits are identified by the WQ Module: Time and model cell information is written to the WQ Module log file in real time. This allows for easy identification of potential model issues via periodic examination of the WQ Module log file, rather than waiting for simulation completion The WQ Module resets the computed concentration to the relevant specified minimum or maximum concentration The above resetting will result in mass conservation errors. It should not be relied on to artificially control the behaviour of an otherwise unstable or runaway water quality simulation. Rather, this functionality should be used as a convenient way to check model performance and flag potential issues, with a view to then implementing corrective action. Equally, suppressing warnings written to the WQ log file using the report min max warnings == command described in Section 4.7.1 is not recommended because doing so may mask underlying model construction issues. These limits are optionally specified in each constituent model block. An example that sets these limits for ammonium is: ammonium min max == 0.0, 25.0 Although in the strictest sense, sediment (benthic) flux half saturation concentrations and temperature coefficients are benthic properties, the WQ Module does not yet support these parameters being applied on a spatially varying basis (i.e. per material). As such, these are considered to be constituent model global parameters and so are set in this part of the water quality control file, i.e. within respective constituent model blocks. An example that sets an oxygen half saturation and temperature coefficient for benthic flux is: oxygen benthic == 5.0, 1.08 4.7.3 Part 3: Material specifications The final part of the water quality control file (*.fvwq) provides for specification of benthic (sediment) fluxes, via material blocks. The commands required to commence and terminate a materials block are as follows: material == &lt;up to 10 comma separated material numbers, or “default”&gt; and end material This material block nomenclature mirrors that used in the TUFLOW FV and sediment transport control files. An example of specifying oxygen and nitrate benthic fluxes for materials 2, 7 and 12 is: material == 2, 7, 12 oxygen flux == -60.0 nitrate flux == 12.5 end material The WQ Module allows for specification of a default set of benthic fluxes that are applied across all materials, by using the key word default instead of specifying material numbers in a material block. These defaults can then be progressively overwritten on a material by material basis by specifying subsequent material blocks. For example, a model that has ten materials in total, eight of which have the same oxygen benthic flux (all materials except 4 and 7), can have its overall oxygen benthic flux specified as: material == default oxygen flux == -60.0 end material material == 4, 7 oxygen flux == -20.0 end material 4.7.4 Summary In order to set up and execute a water quality simulation using the WQ Module, the following steps are required: Modify the TUFLOW FV control file: Add at least the following commands to TUFLOW FV control file (*.fvc): water quality model == TUFLOW water quality control file == &lt;water quality control file name&gt;.fvwq Optionally add a folder path command to the TUFLOW FV control file (*.fvc) with a trailing backslash: water quality model dir == &lt;relative path to *.fvwq file&gt;\\(\\backslash\\) Add appropriate initial conditions for all water quality constituents, observing ordering rules where required Initially optionally add boundary conditions for all water quality constituents, observing ordering rules in bc header == commands Create the water quality control file with the corresponding name and path Modify the water quality control file Optionally add to the water quality control file: Part 1: A simulation controls section Part 2: A constituent model setting section with one or more constituent model blocks with one or more parameter commands Part 3: A material block specifications section Once initially constructed, boundary conditions can be added (if not already in place), and progressive refinement and parameterisation of constituent models and benthic fluxes can be affected. Details of these commands and their options within each specific simulation class are provided in subsequent sections. Subsections are separated into the above water quality control file parts for ease and consistency of reference. All commands are optional. 4.7.5 Log files Every WQ Module water quality simulation generates a log file that contains an echo of the WQ Module construction and execution commentary. It is written to the same location (and with the same name) as the WQ Module control file, with the file extension “fvwqlog”. This file contains a great deal of information that should be carefully reviewed. Suppressing warnings written to this log file, although possible, is not recommended or encouraged. 4.8 Simulation Class: DO If no simulation class is specified then a simulation will be automatically constructed using this DO class, and populated with library defaults for all parameters. Computed variables will be: Dissolved oxygen Pathogens (optional, potentially multiple) 4.8.1 Prerequisites The DO simulation class requires simulation of the following in TUFLOW FV: Hydrodynamics, in either two or three dimensions (including any internal one dimensional structures if present) Salinity Temperature Heat module on (i.e. meteorological forcing is required) Simulation of suspended sediment (via TUFLOW FV’s sediment transport module) is optional, unless attached pathogens are simulated. 4.8.2 Part 1: Simulation specification The DO simulation class is set via simulation class == DO The other commands in this part are not specific to this simulation class. See section 4.7.1. 4.8.3 Part 2: Constituent model specification As per Tables ?? and ??, oxygen is the only mandatory constituent model class available within the DO simulation class, and there is only one oxygen constituent model within that class, with code O2. Pathogens may be optionally simulated (in any simulation class). 4.8.3.1 Model class: Oxygen 4.8.3.1.1 Constituent model: O2 This constituent model is specified as: oxygen model == O2 Minimum and maximum concentrations are specified as: \\(\\blockindent\\) oxygen min max == \\(\\left[DO\\right]_{min}^{O_2}\\), \\(\\left[DO\\right]_{max}^{O_2}\\) Global benthic parameters (used in Equation (??)) are specified as: \\(\\blockindent\\) oxygen benthic == \\(K_{sed-O_2}^{O_2}\\), \\(\\theta_{sed}^{O_2}\\) The oxygen piston model to be used (in either Equation (??) or Equation (??)) is specified as: \\(\\blockindent\\) oxygen piston model == Wanninkhof92 or \\(\\blockindent\\) oxygen piston model == Ho16 The argument (either “Wanninkhof92” or “Ho16”) activates a different oxygen piston model (Equation (??) or Equation (??), respectively). Although not strictly necessary, the use of “oxygen” to prefix these block commands is deliberate so as to maintain consistency of command style with other constituent model blocks that include more than one computed variable, such as nitrogen, phosphorus and organics. Nonetheless, if the “oxygen” prefix is omitted within this constituent model block, the WQ Module will still interpret the above commands correctly. This constituent model block must be terminated using the command: end oxygen model 4.8.3.2 Model class: Pathogens (optional) This model class is optional. 4.8.3.2.1 Constituent model: Free This constituent model is specified as: pathogen model == free, pathname pathname is any user specified pathogen group name that: Uses only alphanumeric characters Has no spaces Excludes the keyword ‘PATH’, and Is not the same as any other group name Minimum and maximum concentrations are specified as: \\(\\blockindent\\) alive min max == \\(\\left[PTH_a\\right]_{min}^{pth}\\), \\(\\left[PTH_a\\right]_{max}^{pth}\\) Mortality parameters are specified as: \\(\\blockindent\\) mortality == \\(k_{d}^{pth}\\), \\(C_{SM}^{pth}\\), \\(\\alpha\\), \\(\\beta\\), \\(\\theta_{mor}^{pth}\\) \\(\\beta\\) is not currently used but must be retained as a placeholder in this command for future use. Light inactivation parameters are specified in three separate but related commands, with one command per light band (visible, UV-A and UV-B): \\(\\blockindent\\) visible inactivation == \\(k_{vis}\\), \\(c_{S_{vis}}^{pth}\\), \\(K_{DO_{vis}}^{pth}\\) \\(\\blockindent\\) uva inactivation == \\(k_{uva}\\), \\(c_{S_{uva}}^{pth}\\), \\(K_{DO_{uva}}^{pth}\\) \\(\\blockindent\\) uvb inactivation == \\(k_{uvb}\\), \\(c_{S_{uvb}}^{pth}\\), \\(K_{DO_{uvb}}^{pth}\\) Settling of non-attached pathogens is specified as follows, with a negative number being a downwards velocity: \\(\\blockindent\\) settling == \\(V_{settle}^{pth}\\) This constituent model block must be terminated using the command: end pathogen model 4.8.3.2.2 Constituent model: Attached This constituent model must be accompanied by simulation of at least one sediment fraction within the TUFLOW FV sediment transport (ST) module, and is specified as: pathogen model == attached, pathname pathname is any user specified pathogen group name that: Uses only alphanumeric characters Has no spaces Excludes the keyword ‘PATH’, and Is not the same as any other group name The commands are the same as those specified within a free pathogen constituent model block (Section 4.8.3.2.1), with the following modification or additions. Settling is specified for both free and attached pathogens: \\(\\blockindent\\) settling == \\(V_{settle}^{pth}\\), \\(V_{settle}^{pth_t}\\) The target attached pathogen fraction is specified as: \\(\\blockindent\\) target attached fraction == \\(f_{att}^{pth}\\) This constituent model block must be terminated using the command: end pathogen model 4.8.4 Part 3: Material specification Oxygen benthic flux (used in Equation (??)) is specified within both default and numbered material blocks as: \\(\\blockindent\\) oxygen flux == \\(F_{sed}^{O_2}\\) 4.8.5 Constituent ordering Dissolved oxygen is the only mandatory constituent simulated by the WQ Module for this simulation class, and therefore oxygen concentration is specified as the first variable (shown in symbolic form below): initial wq concentration == \\(\\left[ DO \\right]\\) Similarly, in a bc header == command within a bc block, oxygen is expected to be the first and only mandatory water quality variable after hydrodynamic boundary conditions. \\(\\blockindent\\)bc header == time, water_elev, sal, temp, clay, sand, DO_mgL DO_mgL is the header used to designate oxygen in the related boundary condition file, noting that the DO_mgL column in the boundary condition file can appear in any column in the boundary condition file, and that it does not need to be the seventh column. The header text “DO_mgL” is just an example, and it can be any header desired, as long as it matches the correct column header in the boundary condition file. 4.8.5.1 Pathogens (optional) If pathogens are simulated, then their headers are required at the end of any lists, regardless of the other hydrodynamic and water quality constituents simulated. This therefore applies to all simulation classes from DO to organics. Alive and dead pathogens are always required to be specified, in that order, and if attached pathogens are simulated then that attached pathogens header is listed between those of alive and dead. This pattern is repeated for each specified pathogen group, in the order in which pathogen groups are defined via pathogen constituent model blocks in the water quality control file. For example, where two pathogen groups are simulated (called ECOLI and CRYPTO, and defined in that order in the corresponding water quality control file), with ECOLI including attachment, the above bc header would be extended to the following: \\(\\blockindent\\)bc header == time, water_elev, sal, temp, clay, sand, DO_mgL, ECOLI_alive, ECOLI_att, ECOLI_dead, CRYPTO_al, CRYPTO_de 4.8.6 Example Following is an example of all the available WQ Module simulation class == DO commands. A single material applied as zeros everywhere as the default, other than for materials 1 and 4 where the default flux is overwritten. One (optional) pathogen constituent model block has been included, but is not required. simulation class == DO wq dt == 600 wq units == mgl oxygen model == O2 oxygen benthic == 4.0, 1.05 oxygen min max == 0.0, 15.0 end oxygen model !optional pathogen constituent model block: pathogen model == free, crypto alive min max == 0.0, 1e7 mortality == 0.08, 2e-12, 6.1, 1.0, 1.11 visible inactivation == 0.082, 0.0067, 0.5 uva inactivation == 0.5, 0.0067, 0.5 uvb inactivation == 1.0, 0.0067, 0.5 settling == -0.03 end pathogen model material == default oxygen flux == 0 end material material == 1, 4 oxygen flux == -137.0 end material "],["AppCommands.html", "Section 5 Commands", " Section 5 Commands .book .book-body .page-wrapper .page-inner { max-width: 95%; } All WQ Module commands and descriptions follow. This page has deliberately been set to be wider than the main document so as to accommodate the detail contained within the table. Tips provided in the manual’s introduction for interacting with the table should be reviewed, especially with regard to searching and navigation. Other tips for use specific to this table include: Commands are coloured and although they show as underlined on mouse hover, these are not hyperlinked Corresponding arguments (presented as their symbols) are coloured and listed in the required order within angled parentheses following each command ==. Each argument is a hyperlink to its description in the relevant Appendix. This description then includes hyperlinks to the relevant science and command syntax (Section 4). This allows easy navigation between command, parameter and scientific information The final text of each description is ‘Simulation construction section …’ and is a link to the relevant part of Section 4 where the command syntax is presented in context. More parameter details and descriptions are subsequently available via further hyperlinks included in the construction section Commands that have multiple possible combinations of more than one argument are presented as separate table entries. These related entries (that share the same command) are easily navigable by use of the links provided in the right hand table column, headed “Links” Table 5.1: WQ Module Commands Command Description Links oxygen flux == \\(\\langle\\)\\(F_{sed}^{O_2}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of oxygen. Simulation construction section 4.8.4. \\(\\text{ }\\) oxygen benthic == \\(\\langle\\)\\(K_{sed-O_2}^{O_2}\\),\\(\\theta_{sed}^{O_2}\\)\\(\\rangle\\) Used in an oxygen constituent model block to control the response of benthic oxygen flux to temperature and oxygen concentration. Simulation construction section 4.8.3.1.1. \\(\\text{ }\\) oxygen model == \\(\\langle\\)O2\\(\\rangle\\) Used to commence an oxygen constituent model block via specification of a constituent model from the oxygen constituent model class. Simulation construction section 4.8.3.1. \\(\\text{ }\\) oxygen min max == \\(\\langle\\)\\(\\left[DO\\right]_{min}^{O_2}\\),\\(\\left[DO\\right]_{max}^{O_2}\\)\\(\\rangle\\) Used in an oxygen constituent model block to set minimum and maximum dissolved oxygen concentrations. Simulation construction section 4.8.3.1.1. \\(\\text{ }\\) simulation class == \\(\\langle\\)DO;inorganics;organics\\(\\rangle\\) Used in Part 1: Simulation controls of WQ Module control file to specify water quality simulation class. If not specified, “DO” is assumed and all associated “DO” class default parameters are applied. Simulation construction section 4.7.1. \\(\\text{ }\\) end oxygen model Used to terminate an oxygen constituent model block. Must follow an oxygen model == command. Simulation construction section 4.8.3.1.1. \\(\\text{ }\\) wq units == \\(\\langle\\)mgl;mmm\\(\\rangle\\) Used in Part 1: Simulation controls of WQ Module control file to set the units used for water quality simulation. Milligrams per litre and millimoles per cubic metre are “mgl” and “mmm”, respectively. Simulation construction section 4.7.1. \\(\\text{ }\\) wq dt == \\(\\langle\\)\\(dt\\)\\(\\rangle\\) Used in Part 1: Simulation controls of WQ Module control file to set the timestep at which TUFLOW calls the WQ Module to undertake non-conservative water quality calculations, in seconds. Simulation construction section 4.7.1. \\(\\text{ }\\) silicate flux == \\(\\langle\\)\\(F_{sed}^{Si}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of silicate. Simulation construction section ??. \\(\\text{ }\\) silicate benthic == \\(\\langle\\)\\(K_{sed-O_2}^{Si}\\),\\(\\theta_{sed}^{Si}\\)\\(\\rangle\\) Used in a silicate constituent model block to control the response of benthic silicate flux to temperature and oxygen concentration. Simulation construction section ??. \\(\\text{ }\\) silicate min max == \\(\\langle\\)\\(\\left[Si\\right]_{min}^{Si}\\),\\(\\left[Si\\right]_{max}^{Si}\\)\\(\\rangle\\) Used in a silicate constituent model block to set minimum and maximum silicate concentrations. Simulation construction section ??. \\(\\text{ }\\) silicate model == \\(\\langle\\)Si\\(\\rangle\\) Used to commence a silicate constituent model block via specification of a constituent model from the silicate constituent model class. Simulation construction section ??. \\(\\text{ }\\) oxygen == \\(\\langle\\)on;off\\(\\rangle\\) Used in a silicate constituent model block to switch the dependence of silicate processes on dissolved oxygen on or off. Simulation construction section ??. \\(\\text{ }\\) ammonium flux == \\(\\langle\\)\\(F_{sed}^{NH_4}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of ammonium. Simulation construction section ??. \\(\\text{ }\\) ammonium benthic == \\(\\langle\\)\\(K_{sed-O_2}^{NH_4}\\),\\(\\theta_{sed}^{NH_4}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to control the response of benthic ammonium flux to temperature and oxygen concentration. Simulation construction section ??. \\(\\text{ }\\) ammonium min max == \\(\\langle\\)\\(\\left[NH_4\\right]_{min}^{NH_4}\\),\\(\\left[NH_4\\right]_{max}^{NH_4}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to set minimum and maximum ammonium concentrations. Simulation construction section ??. \\(\\text{ }\\) inorganic nitrogen model == \\(\\langle\\)AmmoniumNitrate\\(\\rangle\\) Used to commence an inorganic nitrogen constituent model block via specification of a constituent model from the inorganic nitrogen constituent model class. Simulation construction section ??. \\(\\text{ }\\) oxygen == \\(\\langle\\)on;off\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to switch the dependence of all nitrogen (ammonium and nitrate) processes on dissolved oxygen on or off. Simulation construction section ??. \\(\\text{ }\\) end silicate model Used to terminate a silicate constituent model block. Must follow a silicate model == command. Simulation construction section ??. \\(\\text{ }\\) end inorganic nitrogen model Used to terminate an inorganic nitrogen nitrogen constituent model block. Must follow an inorganic nitrogen model == command. Simulation construction section ??. \\(\\text{ }\\) nitrate flux == \\(\\langle\\)\\(F_{sed}^{NO_3}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of nitrate. Simulation construction section ??. \\(\\text{ }\\) nitrate benthic == \\(\\langle\\)\\(K_{sed-O_2}^{NO_3}\\),\\(\\theta_{sed}^{NO_3}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to control the response of benthic nitrate flux to temperature and oxygen concentration. Simulation construction section ??. \\(\\text{ }\\) nitrate min max == \\(\\langle\\)\\(\\left[NO_3\\right]_{min}^{NO_3}\\),\\(\\left[NO_3\\right]_{max}^{NO_3}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to set minimum and maximum nitrate concentrations. Simulation construction section ??. \\(\\text{ }\\) nitrification == \\(\\langle\\)\\(R_{nitrif}^{NH_4}\\),\\(K_{nitrif-O_2}^{NH_4}\\),\\(\\theta_{nitrif}^{NH_4}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to control nitrification and its response to oxygen concentration and temperature. Simulation construction section ??. \\(\\text{ }\\) denitrification == \\(\\langle\\)Michaelis Menten,\\(R_{denit}^{NO_3}\\),\\(K_{denit-O2-MM}^{NO_3}\\),\\(\\theta_{denit}^{NO_3}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to activate the Michaelis Menten model and control denitrification and its response to ambient oxygen concentrations and temperature. Simulation construction section ??. to exponential denitrification == \\(\\langle\\)exponential,\\(R_{denit}^{NO_3}\\),\\(K_{denit-O2-exp}^{NO_3}\\),\\(\\theta_{denit}^{NO_3}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to activate the exponential model and control denitrification and its response to ambient oxygen concentrations and temperature. Simulation construction section ??. to Michaelis Menten atmospheric deposition == \\(\\langle\\)\\(\\left[{TN}\\right]_{rain}\\),\\(R_{atm-dry}^{TN}\\),\\(f_{TN}^{NO_3}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to control the wet and dry atmospheric deposition of inorganic nitrogen. Simulation construction section ??. \\(\\text{ }\\) inorganic phosphorus model == \\(\\langle\\)FRPhs,FRPhsads\\(\\rangle\\) Used to commence an inorganic phosphorus constituent model block via specification of a constituent model from the inorganic phosphorus constituent model class. Simulation construction section ??. \\(\\text{ }\\) end inorganic phosphorus model Used to terminate an inorganic phosphorus phosphorus constituent model block. Must follow a inorganic phosphorus model == command. Simulation construction section ??. \\(\\text{ }\\) FRP min max == \\(\\langle\\)\\(\\left[FRP\\right]_{min}^{FRP}\\),\\(\\left[FRP\\right]_{max}^{FRP}\\)\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to set minimum and maximum FRP concentrations. Simulation construction section ??. \\(\\text{ }\\) FRP flux == \\(\\langle\\)\\(F_{sed}^{FRP}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of FRP. Simulation construction section ??. \\(\\text{ }\\) FRP benthic == \\(\\langle\\)\\(K_{sed-O_2}^{FRP}\\),\\(\\theta_{sed}^{FRP}\\)\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to control the response of benthic FRP flux to temperature and oxygen concentration. Simulation construction section ??. \\(\\text{ }\\) oxygen == \\(\\langle\\)on;off\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to switch the dependence of FRP processes on dissolved oxygen on or off. Simulation construction section ??. \\(\\text{ }\\) atmospheric deposition == \\(\\langle\\)\\(\\left[{FRP}\\right]_{rain}\\),\\(R_{atm-dry}^{FRPads}\\)\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to control the wet (and dry) atmospheric deposition of FRP (adsorbed FRP). Simulation construction section ??. \\(\\text{ }\\) FRPads min max == \\(\\langle\\)\\(\\left[FRPads\\right]_{min}^{FRPads}\\),\\(\\left[FRPads\\right]_{max}^{FRPads}\\)\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to set minimum and maximum adsorbed FRP concentrations. Simulation construction section ??. \\(\\text{ }\\) adsorption == \\(\\langle\\)linear,\\(K_{ads-L}^{FRP}\\)\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to set the paramters for the linear FRP adsorption model. Simulation construction section ??. to quadratic adsorption == \\(\\langle\\)quadratic,\\(K_{ads-Q}^{FRP}\\),\\(Q^{FRP}_{max}\\)\\(\\rangle\\) Used in a constituent model block to set the paramters for the quadratic FRP adsorption model. Simulation construction section ??. to linear phyto model == \\(\\langle\\)basic;advanced,group_name\\(\\rangle\\) Used to commence a phytoplankton constituent model block via specification of a model from the phytoplankton constituent model class, and a phytoplankton group name. The group name can be any name required. If the advanced phytoplankton model is used then internal nitrogen and phosphorus concentrations will be simulated as computed variables and therefore must have respective initial conditions and boundary conditions specified, paying attention to ordering rules as required. Simulation construction section ??. \\(\\text{ }\\) min max == \\(\\langle\\)\\(\\left[PHY\\right]_{min}^{PHY}\\),\\(\\left[PHY\\right]_{max}^{PHY}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set minimum and maximum phytoplankton group concentrations. Simulation construction section ??. \\(\\text{ }\\) temperature limitation == \\(\\langle\\)none\\(\\rangle\\) Used in a phytoplankton constituent model block to turn off phytoplankton group temperature limitation. Simulation construction section ??. to standard temperature limitation == \\(\\langle\\)standard,\\(T_{std}^{phy}\\),\\(T_{opt}^{phy}\\),\\(T_{max}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set the standard phytoplankton group temperature limitation function. Simulation construction section ??. to none salinity limitation == \\(\\langle\\)none\\(\\rangle\\) Used in a phytoplankton constituent model block to turn off phytoplankton group salinity limitation. Simulation construction section ??. to fresh,to marine,to mixed,to estuarine salinity limitation == \\(\\langle\\)fresh,\\(S_{opt-fresh}^{phy}\\),\\(S_{max-fresh}^{phy}\\),\\(L_{max-fresh}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to select the freshwater phytoplankton group salinity limitation. Simulation construction section ??. to none,to marine,to mixed,to estuarine salinity limitation == \\(\\langle\\)marine,\\(S_{opt-marine}^{phy}\\),\\(L_{zero-marine}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to select the marine phytoplankton group salinity limitation. Simulation construction section ??. to none,to fresh,to mixed,to estuarine salinity limitation == \\(\\langle\\)mixed,\\(S_{opt-mix}^{phy}\\),\\(S_{max-mix}^{phy}\\),\\(L_{zero-mix}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to select the mixed phytoplankton group salinity limitation. Simulation construction section ??. to none,to marine,to mixed,to estuarine salinity limitation == \\(\\langle\\)estuarine,\\(S_{opt-est}^{phy}\\),\\(S_{max-est}^{phy}\\),\\(P_{est}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to select the estuarine phytoplankton group salinity limitation. Simulation construction section ??. to none,to fresh,to marine,to mixed nitrogen limitation == \\(\\langle\\)\\(\\left[N\\right]_{min}^{phy}\\),\\(K_{lim-N}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set nitrogen limitation parameters for the basic phytoplankton model. Simulation construction section ??. to advanced nitrogen limitation == \\(\\langle\\)\\(\\left[N\\right]_{min}^{phy}\\),\\(K_{lim-N}^{phy}\\),\\(X_{N-C-min}^{phy}\\),\\(X_{N-C-max}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set nitrogen limitation parameters for the advanced phytoplankton model. Simulation construction section ??. to basic phosphorus limitation == \\(\\langle\\)\\(\\left[P\\right]_{min}^{phy}\\),\\(K_{lim-P}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set phosphorus limitation parameters for the basic phytoplankton model. Simulation construction section ??. to advanced phosphorus limitation == \\(\\langle\\)\\(\\left[P\\right]_{min}^{phy}\\),\\(K_{lim-P}^{phy}\\),\\(X_{P-C-min}^{phy}\\),\\(X_{P-C-max}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set phosphorus limitation parameters for the advanced phytoplankton model. Simulation construction section ??. to basic silicate limitation == \\(\\langle\\)\\(\\left[Si\\right]_{min}^{phy}\\),\\(K_{lim-Si}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set silicate limitation parameters for the basic phytoplankton model. Specifying this command triggers silicate uptake. Simulation construction section ??. \\(\\text{ }\\) light limitation == \\(\\langle\\)basic,\\(Ke^{phy}\\),\\(I_{K-bas}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set basic light limitation parameters for the basic and advanced phytoplankton constituent models. If stokes settling is used then the vlaue of \\(I_K\\) specified in this command overrides any value specified using the settling == stokes , \\(I_K\\) command. Simulation construction section ??. to monod,to steele,to webb,to jassby,to chalker,to klepper,to integrated, light limitation == \\(\\langle\\)monod,\\(Ke^{phy}\\),\\(I_{K-mon}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set monod light limitation parameters for the basic and advanced phytoplankton constituent models. If stokes settling is used then the vlaue of \\(I_K\\) specified in this command overrides any value specified using the settling == stokes , \\(I_K\\) command. Simulation construction section ??. to basic,to steele,to webb,to jassby,to chalker,to klepper,to integrated, light limitation == \\(\\langle\\)steele,\\(Ke^{phy}\\),\\(I_{S-ste}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set steele light limitation parameters for the basic and advanced phytoplankton constituent models. Simulation construction section ??. to basic,to monod,to webb,to jassby,to chalker,to klepper,to integrated, light limitation == \\(\\langle\\)webb,\\(Ke^{phy}\\),\\(I_{K-web}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set webb light limitation parameters for the basic and advanced phytoplankton constituent models. If stokes settling is used then the vlaue of \\(I_K\\) specified in this command overrides any value specified using the settling == stokes , \\(I_K\\) command. Simulation construction section ??. to basic,to steele,to monod,to jassby,to chalker,to klepper,to integrated, light limitation == \\(\\langle\\)jassby,\\(Ke^{phy}\\),\\(I_{K-jas}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set jassby light limitation parameters for the basic and advanced phytoplankton constituent models. If stokes settling is used then the vlaue of \\(I_K\\) specified in this command overrides any value specified using the settling == stokes , \\(I_K\\) command. Simulation construction section ??. to basic,to steele,to webb,to monod,to chalker,to klepper,to integrated, light limitation == \\(\\langle\\)chalker,\\(Ke^{phy}\\),\\(I_{K-cha}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set chalker light limitation parameters for the basic and advanced phytoplankton constituent models. If stokes settling is used then the vlaue of \\(I_K\\) specified in this command overrides any value specified using the settling == stokes , \\(I_K\\) command. Simulation construction section ??. to basic,to steele,to webb,to jassby,to monod,to klepper,to integrated, light limitation == \\(\\langle\\)klepper,\\(Ke^{phy}\\),\\(I_{S-kle}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set klepper light limitation parameters for the basic and advanced phytoplankton constituent models. Simulation construction section ??. to basic,to steele,to webb,to jassby,to chalker,to monod,to integrated, light limitation == \\(\\langle\\)integrated,\\(Ke^{phy}\\),\\(I_{S-int}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set integrated light limitation parameters for the basic and advanced phytoplankton constituent models. Simulation construction section ??. to basic,to steele,to webb,to jassby,to chalker,to klepper,to monod, uptake == \\(\\langle\\)\\(X_{N-C-con}^{phy}\\),\\(X_{P-C-con}^{phy}\\),\\(X_{Si-C-con}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set constant nitrogen, phosphorus and optionally silicate to biomass ratios for the basic phytoplankton constituent model only. Simulation construction section ??. to advanced uptake == \\(\\langle\\)\\(R_{N-uptake}^{phy}\\),\\(R_{P-uptake}^{phy}\\),\\(X_{Si-C-con}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set nitrogen and phosphorus (and optionally silicate) uptake rates for the advanced phytoplankton constituent model only. The silicate internal concentration ratio is ignored if silicate uptake is not activated. Simulation construction section ??. to basic settling == \\(\\langle\\)none\\(\\rangle\\) Used in a phytoplankton constituent model block to turn off settling in both basic and advanced phytoplankton constituent models. Simulation construction section ??. to constant,to thermal,to stokes,to motile settling == \\(\\langle\\)constant,\\(V_{settle}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set a constant settling velocity in both basic and advanced phytoplankton constituent models. A negative value specified in this command is a downwards velocity. Setting the settling velocity to zero in this model is the same as using settling == none. Simulation construction section ??. to none,to thermal,to stokes,to motile settling == \\(\\langle\\)thermal,\\(V_{settle}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set a constant settling velocity in both basic and advanced phytoplankton constituent models, allowing for temperature effects to settling. A negative value specified in this command is a downwards velocity. Simulation construction section ??. to none,to constant,to stokes,to motile settling == \\(\\langle\\)stokes,\\(I_{K-sto}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to compute settling velocity via stokes settling laws in both basic and advanced phytoplankton constituent models. Density must be simulated as a computed variable for each phytoplankton group that uses this model, so must have cell density initial conditions and boundary conditions specified as per ordering rules. The specification of \\(I_K\\) is not mandatory in this command. If it is not specified then the \\(I_K\\) specified in the phytoplankton constituent model’s light limitation model will be used. If a light limitaton model is not specified, or uses \\(I_S\\) instead of \\(I_K\\), then the library default value of \\(I_K\\) is used. If \\(I_K\\) is specified both in this stokes settling command and a phytoplankton constituent model light limitation function, then the value specified in the “light limitation ==” command is used, and the value specified in this command is ignored. Simulation construction section ??. to none,to constant,to thermal,to motile settling == \\(\\langle\\)motile,\\(V_{mot}^{phy}\\),\\(I_{K-mot}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to compute settling velocity via motility functions that depend on ambient conditions, in only the advanced phytoplankton constituent model. The specification of \\(I_K\\) is not mandatory in this command. If it is not specified then the \\(I_K\\) specified in the phytoplankton constituent model’s light limitation model will be used. If a light limitaton model is not specified, or uses \\(I_S\\) instead of \\(I_K\\), then the library default value of \\(I_K\\) is used. If \\(I_K\\) is specified both in this motile settling command and a phytoplankton constituent model light limitation function, then the value specified in the “light limitation ==” command is used, and the value specified in this command is ignored. Simulation construction section ??. to none,to constant,to thermal,to stokes carbon chla ratio == \\(\\langle\\)\\(X_{cc}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set the ratio of phytoplankton cell carbon biomass to chlorophyll a . Simulation construction section ??. \\(\\text{ }\\) end phyto model Used to terminate a phytoplankton constituent model block. Must follow a phyto model == command. Simulation construction section ??. \\(\\text{ }\\) nitrogen fixing == \\(\\langle\\)\\(R_{nfix}^{N_2}\\),\\(f_{nfix}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set the nitrogen fixing parameters of a phytoplankton constituent model. The first parameter sets the rate of nitrogen fixing and the second dictates the influence of nitrogen fixing on primary productivity. Simulation construction section ??. \\(\\text{ }\\) primary productivity == \\(\\langle\\)\\(R_{prod}^{phy}\\),\\(\\theta_{prod}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set primary productivity parameters of a phytoplankton constituent model. Simulation construction section ??. \\(\\text{ }\\) respiration == \\(\\langle\\)\\(R_{resp}^{phy}\\),\\(\\theta_{resp}^{phy}\\),\\(f_{true-resp}^{phy}\\),\\(f_{excr-loss}^{phy}\\),\\(f_{exud}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set respiration and exudation parameters of a phytoplankton constituent model. Simulation construction section ??. \\(\\text{ }\\) water quality model == \\(\\langle\\)tuflow\\(\\rangle\\) Instruct TUFLOW FV to activate TUFLOW WQ Module. Simulation construction section 4.6.1. \\(\\text{ }\\) water quality control file == \\(\\langle\\)water quality control file name\\(\\rangle\\) Name of WQ Module control file, with no path. If this file is not in the FV control file directory, then additionally use command water quality mode directory ==. Simulation construction section 4.6.1. \\(\\text{ }\\) water quality model directory == \\(\\langle\\)water quality control file directory\\(\\rangle\\) Relative path from location of FV control file to the WQ Module control file directory, including last backslash, e.g. “..\\(\\backslash\\)WQM\\(\\backslash\\)”. Simulation construction section 4.6.1. \\(\\text{ }\\) restart == \\(\\langle\\)restart file path and name\\(\\rangle\\) Specification of full path and name of previously saved restart file. Simulation construction section 4.6.2.1. \\(\\text{ }\\) initial wq concentration == \\(\\langle\\)comma separated wq initial conditions\\(\\rangle\\) Ordered individual computed variable initial conditions. Simulation construction section 4.6.2.1. \\(\\text{ }\\) initial scalar profile == \\(\\langle\\)initial condition file name and path\\(\\rangle\\) Ordered individual computed variable initial conditions in a columnar text file. Simulation construction section 4.6.2.1. \\(\\text{ }\\) initial condition 2d == \\(\\langle\\)initial condition file name and path\\(\\rangle\\) Ordered individual computed variable initial conditions in a columnar text file. Simulation construction section 4.6.2.1. \\(\\text{ }\\) initial condition 3d == \\(\\langle\\)initial condition file name and path\\(\\rangle\\) Ordered individual computed variable initial conditions in a columnar text file. Simulation construction section 4.6.2.1. \\(\\text{ }\\) material == \\(\\langle\\)Up to 10 comma separated material integers\\(\\rangle\\) Command to initiate a materials block. Commands within this block apply to the material numbers listed in this command. Simulation construction section 4.7.3. \\(\\text{ }\\) end material Command to terminate a materials block. This command must be paired with a corresponding material command to initiate the block. Simulation construction section 4.7.3. \\(\\text{ }\\) include sediment == \\(\\langle\\)include sediment transport calculations,include sediment in density calculation\\(\\rangle\\) TUFLOW FV command to include sediment simulation. Sediment must be simulated if adsorbed phosphorus is included in a WQ Module simulation. Simulation construction section ??. \\(\\text{ }\\) carbon min max == \\(\\langle\\)\\(\\left[POC\\right]_{min}^{POC}\\),\\(\\left[POC\\right]_{max}^{POC}\\),\\(\\left[DOC\\right]_{min}^{DOC}\\),\\(\\left[DOC\\right]_{max}^{DOC}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set minimum and maximum particulate and dissolved organic carbon concentrations. Simulation construction section ??. \\(\\text{ }\\) nitrogen min max == \\(\\langle\\)\\(\\left[PON\\right]_{min}^{PON}\\),\\(\\left[PON\\right]_{max}^{PON}\\),\\(\\left[DON\\right]_{min}^{DON}\\),\\(\\left[DON\\right]_{max}^{DON}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set minimum and maximum particulate and dissolved organic nitrogen concentrations. Simulation construction section ??. \\(\\text{ }\\) phosphorus min max == \\(\\langle\\)\\(\\left[POP\\right]_{min}^{POP}\\),\\(\\left[POP\\right]_{max}^{POP}\\),\\(\\left[DOP\\right]_{min}^{DOP}\\),\\(\\left[DOP\\right]_{max}^{DOP}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set minimum and maximum particulate and dissolved organic phosphorus concentrations. Simulation construction section ??. \\(\\text{ }\\) organic matter model == \\(\\langle\\)labile,refractory\\(\\rangle\\) Used to commence an organics constituent model block via specification of a model from the organics constituent model class.. Simulation construction section ??. \\(\\text{ }\\) DOC flux == \\(\\langle\\)\\(F_{sed}^{DOC}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of DOC. Simulation construction section ??. \\(\\text{ }\\) DON flux == \\(\\langle\\)\\(F_{sed}^{DON}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of DON. Simulation construction section ??. \\(\\text{ }\\) DOP flux == \\(\\langle\\)\\(F_{sed}^{DOP}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of DOP. Simulation construction section ??. \\(\\text{ }\\) organics benthic == \\(\\langle\\)\\(K_{sed-O_2}^{DOM}\\),\\(\\theta_{sed}^{DOM}\\)\\(\\rangle\\) Used in an organics constituent model block to control the response of benthic DOM flux to temperature and oxygen concentration. Simulation construction section ??. \\(\\text{ }\\) end organic matter model Used to terminate an organics constituent model block. Must follow an organic matter model == command. Simulation construction section ??. \\(\\text{ }\\) oxygen == \\(\\langle\\)on;off\\(\\rangle\\) Used in an organics constituent model block to switch the dependence of all processes on dissolved oxygen on or off. Anammox and DRNA processes will be switched off entirely if this command is issued asnd set to ‘off’. Simulation construction section ??. \\(\\text{ }\\) hydrolysis == \\(\\langle\\)\\(R_{hyd}^{POC}\\),\\(R_{hyd}^{PON}\\),\\(R_{hyd}^{POP}\\),\\(K_{hyd-O_2}^{POM}\\),\\(\\theta_{hyd}^{POM}\\)\\(\\rangle\\) Used in an organics constituent model block to parameterise particulate organic carbon, nitrogen and phosphorus hydrolysis. Simulation construction section ??. \\(\\text{ }\\) mineralisation == \\(\\langle\\)\\(R_{miner}^{DOM}\\),\\(K_{miner-O_2}^{DOM}\\),\\(\\theta_{miner}^{DOM}\\),\\(f_{an}\\),\\(K_{miner-NO_3}^{NO_3}\\)\\(\\rangle\\) Used in an organics constituent model block to parameterise dissolved organic matter (carbon, nitrogen and phosphorus) mineralisation. It includes the parameters that govern anaerobic mineralisation, that is, the consumption of nitrate in the dissolved organic matter mineralisation process. Simulation construction section ??. \\(\\text{ }\\) self shading == \\(\\langle\\)\\(Ke^{POM}\\),\\(Ke^{DOM}\\)\\(\\rangle\\) Used in an organics constituent model block to parameterise light attenuation due to the presence of particulate and dissolved organic matter. Simulation construction section ??. \\(\\text{ }\\) ref breakdown == \\(\\langle\\)\\(R_{bdn}^{RPOM}\\),\\(X_N^{RPOM}\\),\\(X_P^{RPOM}\\)\\(\\rangle\\) Used in an organics constituent model block to parameterise the breakdown of refractory particulate organic matter. Simulation construction section ??. \\(\\text{ }\\) ref carbon min max == \\(\\langle\\)\\(\\left[RPOM\\right]_{min}^{RPOM}\\),\\(\\left[RPOM\\right]_{max}^{RPOM}\\),\\(\\left[RDOC\\right]_{min}^{RDOC}\\),\\(\\left[RDOC\\right]_{max}^{RDOC}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set minimum and maximum refractory particulate organic matter and refractory dissolved organic carbon concentrations. Simulation construction section ??. \\(\\text{ }\\) ref nitrogen min max == \\(\\langle\\)\\(\\left[RDON\\right]_{min}^{RDON}\\),\\(\\left[RDON\\right]_{max}^{RDON}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set minimum and maximum refractory dissolved organic nitrogen concentrations. Simulation construction section ??. \\(\\text{ }\\) ref phosphorus min max == \\(\\langle\\)\\(\\left[RDOP\\right]_{min}^{RDOP}\\),\\(\\left[RDOP\\right]_{max}^{RDOP}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set minimum and maximum refractory dissolved organic phosphorus concentrations. Simulation construction section ??. \\(\\text{ }\\) ref activation == \\(\\langle\\)\\(R_{act}^{RDOM}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set the rate of activation of refractory dissolved organic carbon, nitrogen and phosphorus. Simulation construction section ??. \\(\\text{ }\\) ref self shading == \\(\\langle\\)\\(Ke^{RPOM}\\),\\(R_{CDOM}^{RDOM}\\)\\(\\rangle\\) Used in an organics constituent model block to parameterise light attenuation due to the presence of refractory particulate and dissolved organic matter. Simulation construction section ??. \\(\\text{ }\\) ref photolysis == \\(\\langle\\)\\(f_{photo}^{RDOM}\\)\\(\\rangle\\) Used in an organics constituent model block to parameterise the proportion of photolysis of refractory dissolved organic matter that produces labile dissolved organic matter. Simulation construction section ??. \\(\\text{ }\\) anaerobic oxidation of ammonium == \\(\\langle\\)\\(k_{anmx}^{N_2}\\),\\(K_{anmx-NH_4}^{N_2}\\),\\(K_{anmx-NO_2}^{N_2}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to control anaerobic oxidation of ammonium and its response to ambient ammonium and nitrate concentrations. Simulation construction section ??. \\(\\text{ }\\) diss nitrate reduction to ammonium == \\(\\langle\\)\\(R_{DRNA}^{NO_3}\\),\\(K_{DRNA-O_2}^{NO_3}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to control dissimilatory reduction of nitrate to ammonium and its response to ambient oxygen concentrations. Simulation construction section ??. \\(\\text{ }\\) settling == \\(\\langle\\)\\(V_{settle}^{FRP}\\)\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to control the settling rate of adsorbed FRP. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) settling == \\(\\langle\\)none\\(\\rangle\\) Used in an organic matter constituent model block to set the settling rate of labile particulate organic matter to zero. Simulation construction section ??. \\(\\text{ }\\) settling == \\(\\langle\\)constant,\\(V_{settle}^{lorg}\\)\\(\\rangle\\) Used in an organic matter constituent model block to control the settling rate of labile particulate organic matter. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) settling == \\(\\langle\\)thermal,\\(V_{settle}^{lorg}\\)\\(\\rangle\\) Used in an organic matter constituent model block to control the settling rate of labile particulate organic matter. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) settling == \\(\\langle\\)stokes,\\(d_{lorg}\\),\\(\\rho_{lorg}\\)\\(\\rangle\\) Used in an organic matter constituent model block to control the settling rate of labile particulate organic matter. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) ref settling == \\(\\langle\\)none\\(\\rangle\\) Used in an organic matter constituent model block to set the settling rate of refractory particulate organic matter to zero. Simulation construction section ??. \\(\\text{ }\\) ref settling == \\(\\langle\\)constant,\\(V_{settle}^{rorg}\\)\\(\\rangle\\) Used in an organic matter constituent model block to control the settling rate of refractory particulate organic matter. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) ref settling == \\(\\langle\\)thermal,\\(V_{settle}^{rorg}\\)\\(\\rangle\\) Used in an organic matter constituent model block to control the settling rate of refractory particulate organic matter. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) ref settling == \\(\\langle\\)stokes,\\(d_{rorg}\\),\\(\\rho_{rorg}\\)\\(\\rangle\\) Used in an organic matter constituent model block to control the settling rate of refractory particulate organic matter. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) cell water quality depth == \\(\\langle\\)\\(d_{min-wq}\\)\\(\\rangle\\) Instruct TUFLOW FV to not execute water quality calculations on cells that have depths less than this specified value. Simulation construction section 4.6.1. \\(\\text{ }\\) disable water quality model == \\(\\langle\\)\\(B_{disable-wq}\\)\\(\\rangle\\) Instruct TUFLOW FV to disable (1) or enable (0) water quality calculations on all cells. Simulation construction section 4.6.1. \\(\\text{ }\\) wq equilibrium substeps == \\(\\langle\\)\\(fess\\)\\(\\rangle\\) Used in Part 1: Simulation controls of WQ Module control file to set the frequency of timesteps at which the WQ Module undertakes non-kinetic calculations, in number of water quality timesteps. This only applies to FRP adsorption. Simulation construction section 4.7.1. \\(\\text{ }\\) oxygen piston model == \\(\\langle\\)Wanninkhof92\\(\\rangle\\) Used in an oxygen constituent model block to activate the Wanninkhof 1992 oxygen piston model. Simulation construction section 4.8.3.1. to Ho16 oxygen piston model == \\(\\langle\\)Ho16\\(\\rangle\\) Used in an oxygen constituent model block to activate the Ho et al 2016 oxygen piston model. Simulation construction section 4.8.3.1. to Wanninkhof92 report min max warnings == \\(\\langle\\)on;off\\(\\rangle\\) Used in Part 1: Simulation controls of WQ Module control file to suppress writing concentration limit exceedance warnings to the WQ log file. If not specified it is set to on. This command should not be used as a way to ignore concentration exceedances, and has only been included in the WQ Module to allow for the rare occassions when known and expected exceedances occurr regularly - writing of these to the log file can cause very large log files to be written and result in system instability. Simulation construction section 4.7.1. \\(\\text{ }\\) mortality == \\(\\langle\\)\\(k_d^{pth}\\),\\(C_{SM}^{pth}\\),\\(\\alpha\\),\\(\\beta\\),\\(\\theta_{mor}^{pth}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to control the mortality of pathogens. The fourth parameter \\(\\beta\\) is unused but must be kept as a placeholder in this command so that five arguments are specified. Simulation construction section 4.8.3.2.1. \\(\\text{ }\\) visible inactivation == \\(\\langle\\)\\(k_{vis}^{pth}\\),\\(c_{S_{vis}}^{pth}\\),\\(K_{DO_{vis}}^{pth}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to control the inactivation of pathogens due to visible light. Simulation construction section 4.8.3.2.1. \\(\\text{ }\\) uva inactivation == \\(\\langle\\)\\(k_{uva}^{pth}\\),\\(c_{S_{uva}}^{pth}\\),\\(K_{DO_{uva}}^{pth}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to control the inactivation of pathogens due to UV-A light. Simulation construction section 4.8.3.2.1. \\(\\text{ }\\) uvb inactivation == \\(\\langle\\)\\(k_{uvb}^{pth}\\),\\(c_{S_{uvb}}^{pth}\\),\\(K_{DO_{uvb}}^{pth}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to control the inactivation of pathogens due to UV-B light. Simulation construction section 4.8.3.2.1. \\(\\text{ }\\) alive min max == \\(\\langle\\)\\(\\left[PTH_a\\right]_{min}^{pth}\\),\\(\\left[PTH_a\\right]_{max}^{pth}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to set minimum and maximum alive (free) pathogen concentrations. Simulation construction section 4.8.3.2.1. \\(\\text{ }\\) settling == \\(\\langle\\)\\(V_{settle}^{pth}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to set free pathogen settling velocities. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section 4.8.3.2.1. to attached settling == \\(\\langle\\)\\(V_{settle}^{pth}\\),\\(V_{settle}^{pth_t}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to set free and attached pathogen settling velocities. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section 4.8.3.2.2. to free "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
