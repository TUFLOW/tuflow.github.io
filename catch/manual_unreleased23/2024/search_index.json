[["index.html", "TUFLOW CATCH User Manual ", " TUFLOW CATCH User Manual July 2024 "],["introduction.html", "Introduction About this manual How to use this manual", " Introduction About this manual This document is the user manual for TUFLOW CATCH. How to use this manual Navigation This manual is designed for digital use within any web browser and has the following features: Section headers, to level three, are directly navigable via the left hand pane’s table of contents. This table of contents pane can be toggled on and off from view via the “s” key if more or less page width is required The angled arrows that float at the left and right hand side midpoints of every page can be used to navigate sequentially back and forth to the commencement of preceding or subsequent top level sections Model commands, parameters and cross references for tables and figures are navigable through hyperlinks, where appropriate. This includes parameters within equations, which will also appear as blue hyperlinks when active The space bar can be used to scroll down within each page without skipping text. Shift + space bar will similarly scroll up Browser back and forward buttons (or their equivalent keyboard shortcuts alt + \\(\\langle\\)left arrow\\(\\rangle\\) and alt + \\(\\langle\\)right arrow\\(\\rangle\\), respectively) can be used to navigate through browsing history. Some browsers may not return to the precise scroll location in a page last visited, but to the last clicked section header. Hyperlinks have been built into the body of the manual, and these can be used in lieu of browser buttons if required It is recommended that this manual be viewed in a browser window that is maximised or operating in full screen mode, with the latter (although browser dependent) typically toggled via the F11 key. When following hyperlinks, the target (i.e. location on a webpage that is being navigated to) is displayed at the top of the landing page (the page navigated to). The exception to this occurs when a target is located near the bottom of the landing page’s content. In this case, it is not possible for a web browser to display the target at the top of a page because this would generate underlying white space, and as such, the target will appear in the main body (i.e. not at the top) of the landing page. Searching This entire manual’s content can be searched by using the search box at the top of the table of contents pane (i.e. screen top left to the right of the TUFLOW logo). This search box can be toggled on and off by clicking the search icon (magnifying glass) at the top left of any page. The table of contents is dynamically filtered in response to entering text in the search box, and clicking on any remaining table of contents entry will navigate directly to the searched text. Searched text will be highlighted within a page for easy identification, and multiple instances within one page can be navigated through by using the up and down arrow keys. Clearing the search box will restore the table of contents. Tables Where appropriate, tables are searchable via use of the search box, which is located at the top right of any search enabled table. Not all tables are searchable. When text is entered into the search box, table rows are dynamically filtered to only show those that contain the search text. This allows on-the-fly condensing of large tables so that only relevant content is presented. Tables can be sorted alphabetically (or reverse alphabetically) with respect to any column by clicking (and re-clicking) column headers. Where appropriate, the number of rows displayed is selectable via the Show entries drop down. Undisplayed rows can be accessed by clicking Previous or Next or by using the numbered navigation boxes, all of which are located at the bottom of each table. Below is an example of a searchable table. Type “erosion” (with or without the inverted commas) into the search box to see the table behaviour, or change the number of rows displayed and use the navigation buttons at the bottom of the table to look through all the data. The right hand “Links” column sometimes has hyperlinked words that allow navigation between related commands, or different versions of the same command, for ease of access if appropriate. Command Description Links method == \\(\\langle\\)washoff1,shear1\\(\\rangle\\) Used in a material block within a pollutant export model block to set the pollutant export model. Simulation construction section 4.5.3.3. \\(\\text{ }\\) depthThreshold == \\(\\langle\\)\\(d\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the minimum cell water depth at which pollutant export can occur. Applies to all pollutant export methods. Simulation construction section 4.5.3.3. \\(\\text{ }\\) limit == \\(\\langle\\)\\(L_{acc}\\),\\(L_{shr}\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set an accumulation (washoff model) or erosion (shear model) limit. . Simulation construction section 4.5.3.3. \\(\\text{ }\\) rate == \\(\\langle\\)\\(R_a\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the rate at which a pollutant accumulates to its dry store. Applies only to accumulation pollutant export methods. It is not used for erosion pollutant export models. Simulation construction section 4.5.3.3.1. \\(\\text{ }\\) timeConstant == \\(\\langle\\)\\(T_c\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to control the rate at which a pollutant is released from its dry store. Applies only to accumulation pollutant export methods. It is not used for erosion pollutant export models. Simulation construction section 4.5.3.3.1. \\(\\text{ }\\) rainThreshold == \\(\\langle\\)\\(R_r\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the minimum rainrate threshold at which a pollutant is released from its dry store. Pollutant export is suppressed below this rate. Applies only to accumulation pollutant export methods. It is not used for erosion pollutant export models. Simulation construction section 4.5.3.3.1. \\(\\text{ }\\) depositionStress == \\(\\langle\\)\\(\\tau_{cd}\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the maximum bed shear stress that allows for deposition to occur. This deposition represents a transfer from a pollutant’s wet to dry store. Deposition will not occur at shear stresses above this value. Applies only to shear stress pollutant export methods. It is not used for accumulation washoff pollutant export models. Simulation construction section 4.5.3.3.2. \\(\\text{ }\\) erosionStress == \\(\\langle\\)\\(\\tau_{ce}\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the minimum bed shear stress that allows for erosion to occur. This erosion represents a transfer from a pollutant’s dry to wet store. Erosion will not occur at shear stresses below this value. Applies only to shear stress pollutant export methods. It is not used for accumulation washoff pollutant export models. Simulation construction section 4.5.3.3.2. \\(\\text{ }\\) depositionVelocity == \\(\\langle\\)\\(w_s\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the settling velocity of a pollutant. This settling represents a transfer from a pollutant’s wet to dry store. Settling occurs at all times in the accumulation washoff pollutant export model. Settling only occurs once bed shear stress drops below the user specified value in the shear stress pollutant export model. Simulation construction section 4.5.3.3. \\(\\text{ }\\) erosionRate == \\(\\langle\\)\\(E_r\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the erosion rate of a pollutant. This erosion represents a transfer from a pollutant’s dry to wet store. Erosion only occurs once bed shear stress increases above the user specified value. Erosion will not occur at shear stresses below this value. Applies only to shear stress pollutant export methods. It is not used for accumulation washoff pollutant export models. Simulation construction section 4.5.3.3.2. \\(\\text{ }\\) Hardware == \\(\\langle\\)GPU,CPU\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the simulation hardware. This command can be overwritten in the catchment hydraulic model or receiving model blocks if needed. Simulation construction section 4.5.1. \\(\\text{ }\\) GIS Format == \\(\\langle\\)SHP,GPKG,MI\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the GIS format of the simulation. This command can be overwritten in the catchment hydraulic model or receiving model blocks if needed. Simulation construction section 4.5.1. \\(\\text{ }\\) SHP Projection == \\(\\langle\\)\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the path to the SHP file containing the TUFLOW CATCH model projection. Simulation construction section 4.5.1. \\(\\text{ }\\) Date Format == \\(\\langle\\)ISODATE,hours\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the simulation date format. It is strongly recommended that ISODATE (dd/mm/yyyy hh:mm:ss) be deployed rather than hours. Simulation construction section 4.5.1. \\(\\text{ }\\) Start Date == \\(\\langle\\)\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the simulation start date in the format declared by Date Format ==. It is strongly recommended that ISODATE (dd/mm/yyyy hh:mm:ss) be deployed rather than hours. Simulation construction section 4.5.1. \\(\\text{ }\\) End Date == \\(\\langle\\)\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the simulation start date in the format declared by Date Format ==. It is strongly recommended that ISODATE (dd/mm/yyyy hh:mm:ss) be deployed rather than hours. Simulation construction section 4.5.1. \\(\\text{ }\\) Colour coding is often used for distinguishing different tabulated data types. In the above example, TUFLOW CATCH commands are pink and the associated argument options for each command are blue and contained in angled parentheses. Clicking on these arguments will navigate to related content. Colour coding applied to other table types is explained throughout this manual when required. Commands Where specific commands are described, they appear in highlighted text, and often as a clickable link to the corresponding command description in Appendix A. That Appendix is a searchable table of all commands, as per the demonstration table presented in this introduction. The below is an example of a TUFLOW CATCH command. \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) Catch Output Folder == Where commands specify parameters (e.g. erosion rates etc.) then for consistency and brevity, these parameters are included directly in the command example using their notation (see following section that describes notation) rather than descriptive words. These notated parameters are also often a clickable link to descriptive explanations in Appendix B. The link below is an example of a TUFLOW CATCH command with a parameter presented in notation form. CSV Write Frequency Day ==\\(dT_{csv}\\) Parameter notation The primary groups of parameters are listed below, with the letter or symbol used to denote each. Typical generalisations of units are parenthesised. Time steps, \\(dT\\) (seconds or days) Rates, \\(R\\) (mass per unit area per unit time, or rain rate) Limits, \\(L\\) (mass per unit area) Concentrations, \\(C\\) (mass per unit volume) Time constants, \\(T\\) (seconds) Water depths, \\(d\\) (metres) Shear, \\(\\tau\\) (Newtons per square metre) Velocities, \\(w\\) (metres per second) Erosion rates, \\(E\\) (grams per metres squared per second) Feedback Constructive suggestions to improve this manual are welcome, and can be emailed to support@tuflow.com. "],["Overview-1.html", "Section 1 Overview 1.1 Context 1.2 Features 1.3 Configurations 1.4 Science 1.5 Support", " Section 1 Overview 1.1 Context TUFLOW CATCH enables the seamless bottom-up simulation of whole-of-catchment hydrologic, hydraulic, pollutant export and receiving waterway processes. It supports 1D, 2D and 3D simulation of these processes from top of catchment to receiving waterway outlet via solution of the relevant equations of motion and transport, without recourse to lumped spatial or temporal assumptions. It draws on the power of GPU acceleration to explicitly simulate catchment water flow and pollutant processes in the surface and subsurface domains, and automatically reconfigures these predictions to drive downstream multidimensional receiving waterway hydrodynamic, sediment transport, water quality and other environmental models. This modern framework, that draws on advanced compute capability, allows environmental practitioners to holistically manage and understand catchments of interest and their receiving waters in an efficient, integrated and rigorous manner, without the need for manual model linking or reliance on top-down average assumption modelling techniques. TUFLOW CATCH’s design is flexible so as to support tailoring of its configuration to meet individual application demands, and as such allows for execution of multiannual studies such as (but not limited to): Seamless assessment of the impact of land use or other catchment based changes on the hydrodynamics of downstream receiving waterways (i.e. without the need to simulate pollutant export, see Section 1.3, bullet point 1) Assessment of the impact of land use or other changes on catchment hydrology and/or pollutant export (i.e. without the need to directly include receiving waterway numerical simulation, see Section 1.3, bullet point 2) Assessment of the efficacy of proposed catchment changes on downstream receiving riverine or estuarine health (i.e. fully integrated catchment and receiving waterway simulation of water flow and pollutant dynamics, see Section 1.3, bullet point 3) Assessment of the interaction of catchment inflows with water supply offtakes or other sensitive receptors Sediment and other pollutant export catchment dynamics investigations Various combinations of the above \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) 1.2 Features Several key features have been included in the design of TUFLOW CATCH to support its use. Some are listed below. Simulation engine. To affect whole-of-catchment simulation, TUFLOW CATCH links and augments the power and functionality of two existing TUFLOW engines. This means that the decades of development, expertise and rigour embedded in the TUFLOW suite of products is exploited by TUFLOW CATCH. These existing TUFLOW engines are: TUFLOW HPC: Fixed grid simulation of 1D and 2D surface and subsurface catchment hydrology, hydraulics, pollutant export and transport TUFLOW FV: Flexible mesh simulation of 1D, 2D and 3D receiving waterway hydrodynamic, advection dispersion, heat, sediment transport, water quality and particle tracking Conceptually, TUFLOW CATCH links and coordinates TUFLOW HPC and TUFLOW FV as in Figure 1.1. TUFLOW HPC coverage is represented by the fixed grid iconography, and TUFLOW FV is shown as contained within the enclosing thick brown boundary line. This intention is that this figure conveys the ability of TUFLOW CATCH (in its most advanced configuration) to use advanced numerical techniques (free of top-down lumping assumptions) to seamlessly simulate 1D, 2D and 3D water and pollutant dynamics from top of catchment to receiving waterway outlet. TUFLOW CATCH can also be configured to simulate other (less advanced but still important and relevant) combinations of environmental flows and pollutant transport processes (see Section 1.3). Figure 1.1: Conceptual arrangement of TUFLOW CATCH engines Pollutant export. TUFLOW CATCH adds pollutant export functionality to TUFLOW HPC. Pollutants are able to be liberated on a cell by cell basis and under a range of user-selectable algorithms (accumulation-washoff or shear stress based, for example), and then routed as surface and/or subsurface flows and concentrations, via solution of the equations of motion and transport, rather than using lumped top-down average assumptions Automatic linkage When required, TUFLOW CATCH automatically links the bottom of catchment TUFLOW HPC predictions (for both flow and pollutant concentrations) to the upstream of TUFLOW FV’s model domain to present a single integrated modelling platform to the user, with no need for manual handling or other post/pre processing. To affect this, TUFLOW CATCH automatically Determines the spatial locations where surface and subsurface waters drain to the user defined TUFLOW FV mesh (or GIS polygon if TUFLOW FV simulation is not selected) and designates these as inflow locations to TUFLOW FV (or simply a single exit point if a polygon is specified), and then Writes the TUFLOW HPC predictions as fully formatted TUFLOW FV inflow boundary conditions files and blocks, either as nodestrings or elements. If a downstream polygon is specified then timeseries of summed outlet flows and masses are reported Command syntax. TUFLOW CATCH uses familiar TUFLOW style command == argument(s) syntax that has a long established pedigree within all other TUFLOW products Flexibility of constituents. TUFLOW CATCH, when combining TUFLOW HPC and TUFLOW FV in full can simulate any constituents that are initialised in TUFLOW FV, across all its modules, including sediment transport and water quality. TUFLOW CATCH can also run TUFLOW HPC in pollutant generation mode only (without activating TUFLOW FV, i.e. the ‘pollutant export’ configuration, see Section 1.3), and in this instance, users can specify any pollutants they wish to simulate (e.g. ‘PFAS’ or ‘DDT’ etc.) - these do not need to be simulated by TUFLOW FV or its modules Log file user feedback. TUFLOW CATCH simulations generate TUFLOW HPC and TUFLOW FV log files as per usual that report all simulation configuration details for review in a single consolidated location Results viewing. TUFLOW CATCH has its own freely available QGIS plugin to support viewing and interrogation of combined TUFLOW HPC and TUFLOW FV results, as a single data set, such as Figure 1.2 Figure 1.2: Example of using the QGIS TUFLOW CATCH plugin to view combined results 1.3 Configurations Given its construction philosophy, TUFLOW CATCH can be set up and executed in three supported configurations: Hydrology. The most basic configuration of TUFLOW CATCH is to simulate water movement (without generated pollutants) through surface (and optionally subsurface) catchment flows, and to automatically route these into a downstream receiving hydrodynamic (only) waterway model. At the point of routing, constant/timeseries salinity and temperature may be assigned to allow baroclinic TUFLOW FV receiving water modelling. Use cases might include investigation of velocity fields in receiving waterways under a range of separate or continuous catchment inflow regimes, or modification of these fields in response to changes in catchment conditions, such as urbanisation. In this instance, the computational engines would be configured as follows: TUFLOW HPC: Simulate surface (and optionally subsurface) hydrology, and optionally constant or timeseries temperature and salinity. In addition to map outputs, write inflow boundary condition files for TUFLOW FV. These only contain water flows with optionally temperature and salinity, without associated generated pollutant concentrations TUFLOW FV: Simulate and report 2D or 3D hydrodynamics, optionally including temperature and salinity Pollutant export. The next level of functionality offered by TUFLOW CATCH is the addition of pollutant export within the catchment simulation, without the explicit and subsequent simulation of the fate and transport of these pollutants in a downstream receiving model. Use cases might include investigation of pollutant export properties of a catchment under differing rainfall conditions, or the variation of this export in response to the implementation of intervention measures or land use changes. In this instance, the computational engines would be configured as follows: TUFLOW HPC: Simulate surface (and optionally subsurface) hydrology, with pollutant export and transport. In addition to map outputs, write summary timeseries of total flows and pollutant export at a user defined catchment outlet. This outlet is defined by a user specified GIS polygon rather than a TUFLOW FV mesh TUFLOW FV: No simulation Integrated. This level represents the full functionality offered by TUFLOW CATCH. It augments the Pollutant export configuration above by including the explicit 2D or 3D simulation of the fate and transport of all catchment derived flows and pollutants within the downstream waterway model. Use cases might include the investigation of the efficacy of catchment intervention works on downstream water quality over multiannual periods. In this instance, the computational engines would be configured as follows: TUFLOW HPC: Simulate surface (and optionally subsurface) hydrology, with pollutant export and transport. In addition to map outputs, write summary timeseries of total flow and pollutant export at catchment outlet, as well as fully formatted inflow and concentration boundary condition files for TUFLOW FV TUFLOW FV: Direct simulation of 2D or 3D baroclinic hydrodynamics, with sediment transport and/or water quality (and optionally other TUFLOW FV modules such as particle tracking) If only the simulation of surface and subsurface water flows (and not pollutants) are of interest, and with no intended linkage between TUFLOW HPC and TUFLOW FV (i.e. the Hydrology configuration above but with no linkage to TUFLOW FV), then TUFLOW HPC can be run in isolation without the need for TUFLOW CATCH. Simply setting up and running TUFLOW HPC with appropriate results outputs at bottom of catchment (via PO or similar outputs) would suffice. If either linkage with TUFLOW FV or simulation of pollutant export is of interest, then TUFLOW CATCH is required. TUFLOW CATCH supports one-way linking of flows and concentrations from TUFLOW HPC to TUFLOW FV. 1.4 Science The science underpinning TUFLOW CATCH is that developed for TUFLOW HPC and TUFLOW FV (including their respective modules) and is described in those user and science manuals, and relevant release notes here: TUFLOW HPC TUFLOW FV 1.5 Support BMT sells, distributes and supports TUFLOW CATCH. Contact support@tuflow.com and sales@tuflow.com for support and sales inquiries, respectively. Several supporting appendices have also been included in this manual. These contain content to assist users in applying TUFLOW CATCH. These appendices are interlinked and hyperlinked with content from the body of the manual where appropriate, and are: Appendix A Interactive listing of all commands, and their syntax, arguments, descriptions and cross references Appendix B Interactive listing of all parameters, and their symbols, units, ranges and links to underlying science descriptions Appendix C Description of output files and their associated data fields Appendix D A purpose built suite of small TUFLOW CATCH demonstration models for free download and use The user is directed to the respective manuals noted in Section 1.4 above for TUFLOW HPC and TUFLOW FV commands other than those specific to TUFLOW CATCH. All TUFLOW CATCH commands are described in this manual. "],["Architecture-1.html", "Section 2 Architecture 2.1 Context 2.2 Intention 2.3 Core Architecture", " Section 2 Architecture This section provides a description of TUFLOW CATCH’s core architecture. This description is intentionally introductory, and details required to set up and execute simulations that deploy TUFLOW CATCH are provided in Sections 4 and 5. \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) 2.1 Context As our understanding of the natural environment advances, the questions asked of environmental numerical models are rapidly increasing in breadth and complexity. Setting up, calibrating and executing defensible environmental models to assist in addressing such questions has therefore become an increasingly challenging proposition. This is particularly relevant with regard to whole-of-catchment studies where the linkage between catchment management intervention and associated receiving water changes is of increasing interest (and complexity) within the environmental management space. The architecture and functionality of TUFLOW CATCH has therefore been deliberately designed to assist environmental modellers in overcoming some of these challenges, and in doing so improve the efficiency and effectiveness with which numerical modelling can support longer term environmental management at the catchment scale. Importantly, TUFLOW CATCH’s architecture provides a mechanism by which users can seamlessly simulate hydrologic, hydraulic, pollutant export and transformative receiving water quality processes within one unified, automated and internally consistent framework. This deliberate design choice has been motivated by the observation that historically, catchment and receiving waterway simulations have often been undertaken using disparate modelling platforms not designed or intended to be linked, and that (more often then not) operate under materially different assumptions and levels of scientific rigour. One example of such an instance might be where predictions from a catchment model that uses average (spatially and temporally lumped) hydrology and event mean pollutant export assumptions are used to provide inflow boundary conditions to a fully three dimensional receiving water quality model that operates on a highly spatial and temporally resolved domain and makes limited average assumptions. TUFLOW CATCH exploits the latest compute power advances and scientific rigour to overcome such disconnects. In short, TUFLOW CATCH has been designed to provide access to state of the art bottom-up environmental modelling science at the integrated catchment scale, without deploying top-down average assumptions. The core architecture that provides this easy access is described below, and the details of the methods deployed in supplementary processes such as geolocation are described in Sections 3.1 and 3.2. The associated simulation commands and execution approaches are provided in Sections 4 and 5, respectively. 2.2 Intention The intention of the execution coordination sequences described below is that they provide a robust means to automatically link catchment and receiving waterway models within three overarching configurations to support integrated environmental assessment. It is noted that this architecture deliberately: Supports multiple users working on a project simultaneously by allowing (from the same TUFLOW CATCH control file, see Section 4.5): Simulation of TUFLOW HPC without needing to execute TUFLOW FV, and/or Simulation of TUFLOW FV without needing to execute (or repeatedly execute) TUFLOW HPC Aligns with the use of version control platforms to support multi-user co-development. Such use was intended as part of designing TUFLOW CATCH’s architecture, and it means that the same TUFLOW CATCH control file can be used by multiple users to initially independently drive TUFLOW HPC and TUFLOW FV model builds. When appropriate, version control techniques can then be used to unify model builds. This approach avoids the need to build disparate TUFLOW HPC and TUFLOW FV models, and then recast these into a TUFLOW CATCH control file framework: co-development is a core design feature of TUFLOW CATCH. 2.3 Core Architecture TUFLOW CATCH provides three primary functions: Coordination of the execution of TUFLOW HPC and TUFLOW FV across a whole-of-catchment domain (Hydrology and Integrated configurations) Automatic geolocation and writing of flow and concentration boundary conditions for TUFLOW FV (as the receiving water model), generated from TUFLOW HPC predictions (as the catchment model) (Hydrology and Integrated configurations) Pollutant export and transport calculations within a catchment (Pollutant export and Integrated configurations) The first of these is its core architectural capability and so is described here in Section 2.3.1. The latter two are technical componentry of this architecture and so are described in Sections 3.1 and 3.2, respectively. 2.3.1 Execution Coordination In Hydrology and Integrated configurations, TUFLOW CATCH overarches both TUFLOW HPC and TUFLOW FV to coordinate their execution to affect integrated numerical simulation of water and pollutant flows across a catchment and its receiving waters (the latter of which also includes water quality pollutant transformations). Whilst not undertaking equation solution itself, TUFLOW CATCH does coordinate these supporting TUFLOW products to do so in their respective domains, which are: TUFLOW HPC: 1D and 2D surface and subsurface catchment hydrology and hydraulics, with or without pollutant export and transport TUFLOW FV: 1D, 2D and 3D hydrodynamic, sediment transport, water quality and particle tracking (or user selectable module subsets/combinations thereof) receiving waterway modelling The order of execution of TUFLOW HPC and TUFLOW FV, coordinated automatically under TUFLOW CATCH for each of the supported simulation configurations described in Section 1.3, is as follows. 2.3.1.1 Hydrology configuration Execute TUFLOW FV in test mode with the intention of Reading the TUFLOW FV model mesh and writing the associated mesh check file for subsequent use by TUFLOW HPC in its automatic geolocation processes Execute TUFLOW HPC, with the intention of Reading the TUFLOW FV mesh check files to determine the receiving water model domain location and extent Comparing this mesh with the TUFLOW HPC grid to then determine which TUFLOW HPC cells are to be designated as transfer cells where boundary conditions for TUFLOW FV are to be written (see Section 3.1) from TUFLOW HPC predictions Executing the TUFLOW HPC catchment based hydrologic and hydraulic modelling over the period specified Writing TUFLOW FV flow (and optionally constant and/or timeseries temperatures and salinities) boundary conditions at designated transfer cells Reporting map outputs such as water depth and velocity, as well as downstream timeseries of summed flows leaving the TUFLOW HPC domain Re-execute TUFLOW FV with the intention of Executing 1D, 2D and 3D hydrodynamic receiving waterway modelling, using the flow (and optionally temperature and salinity) boundary conditions developed by TUFLOW HPC above Reporting receiving waterway simulation results such as flows and velocity fields 2.3.1.2 Pollutant export configuration Execute TUFLOW HPC, with the intention of Reading a user specified GIS polygon that defines the areal extents of the downstream receiving waterway Comparing this polygon with the TUFLOW HPC grid to then determine which TUFLOW HPC cells are to be designated as deactivated cells Executing the TUFLOW HPC catchment based hydrologic, hydraulic and pollutant export modelling over the period specified Reporting map outputs such as water depth, velocity, dynamic pollutant concentrations in the surface and/or subsurface domains, dry store evolutions and/or erosion/deposition zones (see Section 3.2) and downstream timeseries of summed flows and pollutant loads leaving the TUFLOW HPC domain through the user specified GIS polygon 2.3.1.3 Integrated configuration Execute TUFLOW FV in test mode with the intention of Reading the TUFLOW FV model mesh and writing the associated mesh check file for subsequent use by TUFLOW HPC in its automatic geolocation processes Reading the TUFLOW FV sediment transport and/or water quality log files to determine the suite of constituents to be simulated in the receiving waterway, and therefore those that require specification and simulation as exported (or constant and/or timeseries) pollutants in TUFLOW HPC Execute TUFLOW HPC, with the intention of Reading the TUFLOW FV mesh check files to determine the receiving water model domain location and extent Comparing this mesh with the TUFLOW HPC grid to then determine which TUFLOW HPC cells are to be designated as transfer cells where boundary conditions for TUFLOW FV are to be written (see Section 3.1) from TUFLOW HPC predictions Checking the pollutants specified in the pollutant export model for consistency with those set in the TUFLOW FV simulation Executing the TUFLOW HPC catchment based hydrologic, hydraulic and pollutant export modelling over the period specified Writing TUFLOW FV boundary conditions at designated transfer cells, including assignment of constant and/or timeseries pollutants in addition to those computed dynamically within TUFLOW HPC Reporting catchment based simulation results such as water depth, velocity, dynamic pollutant concentrations in the surface and/or subsurface domains, dry store evolutions and/or erosion/deposition zones (see Section 3.2) and downstream summed flows and pollutant loads leaving the TUFLOW HPC domain and entering the TUFLOW FV mesh Re-execute TUFLOW FV with the intention of Executing 1D, 2D and 3D hydrodynamic, sediment transport, water quality and particle tracking (or user selectable module subsets/combinations thereof) receiving waterway modelling, using the boundary conditions developed by TUFLOW HPC above Reporting receiving waterway simulation results such as pollutant concentrations and diagnostic mass fluxes "],["ProcessDescriptions-1.html", "Section 3 Process Descriptions 3.1 Geolocation 3.2 Pollutant Export", " Section 3 Process Descriptions Previous chapters have presented an overview of the architecture and capabilities of TUFLOW CATCH. This chapter presents the details of the processes that TUFLOW CATCH executes. It does not present the processes executed by either TUFLOW HPC or TUFLOW FV: these are detailed in the respective model user and science manuals, and relevant release notes here: TUFLOW HPC TUFLOW FV TUFLOW CATCH provides three primary functions: Coordination of the execution of TUFLOW HPC and TUFLOW FV across a whole-of-catchment domain (Hydrology and Integrated configurations) Automatic geolocation and writing of flow and concentration boundary conditions for TUFLOW FV (as the receiving water model), generated from TUFLOW HPC predictions (as the catchment model) (Hydrology and Integrated configurations) Pollutant export and transport calculations within a catchment (Pollutant export and Integrated configurations) The first of these is its core architectural capability and so is described in Section 2.3.1. The latter two are technical componentry of this architecture and so are detailed here in Sections 3.1 and 3.2, respectively. 3.1 Geolocation Manually linking catchment and receiving water models can potentially be a time consuming and error prone process. When executed in configurations other than Pollutant export (see Section 1.3), TUFLOW CATCH undertakes this task automatically via a process of geolocation, whereby TUFLOW HPC cells that spatially coincide with either TUFLOW FV nodestring inflows (user nominated, see Section 4.5.4) or TUFLOW FV mesh cells are identified. These TUFLOW HPC cells are called transfer cells. Once identified, these transfer cells track the local surface and groundwater flow volumes and constituent masses predicted by TUFLOW HPC, and each transfer cell’s outflows are converted into timeseries and exported into the comma delimited (.csv) format expected by TUFLOW FV as boundary conditions. It is noted that: Where the user has nominated a nodestring/s as transfer locations from TUFLOW HPC to TUFLOW FV, TUFLOW CATCH will write the corresponding TUFLOW FV boundary condition files as ‘Q’ types that include the transfer of momentum from TUFLOW HPC to TUFLOW FV. As such, these boundaries (and specifying the corresponding TUFLOW FV nodestrings) should be considered where channelised riverine inflows and the like are to be matched, i.e. where inflow momentum is important in controlling receiving water hydrodynamics Where TUFLOW CATCH automatically geolocates non-nodestring transfer locations from TUFLOW HPC to TUFLOW FV, TUFLOW CATCH will write the corresponding TUFLOW FV boundary condition files as ‘QC’ types that exclude the transfer of momentum from TUFLOW HPC to TUFLOW FV. As such, these boundaries should typify non-channelised ‘lateral’ inflows where momentum transfer is less important in controlling receiving water hydrodynamics Boundary data for TUFLOW FV is written with date (dd/mm/yyyy hh:mm:ss) format TUFLOW HPC cells that are located within the TUFLOW FV mesh but are not transfer cells (e.g. lie well within the TUFLOW FV model mesh) are designated as deactivated within TUFLOW HPC and are not included in simulation This automated selection of linkage cells is sufficiently robust to handle relative differences in mesh/grid resolution between TUFLOW HPC and TUFLOW FV, including cases where the TUFLOW HPC model is higher resolution than the (local) TUFLOW FV model mesh, and vice-versa. Some typical cases are presented in Figure 3.1. Figure 3.1: Examples of linkages under varying TUFLOW HPC and TUFLOW FV cell resolutions After all mesh elements and boundary nodestrings are processed, any cells entirely within the TUFLOW FV mesh are deactivated from TUFLOW HPC computations - these locations within the overall model domain are simulated by TUFLOW FV. The locations of the TUFLOW HPC transfer cells automatically geolocated by TUFLOW CATCH are reported in the TUFLOW HPC ‘hpc_transfer’ check file for review. The corresponding TUFLOW FV boundary condition locations are also reported in the TUFLOW FV ‘bc_check_P’ check files. An example of both is presented in Figure 3.2, with TUFLOW HPC and TUFLOW FV check file outputs on the left (brown squares) and right (red dots), respectively. Figure 3.2: HPC transfer cell (left) and TUFLOW FV boundary cell (right) check file examples The above geolocation process does not exclude or prevent the TUFLOW FV user from manually specifying additional boundaries to a TUFLOW FV model. For example, tidal or wastewater discharge (or other) boundaries can be specified by the user within the TUFLOW CATCH control file as per a normal TUFLOW FV model set up by specifying ‘bc’ blocks as required. TUFLOW CATCH will collect these manual (user defined) boundaries and all automatically geolocated boundaries and apply them to the execution of TUFLOW FV under TUFLOW CATCH. An example of how this geolocation method supports transfer of water, concentrations and momentum is provided in Figure 3.3. The animation presents a catchment derived TUFLOW HPC flow originating from left of screen (and from the fixed grid domain) being transferred automatically into the (flexible mesh) TUFLOW FV domain, and then advected downstream to the right. Constituent concentrations vary from low (blue) to red (high). Figure 3.3: Example of transferral of an inflow (from left to right) from TUFLOW HPC to TUFLOW FV 3.2 Pollutant Export TUFLOW CATCH supports the simulation of pollutant generation and associated surface (and optionally subsurface) transport within the catchment domain. It does so on a spatially varying basis via use of materials so that, in a manner analogous to hydraulic roughness calculations (that also use materials), pollutant export simulation is ultimately affected on a computational cell by computational cell basis. This obviates the need to make top-down lumped hydrologic or pollutant export related assumptions, and facilitates the solution of the equations of motion and solutes on a spatially and temporally resolved basis. \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) Pollutant export simulation within TUFLOW CATCH allows for any of the following simulation methods per pollutant: Constant. Specification of a constant concentration to be written to TUFLOW FV boundary conditions without numerical simulation in TUFLOW HPC. Examples include water quality constituents that are not meaningfully conceptualised as being liberated from a ground surface, such as dissolved oxygen, or Timeseries. Specification of a time varying concentration, again to be written to TUFLOW FV boundary conditions without numerical simulation. Examples include water temperature Material based. Specification of the following on a material by material basis, for a given pollutant: The computational pollutant export method to be used The parameters associated with the selected computational pollutant export method Different pollutant export methods across the above options can be used within a single TUFLOW CATCH simulation for different pollutants. A given pollutant, however, should not have different material based pollutant export methods applied to it within a given simulation. Commands are provided in detail in Section 4, however an example of such a specification is provided following, with incomplete (…) parameter lists for brevity. Constant POLLUTANT_A == 8.0 Time-series POLLUTANT_B == temptre Material == ALL \\(\\blockindent\\)POLLUTANT_C,Method==method1,param1==100.0… \\(\\blockindent\\)POLLUTANT_D,Method==method2,param1==10.0… \\(\\blockindent\\)POLLUTANT_E,Method==method1,param1==0.17… \\(\\blockindent\\)POLLUTANT_F,Method==method2,param1==1.23… \\(\\blockindent\\)… End Material Material == 1,4 \\(\\blockindent\\)POLLUTANT_C,Method==method1,param1==43.0… \\(\\blockindent\\)POLLUTANT_E,Method==method1,param1==0.37… \\(\\blockindent\\)… End Material Multiple constant and time-series pollutants can be specified (via individual command lines), and material blocks can be specified to apply to more than one material (the above example applies to ALL materials, then materials 1 and 4, for example). In a manner akin to specification of roughness in TUFLOW HPC, sequences of material blocks progressively spatially overwrite in the order presented. In the above example, materials 1 and 4 would therefore be interpreted as Material == 1,4 \\(\\blockindent\\)POLLUTANT_C,Method==method1,param1==43.0… \\(\\blockindent\\)POLLUTANT_D,Method==method2,param1==10.0… \\(\\blockindent\\)POLLUTANT_E,Method==method1,param1==0.37… \\(\\blockindent\\)POLLUTANT_F,Method==method2,param1==1.23… \\(\\blockindent\\)… End Material Materials 2 and 3 would be as per the ALL specification above. Different computational pollutant export methods can be assigned to different pollutants within a single material block. The same computational pollutant export method should be assigned to the same pollutant across multiple material blocks, albeit with different parameterisations. For example, POLLUTANT_C should not have the Washoff1 method applied in material 3 and the Shear1 method applied in material 1. The above pollutant export models are described following. 3.2.1 Constant The constant pollutant export method is the simplest of all available methods. It does not involve any calculations within TUFLOW HPC. Rather, it has TUFLOW CATCH assign the specified constant value to the relevant column in all TUFLOW FV boundary condition files produced by TUFLOW HPC, for all times. It is suitable for pollutants that are conceptually inconsistent with generation from a ground surface, such as dissolved oxygen or phytoplankton. 3.2.2 Timeseries The timeseries pollutant export method does not involve any calculations within TUFLOW HPC Rather, it has TUFLOW CATCH assign an interpolated timeseries value to the relevant column in all TUFLOW FV boundary condition files produced. Interpolation is based on matching the specified timeseries timestamp with the output frequency of TUFLOW FV boundary condition files. It is suitable for pollutants that are conceptually inconsistent with generation from a ground surface and also likely to vary temporally, such as water temperature. One timeseries per pollutant can be specified and it is applied across the entire model domain. 3.2.3 Material based export The material based pollutant export method involves cell by cell calculations within TUFLOW HPC, coordinated by TUFLOW CATCH. The available methods are described following. 3.2.3.1 Accumulation and washoff Accumulation/washoff methods are common in urban water modelling and are conceptually distinct from event mean concentration / dry weather concentration (EMC/DWC) methods. The former have been the subject of considerable research and development since at least the 1970s. In short, the accumulation washoff method conceptualises pollutant accumulation during no-flow or low-flow conditions and washoff during higher-flow conditions. Typically, a proportion of the accumulated pollutant runs off if a threshold flow or flow depth is reached (i.e. enough energy is available for liberation of mass). This mechanism is generally based on a non-linear function for the runoff, if runoff is not explicitly simulated (e.g. in models that make lumped average assumptions). TUFLOW CATCH’s implementation of this method (that explicitly simulates hydrology so does not resort to such lumped assumptions) is described following. It can be applied equally to both dissolved and particulate pollutants. 3.2.3.1.1 Accumulation TUFLOW CATCH allows for the specification of accumulation rates (kg/ha/yr) for each pollutant simulated, on a spatially varying (material by material) basis. These rates are linearly applied in time until a user specified maximum areal mass (also kg/ha/yr) is reached. Even though these rates and maximums are specified per material, they are used to undertake accumulation calculations on a cell by cell basis at the beginning of every timestep. For example, if a user has specified a 5 metre TUFLOW HPC grid size, then pollutant accumulation calculations will be undertaken at this same spatial resolution. As each pollutant accumulates, it is added to TUFLOW HPC’s dry store mass, which is also tracked on a cell by cell basis. It is this dry store mass that is then depleted (washed off) when user specified hydrologic conditions are met (see Section 3.2.3.1.2). Each pollutant’s and each cell’s dry store mass is temporally incremented at the specified rate, up to a user specified limiting areal mass (kg/ha). One advantage of the pollutant accumulation method is that the user has full control over the spatial distribution of the associated rates, through the use of materials. Specifically, each material is assigned these rates, and materials are (typically) specified as polygons that cover regions with similar pollutant properties (analogous to roughness materials). Although it may seem natural to equate this spatial distribution of pollutant properties with land uses (as is often the case in lumped hydrology/pollutant export models), this is not a requirement of TUFLOW CATCH. Indeed, the user has full discretion with regard to how pollutant properties are set, and whilst perhaps making initial use of land use data, it is possible that different material polygons that represent the same land use are given different pollutant properties. For example, an ‘urban’ land use might be tagged to two separate housing estates in a generic land use GIS vector layer, but the user may also know that one estate has stormwater treatment devices in place and the other does not. In such an instance, different pollutant accumulation (and washoff) parameters can be applied through TUFLOW CATCH. In short, TUFLOW CATCH has been deliberately designed to allow users to insert their local knowledge of the systems being modelled into the model build process directly, down to a cell by cell spatial resolution if required, without being limited by lumping assumptions. Akin to the flexibility offered in spatial resolution, TUFLOW CATCH allows full control over the specification of pollutant accumulation rates, and in doing so allows the user to inform the modelling process with local knowledge and expertise. Users are therefore encouraged to undertake their own reviews and specifications of pollutant accumulation rates, and associated material configurations. Notwithstanding this, some indicative pollutant accumulation rates are provided in Table 3.1. These are not to be seen as endorsed or recommended by TUFLOW, but are provided for information only. Decimal places are not intended to imply precision. Table 3.1: Indicative pollutant accumulation rates Pollutant Lower estimate (kg/ha/yr) Upper estimate (kg/ha/yr) Sediment 55.00 300.00 Ammonium 0.20 2.00 Nitrate 0.50 3.00 Filterable reactive phosphorus 0.01 0.03 Dissolved organic nitrogen 1.00 2.00 Particulate organic nitrogen 1.00 3.00 Dissolved organic phosphorus 0.01 0.05 Particulate organic phosphorus 0.06 0.60 Dissolved organic carbon 20.00 70.00 Particulate organic carbon 12.00 40.00 The relevant TUFLOW CATCH commands are described in Section 4.5.3.3.1. 3.2.3.1.2 Washoff TUFLOW CATCH allows for the specification of the manner in which the accumulated dry store mass described in Section 3.2.3.1.1 is washed off in response to local hydrologic conditions. This specification occurs in the same command line as accumulation rates (for a given pollutant), which is therefore also on a material by material basis: for a given material and pollutant, the accumulation and washoff parameters are related, and therefore co-specified. The TUFLOW CATCH washoff method is presented conceptually in Figure 3.4. Under wet weather conditions, a mass per unit area \\(\\Delta\\) (kg/ha) is released from the dry store mass (\\(\\alpha_{dry}\\), kg/ha) into the wet store (\\(\\alpha_{wet}\\), concentration \\(C\\), mg/L) (i.e. to add to a water concentration), governed by a user defined time constant (also referred to as a time of concentration), T\\(_c\\), such that over a timestep \\(dT\\) (with appropriate conversion factors for reconciliation of units): \\[\\begin{equation} \\Delta = dT\\frac{\\alpha_{dry}}{T_c} \\tag{3.1} \\end{equation}\\] This release only occurs once user specified minimum rain rates, \\(R_r\\), and surface water depths, \\(d\\), have both been exceeded. Otherwise, the dry store masses described in Section 3.2.3.1.1 are accumulated at the rates specified. Figure 3.4: Washoff method If a pollutant is released into its wet store, it is transported according to the progression of hydrologic and hydraulic flows (and associated advection and dispersion), which is completed as a separate calculation step to the generation update. Settling velocities are assigned to individual pollutants, and may vary spatially with material. An example of where the latter might be applied is when sediment is known to flocculate in saline conditions and hence have its settling properties modified. Any settling returns pollutants from the wet store to the dry store. This is not recommended for dissolved pollutants, and where settling is to be turned off, the velocity should be set to zero. The mass flux per unit area in time \\(dT\\) due to settling \\(\\Delta\\) (kg/ha) is given by Equation (3.2): \\[\\begin{equation} \\Delta = dT \\times w_sC \\tag{3.2} \\end{equation}\\] w\\(_s\\) is the user specified settling velocity, \\(C\\) is the wet store cell concentration of pollutant. No other constraints to settling occurring are applied in this model. If soils and subsurface flow (interflow) is not simulated in TUFLOW HPC, then this transport is purely surficial. If soils are included then released pollutants will be transported in both the surface and subsurface in accordance with water flows. TUFLOW CATCH allows for the optional prevention of infiltration of a given pollutant into the subsurface flow if soils are included in the TUFLOW HPC simulation. This is most relevant for particulate pollutants such as sediment or particulate organic material. A conceptualisation of TUFLOW CATCH’s pollutant generation and transport methods is presented in Figure 3.5. Figure 3.5: TUFLOW CATCH pollutant generation method The relevant TUFLOW CATCH commands are described in Section 4.5.3.3.1. 3.2.3.2 Shear Stress Shear stress generation methods are common in natural waterway modelling studies (e.g. estuaries and coastal oceans), particularly with regard to the simulation of sediment transport. In short, these methods conceptualise sediment release from the bed as a function of overlying hydrodynamic shear stress: once a specified minimum shear stress is exceeded, sediment is released to the water column. Similarly, these methods also allow for deposition of previously suspended sediment back to the bed, and this is typically allowed to occur (at a set settling velocity) once ambient hydrodynamic shear stress drops below a specified maximum depositional shear stress. More advanced methods allow for construction of intermediary bed roughness models that translate raw hydrodynamic shear stress to the corresponding shear stress that is actually felt by the bed and can therefore cause erosion (or allow deposition). These methods therefore allow for the ongoing erosion and deposition of particulate materials as hydrodynamic conditions evolve in time and space. TUFLOW CATCH’s implementation of this method is described following. It is intended to be applied primarily to particulate pollutants, rather than dissolved. 3.2.3.2.1 Erosion TUFLOW CATCH allows for the specification of erosion behaviour of any pollutant, on a spatially varying (material by material) basis. Even though this behaviour is specified per material, it is used to undertake erosion calculations on a cell by cell basis at the beginning of every timestep. For example, if a user has specified a 5 metre TUFLOW HPC grid size, then erosion calculations will be undertaken at this same spatial resolution. As each pollutant erodes from its dry store mass, it is released to its wet store and advected/dispersed accordingly. This removal is tracked and reported at the end of a simulation as a loss to each cell’s dry store mass (kg/ha). TUFLOW CATCH adopts the Mehta erosion model on a cell by cell basis, such that the erosive flux \\(\\Delta\\) (kg/ha) is given by Equation (3.3) in time \\(dT\\) (with appropriate units conversions): \\[\\begin{equation} \\Delta = dT \\times E_r\\left(\\frac{\\tau}{\\tau_{ce}}-1\\right)^{\\alpha} \\tag{3.3} \\end{equation}\\] \\(E_r\\) is the erosion rate (g/m\\(^2\\)/s), \\(\\tau\\) is the simulated hydrodynamic shear stress (N/m\\(^2\\)), \\(\\tau_{ce}\\) is the user specified critical shear stress for erosion (N/m\\(^2\\)), \\(\\alpha\\) is a dimensionless parameter set to 1.0 and \\(\\tau &gt; \\tau_{ce}\\). TUFLOW CATCH does not deploy a bed roughness model so \\(\\tau\\) is the pure hydrodynamic shear stress calculated from cell velocity. Once computed, eroded mass is tracked so that at simulation end, TUFLOW CATCH produces a map of eroded areas that allows for identification, for example, of ‘hotspot’ erosion locations. Users specify a limit to the mass of pollutant per unit area that is erodable within each material. This can be converted by the user to a depth via independent post processing steps if desired, by assuming a bulk density. This same output layer presents areas of accumulation, if this has occurred. The relevant TUFLOW CATCH commands are described in Section 4.5.3.3.2. 3.2.3.2.2 Deposition TUFLOW CATCH allows for the specification of depositional behaviour of any pollutant, on a spatially varying (material by material) basis. Even though this behaviour is specified per material, it is used to undertake deposition calculations on a cell by cell basis at the beginning of every timestep. As each pollutant deposits from its wet store mass, it is transferred to its dry store mass. This deposition is tracked and reported at the end of a simulation as a gain to each cell’s dry store mass (kg/ha). TUFLOW CATCH adopts the Krone deposition model on a cell by cell basis within this pollutant export model, such that the areal depositional flux \\(\\Delta\\) (kg/ha) in time \\(dT\\) is given by Equation (3.4). This is a more advanced version of the deposition approach used in the accumulation washoff model (Equation (3.2)). \\[\\begin{equation} \\Delta = dT \\times \\left(1-\\frac{\\tau}{\\tau_{cd}}\\right)w_sC \\tag{3.4} \\end{equation}\\] \\(\\tau\\) is the raw hydrodynamic shear stress (N/m\\(^2\\)), \\(\\tau_{cd}\\) is the user specified critical shear stress for deposition (N/m\\(^2\\)), w\\(_s\\) is the user specified settling velocity, \\(C\\) is the wet store cell concentration of pollutant and \\(\\tau &lt; \\tau_{cd}\\). The relevant TUFLOW CATCH commands are described in Section 4.5.3.3.2. "],["SimulationConstruction-1.html", "Section 4 Simulation Construction 4.1 Context 4.2 Usage intent 4.3 Initialisation 4.4 General arrangement 4.5 TUFLOW CATCH control file 4.6 Construction summary", " Section 4 Simulation Construction 4.1 Context Previous sections have presented the architecture and processes available within TUFLOW CATCH. This section describes the usage intent and construction of a TUFLOW CATCH simulation. This includes the use of the TUFLOW CATCH QGIS plugin, descriptions of all commands, with hyperlinks to the Appendices where commands and explanations are listed in a searchable and sortable table for ease of access. \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) 4.2 Usage intent Depending on the chosen configuration, TUFLOW CATCH coordinates and executes TUFLOW HPC, and/or a pollutant export model and/or TUFLOW FV, all automatically and with no direct user input required to affect any of these linkages. This does not, however, mean that TUFLOW CATCH cannot be run until all models (TUFLOW HPC, pollutant export and TUFLOW FV) are fully constructed, even if the target configuration requires all these models eventually. To the contrary, the intention is that the single TUFLOW CATCH control file is used as the common control file for all model construction from project inception, even where this construction is undertaken in parallel by multiple users. The reason for this approach is that, for example, the TUFLOW HPC block of the TUFLOW CATCH control file is nothing other than a standard TUFLOW HPC *.tcf control file, with a small number of additional TUFLOW CATCH commands. This is intentional, and means that an experienced (or beginner who refers to the TUFLOW user manual) TUFLOW HPC modeller can follow normal model set up processes and procedures to construct the TUFLOW HPC component of TUFLOW CATCH model, unhindered, but via the TUFLOW CATCH control file arrangement. The same logic applies to users constructing the TUFLOW FV sections of a TUFLOW CATCH model - the TUFLOW HPC sections of the TUFLOW CATCH control file can be turned off and TUFLOW FV model construction commenced as usual through the *.tcc rather than *.fvc control file. Users in teams that adopt this approach may want to consider using versioning control software to manage concurrent multiple user contributions. It is understood that in some legacy cases, existing TUFLOW HPC or TUFLOW FV models (that were originally built outside TUFLOW CATCH) will need to be brought into a block of a TUFLOW CATCH control file. If this is the case, then the process is a matter of copying and pasting the original control files into the relevant TUFLOW CATCH control file block and populating the supporting folder structures with model data (see following sections). The key change that will be required on pasting into a *.tcc block will be to ensure file path references are correct (see following sections). This is only required from the *.tcc as it points to immediately called files, and no further down the folder tree. 4.3 Initialisation TUFLOW CATCH requires construction of a suite of folder substructures to support simulations. These should be all co-located at the same folder level underneath a single directory that sits within an overall project directory. These substructures correspond to each of the three products potentially used in a TUFLOW CATCH simulation, and should be named as follows (with ‘TUFLOW’ referring to TUFLOW HPC): TUFLOW TUFLOWCATCH TUFLOWFV Each of these substructures has its own subfolder arrangement, consistent with those suggested for standalone TUFLOW HPC and TUFLOW FV modelling studies. For consistency, the suggested TUFLOWCATCH subfolder arrangement is also similar. To assist with this set up, and indeed more broadly with the initialisation, execution and results interrogation of a TUFLOW CATCH simulation, a freely available TUFLOW CATCH QGIS plugin has been developed. TUFLOW eLearning resources (also free of charge) have been prepared to support deployment and use of this TUFLOW CATCH plugin, and as such the content of that resource is not repeated here. Users are however encouraged to access this resource before initialising their first TUFLOW CATCH simulation: using this plugin is seen as a core component of the set up of a TUFLOW CATCH simulation. Doing so manually is discouraged. The eLearning materials can be accessed by: Registering for TUFLOW eLearning here if not already registered Emailing support@tuflow.com noting the registered username and with a request access to the TUFLOW CATCH plugin eLearning course Following instructions subsequently provided to access the course Completing the course On completion of the course, users will be able to initialise a TUFLOW CATCH simulation in the desired geographical projection system, complete with automatically populated templates for all control files. The sections presented below assume that this QGIS initialisation process has occurred and describe the resulting general arrangements and subsequent construction of a TUFLOW CATCH simulation. 4.4 General arrangement 4.4.1 Folder structure The overarching TUFLOW CATCH folder structure created using the QGIS plugin will appear (at the first tier) as per Figure 4.1 (with the top level folder named ‘Modelling’ selected by the user during initialisation). Figure 4.1: TUFLOW CATCH folder structure The expansion of these folders to one level is as per Figure 4.2. The commonality of folder structures should be evident. Figure 4.2: TUFLOW CATCH folder structure, expanded The three relevant executable suites (TUFLOW CATCH, TUFLOW HPC and TUFLOW FV) should be stored in separate subfolders, but within a general EXE folder for neatness, e.g. C:\\EXE\\TUFLOWCatch, C:\\EXE\\TUFLOW and C:\\EXE\\TUFLOWFV. 4.4.2 Intended workflow The above folder structure supports the overall intended TUFLOW CATCH simulation workflow, such that: The TUFLOWCATCH folder (and control file, see below) is the single point of contact for execution of TUFLOW CATCH simulations, regardless of the combination of TUFLOW HPC or TUFLOW FV models being called All simulation results (again, regardless of what subsidiary TUFLOW products are called) are written to the TUFLOWCATCH/results subfolder: users should never need to navigate to TUFLOW HPC or TUFLOWFV output/results folders to examine results from TUFLOW CATCH simulations Users do not need to (and should not) set up their own *.tcf (TUFLOW HPC) or *.fvc (TUFLOW FV) top level control files in the respective TUFLOW and TUFLOWFV runs directories: TUFLOW CATCH does this automatically based on information provided in the overarching TUFLOW CATCH control file Calls to subsidiary first level control files and/or folders from the overarching TUFLOW CATCH control file for both TUFLOW HPC and TUFLOW FV (such as *.tgc, _dbase etc. (TUFLOW HPC) or *.fvsed etc. (TUFLOW FV)) need to be provided as relative paths to locations that sit within the respective TUFLOW or TUFLOWFV subfolder arrangements, from the TUFLOW CATCH runs directory All model data (e.g. grids, GIS, boundaries etc.) should be located within respective subfolder arrangements for TUFLOW and TUFLOW FV These first level control files (that sit within the TUFLOW or TUFLOWFV directory structures) then should be constructed to make the usual relative calls to all other files and data within respective their subfolder arrangements It is suggested that users exploit standard text editor capabilities of opening one text file (e.g. a *.tgc file) from from the currently open text file (i.e. the *.tcc) so as to not need to explicitly navigate between subfolder structures. This is most commonly achieved by right clicking on the relative path of the other file (e.g. *.tgc) as specified in the open text file (i.e. the *.tcc) and using the context menu to open the second file, as per Figure 4.3 (where the relative path on line 48 was right clicked) Figure 4.3: Opening one text file from the relative path in an already open text file In short, it is intended that the: TUFLOW CATCH control file is the primary point of construction and execution contact TUFLOW and TUFLOWFV folder substructures contain respective input model data such as GIS layers, DEMs etc TUFLOWCATCH folder substructure contains model results Subsequent sections describe the TUFLOW CATCH control file set up and model execution. 4.5 TUFLOW CATCH control file A TUFLOW CATCH simulation is set up and executed by constructing a TUFLOW CATCH control file, extension *.tcc. This file should reside in the TUFLOWCATCH\\runs directory set up with the TUFLOW CATCH QGIS plugin. The user is not required to (and should not) construct separate *.tcf or *.fvc control files. This TUFLOW CATCH control file has four separate but related blocks: Global commands Catchment Hydraulic Model (TUFLOW HPC) commands Catchment Pollutant Export Model Receiving Model (TUFLOW FV) commands All blocks must be included in the above order, but the latter three can be optionally switched on and off with a single command (rather than extensive line commenting) to suit modelling needs. For example, a user working only on initial TUFLOW HPC model build and testing tasks can turn off the pollutant export and TUFLOW FV blocks (by specifying these block models to be the keyword ‘none’) and continue building a TUFLOW HPC model as per normal, without the need to always execute all components of TUFLOW CATCH (See Catchment Hydraulic Model ==, Pollutant Export Model == or Receiving Model ==). Construction of each of the TUFLOW CATCH control file blocks is described in the following sections. 4.5.1 Global commands This block of the TUFLOW CATCH control file contains information that is applied equally to both TUFLOW HPC and TUFLOW FV. It is not declared as a block (as all subsequent blocks are). These global commands are presented following (as hyperlinks to Appendix A), with command argument options also shown where appropriate. All commands are mandatory. Some commands can be overwritten if required within subsequent blocks (see Sections 4.5.2 and 4.5.4). Set the hardware to be used, with command arguments as either CPU or GPU: Hardware == Set the GIS format to be used, with command arguments as either SHP (preferred) or GPKG: GIS Format == Set projection to be used, as a path to a shape file. This will have been prepared by the TUFLOW CATCH plugin: SHP Projection == If GPKG is specified as the format and TUFLOW FV is intended to be included in the TUFLOW CATCH simulation then this will need to be overwritten in the receiving model block (see Section 4.5.4) because TUFLOW FV does not yet support geopackage based simulation. Similarly, if GPKG is set, then the projection must also be set as follows GPKG Projection == Set the time format, with command arguments as either ISODATE (dd/mm/yyy hh:mm:ss) or hours (a single float). It is strongly recommended that ISODATE be used for longer simulations, where interpreting hour output timestamps can be difficult: Time Format == Set the start and end times in the format declared above: Start Time == End Time == Set the directory for simulation outputs (e.g. xmdf and netcdf results files). This can be set to any location as either a full path (e.g. X:\\Project\\Results), or as a path relative to the location of the TUFLOW CATCH control file (e.g. ..\\results): Output Directory == Set the directory for writing simulation check files (e.g. .shp files). This can be set to any location as either a full path (e.g. X:\\Project\\Check), or as a path relative to the location of the TUFLOW CATCH control file (e.g. ..\\check): Write Check Files == Set the directory for writing simulation log files. TUFLOW HPC and TUFLOW FV engine log files will be written to this location, as well as module log files (such as the water quality module of TUFLOW FV). This can be set to any location as either a full path (e.g. X:\\Project\\log), or as a path relative to the location of the TUFLOW CATCH control file (e.g. log - which is the folder created by the TUFLOW CATCH plugin by default): Log Folder == In order to collect all log files without name conflictions, TUFLOW CATCH renames the various log files before it writes them to the user nominated directory. The renaming convention is as follows: TUFLOW HPC related log files: &lt;TUFLOW CATCH tcc filename root&gt;_catchment_hydraulic_***.t*f TUFLOW FV related log files: &lt;TUFLOW CATCH tcc filename root&gt;_receiving_***.*log where *** indicates a usual extension expected in a log file such as “messages” (for TUFLOW HPC) or “ext_cfl_dt” (for TUFLOW FV) etc. For example, for a TUFLOW CATCH control file called SysModel_001.tcc, the following log files might be produced (depending on simulation options) TUFLOW HPC related log files: SysModel_001_catchment_hydraulic.hpc.tlf SysModel_001_catchment_hydraulic.tlf SysModel_001_catchment_hydraulic.tsf TUFLOW FV related log files: SysModel_001_receiving_ext_cfl_dt.log SysModel_001_receiving.log SysModel_001_receiving.fvwqlog Set the directory for writing the TUFLOW FV boundary condition files prepared by TUFLOW CATCH from TUFLOW HPC simulation, including boundary condition blocks and underlying data (timeseries) files. This command is required even if TUFLOW FV is not used in a TUFLOW CATCH simulation, in which case template TUFLOW FV files will be written to this location. TUFLOW CATCH also writes TUFLOW HPC diagnostic information to this location (regardless of whether TUFLOW FV is simulated), including timeseries files of predicted catchment-wide summed cumulative volumes and/or masses. These files can be useful for providing system understanding, even when TUFLOW FV is not activated. This directory should be always set as the bc_dbase folder within the TUFLOW CATCH folder substructure (as generated by the TUFLOW CATCH QGIS plugin), as a path relative to the location of the TUFLOW CATCH control file (i.e. ..\\bc_dbase): Catch Output Folder == Set the timestep (in simulation time seconds) at which lines within a boundary condition file for TUFLOW FV (created from TUFLOW HPC predictions) are separated (required even if TUFLOW FV not used). TUFLOW CATCH offers the user the option to set this timestep differently for different types of TUFLOW FV boundaries: nodestrings (Q boundaries that deliver momentum to TUFLOW FV) and lateral inflows (QC boundaries that do not deliver momentum to TUFLOW FV). It would be typical that nodestring boundaries are written at a shorter timestep to lateral boundaries, but this is not mandated, and the user is able to decide how this timestep relates to simulation time and file size constraints: Catch Output Interval Nodestring ==\\(dT_{ns}\\) Catch Output Interval Lateral ==\\(dT_{lat}\\) Set the frequency at which TUFLOW CATCH pauses to write out TUFLOW FV boundary condition files, in units of days (simulation time, required even if TUFLOW FV not used). Setting a value of 1 means that TUFLOW CATCH will hold all boundary information in memory for a day of simulation time, and then update TUFLOW FV boundary files (and summed flow and mass timeseries) with this held memory on a daily basis. For example, if outputs were set to be hourly via either of the above interval commands, then 24 lines would be added to each boundary file at time of writing: CSV Write Frequency Day ==\\(dT_{csv}\\) An example block of these global commands that together configure a TUFLOW CATCH simulation (with clarifying section headers as comments) is: !________________________________________________________ ! GLOBAL COMMANDS ! Hardware Hardware == GPU ! GIS GIS Format == SHP SHP Projection == ..\\..\\TUFLOW\\model\\gis\\projection.prj ! Simulation settings Time Format == ISODATE Start Time == 01/01/2021 00:00:00 End Time == 01/02/2021 00:00:00 ! Output folders Output Directory == X:\\Project\\Results Write Check Files == ..\\check Log Folder == ..\\log ! Boundary condition configuration Catch Output Folder == ..\\bc_dbase Catch Output Interval Nodestring == 900 Catch Output Interval Lateral == 10800 CSV Write Frequency Day == 1 4.5.2 Catchment hydraulic model (TUFLOW HPC) commands This block of the TUFLOW CATCH control file contains commands that construct a TUFLOW HPC simulation. These commands are almost entirely those that would be used in setting up a standalone TUFLOW HPC control file (*.tcf), with a small number of additional commands that relate to TUFLOW CATCH. A number of commands issued in the Global commands section of the *.tcc can be overwritten here if needed. These are: Hardware == GIS Format == If GIS Format is overwritten, then a subsequent new projection file is most likely required to be specified SHP Projection == If GPKG is specified as the GIS format then the projection must also be set as follows GPKG Projection == The catchment hydraulic model definition must be declared as a block that encloses all TUFLOW CATCH and TUFLOW HPC commands. This is different to the global commands section at the top of the TUFLOW CATCH control file, which does not need this encompassing structure. Set the beginning of the block, with command arguments as either HPC or none, and the end of the block (with no command arguments): Catchment Hydraulic Model == \\(\\blockindent\\) …catchment hydraulic model commands… \\(\\blockindent\\) …catchment hydraulic model commands… \\(\\blockindent\\) …catchment hydraulic model commands… End Catchment Hydraulic Model If the Catchment Hydraulic Model command is set to none, then catchment simulation is not executed, and TUFLOW FV will either: Read blank (interim) boundary condition files prepared by TUFLOW CATCH. This approach might be adopted for the initial stages of a TUFLOW FV model build, or dry period tidal / thermal stratification calibration of a receiving water, for example, or Read a suite of TUFLOW FV boundary condition files previously created by TUFLOW HPC, under TUFLOW CATCH running in Hydrology or Integrated configurations The second approach above might be adopted when an initial Hydrology or Integrated simulation has been executed and a first pass corresponding suite of TUFLOW FV boundary condition files (that are not final, but at least sufficient for use in parallel preliminary TUFLOW FV calibration processes) has been produced. In this instance if: TUFLOW CATCH run Model_003.tcc (for example) produced initial TUFLOW FV boundary files The corresponding ..\\TUFLOWCatch\\bc_dbase\\Model_003_catchment_hydraulic.fvcatchbc file could be copied as ..\\TUFLOWCatch\\bc_dbase\\Model_004_catchment_hydraulic.fvcatchbc and Called automatically in Model_004.tcc by a TUFLOW CATCH simulation that has Catchment Hydraulic Model == none This supports TUFLOW FV calibration tasks being executed, without relying on TUFLOW HPC. In order to avoid TUFLOW CATCH overwriting Model_003_catchment_hydraulic.fvcatchbc (which it would normally do if Catchment Hydraulic Model == none), the following command is required in the Receiving Model block of Model_004.tcc (the default is OFF) Preserve Catchment Inflows == ON This approach allows the TUFLOW HPC and TUFLOW modellers to progress independently for a time, gradually progressing their respectively calibrations without: Relying on each other to produce boundaries, and The need to continually rerun TUFLOW HPC to re-produce (identical) TUFLOW FV boundaries This style of collaborative modelling is at the heart of TUFLOW CATCH’s architectural design intent and is a key use case. The TUFLOW CATCH commands contained within this Catchment Hydraulic Model block are described following, and all are mandatory unless noted otherwise. Set the directory from which TUFLOW CATCH controls TUFLOW HPC. Unless there is a need to the contrary, this should be set as a relative path to the TUFLOW\\runs directory set up by the TUFLOW CATCH QGIS plugin, i.e. ..\\..\\TUFLOW\\runs. Setting this to any other directory is not recommended: Runs Directory == Set the full or relative path to the location of the the TUFLOW HPC executable (including the name of the executable itself, with .exe extension) to be called by TUFLOW CATCH: EXE == Set the time format for output results. Given that the intention of TUFLOW CATCH is that it support longer term environmental investigations (i.e. not short term detailed ‘traditional’ flood studies), results written in hours format can be difficult to interpret in terms of seasonality, for example. As such, TUFLOW HPC can be instructed to write results in the time format adopted by TUFLOW FV. Doing so is strongly recommended, especially if TUFLOW FV is using the ISODATE format rather than hours: Time Format == TUFLOWFV Set the relationship between hours and dates. TUFLOW HPC reads boundary condition files and executes its internal computations using an hours (rather than date) timestamp, although this is being upgraded in the mid term. In order to coordinate simulation with TUFLOW FV, and to output results in date format, TUFLOW CATCH requires specification of the date that corresponds to zero hours in TUFLOW HPC boundary (and other) files. This command specifies that date at which boundary and other files refer to zero hours. Note the date time format expected, and that the seconds field is excluded: Zero Date == &lt;dd/mm/yyyy hh:mm&gt; Set TUFLOW HPC to write TUFLOW CATCH related map outputs (e.g. pollutant and other hydraulic xmdf outputs, see Section XXXX). This catch command argument can be comma delimited with other outputs if required: Output Map Data Types == catch Not mandatory. If TUFLOW CATCH is to be deployed in the pollutant export configuration (i.e. with no immediate intention to deploy TUFLOW FV, see Section 1.3), then the following must be set: The use of TUFLOW FV as a receiving model must be switched off. This is achieved by setting the receiving model block command as follows (see Section 4.5.4): Receiving Model == none AND A single polygon (either as a standalone file or as part of a previously specified geopackage) that covers the downstream receiving waters must be specified within the Catchment Hydraulic Model block. This polygon does not need any specific attributes, and can be imported from the empties created by the TUFLOW CATCH QGIS plugin, as an rp polygon type. The TUFLOW HPC cells within this polygon will be removed from the TUFLOW HPC simulation. TUFLOW CATCH will not write any TUFLOW FV boundary condition blocks, but will write: Summary timeseries files that describe total water and pollutant mass fluxes entering the defined polygon. These outputs can be useful for scenario to scenario comparisons, for example Receiving Polygon == &lt;path to polygon or geopackage reference&gt; AND A list of comma separated pollutant names that are to be simulated by TUFLOW CATCH and the pollutant export model. Constant or timeseries pollutants are ignored - only pollutants that are specified within a material block (i.e. that wash off or erode) should be included in this list. These pollutants do not need to be TUFLOW FV keywords/names, and can be completely user defined. These names need to exactly match the names used within each material pollutant export block Pollutant == &lt;name1,name2,name3…&gt; TUFLOW CATCH will error if operating in the pollutant export configuration and either of the above commands are missing Once specified, TUFLOW CATCH will check to ensure that all pollutants have been specified (no more, no less) across material blocks (see Section 4.5.3.3), and error if not. Following the issuing of these specific TUFLOW CATCH commands, a TUFLOW HPC model can be constructed in the same manner as a standalone model. In this regard: All TUFLOW HPC commands are recognised by TUFLOW CATCH and can be issued unchanged from the usage described in TUFLOW HPC’s manual and/or relevant release notes TUFLOW HPC commands that reference other subsidiary control files (such as geometry control files, *.tgc etc.) need to use relative paths, and point to the locations with the TUFLOW directory created by the TUFLOW CATCH QGIS plugin, e.g.: BC Database == ..\\..\\TUFLOW\\bc_dbase\\bc_dbase_001.csv These subsidiary control files can then in turn use path references are per standalone TUFLOW HPC model construction (and point to locations within the same TUFLOW directory structure) Variables can be set within the TUFLOW CATCH Catchment Hydraulic Model block for reference in any other subsidiary TUFLOW HPC files as per normal, e.g.: Set Variable 2D_CELL_SIZE == 25 Scenarios and events can be set within the TUFLOW CATCH Catchment Hydraulic Model block for reference in any other subsidiary TUFLOW HPC file IF statements as per normal, e.g.: Event == wet_year Current limitations of the TUFLOW CATCH with regard to setting up TUFLOW HPC simulations include: Whilst events and scenarios can be manually defined and referenced (see above), dynamic assignment of same (using tilda notation in filenames etc.) is not yet supported. Each event or scenario will need a new TUFLOW CATCH control file An example block of these Catchment Hydraulic Model block commands that together configure a TUFLOW HPC simulation within TUFLOW CATCH (with clarifying section headers as comments) is: !_________________________________________________________________ ! CATCHMENT HYDRAULICS Catchment Hydraulic Model == HPC ! Base runs directory and executable Runs Directory == ..\\..\\TUFLOW\\runs EXE == C:\\EXE\\TUFLOW_iSP_w64.exe Time Format == TUFLOWFV Zero Date == 01/01/2021 00:00 ! GIS GIS Format == GPKG GPKG Projection == ..\\..\\TUFLOW\\model\\gis\\Projection.gpkg ! If operating in Pollutant export configuration ! Downstream polygon Receiving polygon == ..\\..\\TUFLOW\\model\\gis\\2d_rp_Demonstration_001_R.shp Pollutant == salinity, temperature, Tailings, PFAS ! Solver HPC DP Check == OFF Solution scheme == HPC Timestep == 1 Timestep Maximum == 20 ! SGS Settings SGS == ON SGS Sample Target Distance == 1. GRID Format == TIF ! Gridding Set Variable 2D_CELL_SIZE == 10 ! Boundaries BC Database == ..\\..\\TUFLOW\\bc_dbase\\bc_dbase_001.csv ! Control files Geometry Control File == ..\\..\\TUFLOW\\model\\Demo.tgc BC Control File == ..\\..\\TUFLOW\\model\\Demo_001.tbc Read Materials File == ..\\..\\TUFLOW\\model\\materials.tmf Read Soils File == ..\\..\\TUFLOW\\model\\Demo.tsoilf Soil Negative Rainfall Approach == FACTOR Set Variable HC == 10000 Soil Negative Rainfall Factor == 0.2 ! Ouput map configuration Map Output Format == XMDF TIF Map Output Data Types == catch h d V Map Output Interval == 300 TIF Map Output Interval == 0 TIF Map Output Data Types == h d dt Grid Output Cell Size == &lt;&lt;2D_CELL_SIZE&gt;&gt; SGS Map Extent Trim == All SGS Depth Output == Cell Average Map Cutoff Depth == 0.01 End Catchment Hydraulic Model 4.5.3 Pollutant export model commands This block of the TUFLOW CATCH control file contains commands that control pollutant export (and other constituent) simulation. The pollutant model definition must be declared as a block that encloses all commands. This is analogous to the declaration of a catchment hydraulic model. Set the beginning of the block, with command arguments as either mass accumulation release or none, and the end of the block (with no command arguments). The key phrase mass accumulation release activates all available pollutant export submodels. The keyword none turns off pollutant export simulation and would be used with the Hydrology configuration (see Section 1.3) or if only TUFLOW FV calibration is being undertaken, for example: Pollutant Export Model == \\(\\blockindent\\) …pollutant export model commands… \\(\\blockindent\\) …pollutant export model commands… \\(\\blockindent\\) …pollutant export model commands… End Pollutant Export Model If pollutant export is simulated, then all pollutants (and constituents) declared in the catchment hydraulic model (TUFLOW HPC via Pollutant ==) or receiving model (TUFLOW FV, and including all called modules such as Sediment Transport and Water Quality) must be accounted for with the correct name in the pollutant export block. Each must be assigned either: A constant value/concentration for application to receiving model boundary condition, or A timeseries value/concentration for application to receiving model boundary conditions, or A pollutant export model, with supporting parameters, for TUFLOW CATCH pollutant export simulation for every material As such, not all the Pollutant Export Model block TUFLOW CATCH commands are mandatory, but, in combination, need to ensure that all pollutants are specified across the entire TUFLOW HPC domain. 4.5.3.1 Constant Constant value/concentrations can be assigned when dynamic simulation is not required, such as for salinity or dissolved oxygen, for example. This specification is applied globally. Set a constant value/concentration that is applied to downstream receiving model boundary condition files by TUFLOW CATCH. In doing so: The name needs to exactly match that configured by the receiving model (in TUFLOW CATCH’s integrated configuration) or set by the user (in TUFLOW CATCH’s pollutant export configuration), and The concentration needs to be in the same units produced by the receiving model (in TUFLOW CATCH’s integrated configuration) or expected by the user (in TUFLOW CATCH’s pollutant export configuration) Constant &lt;name&gt; == &lt;concentration to be applied&gt; 4.5.3.2 Timeseries Timeseries values/concentrations can be assigned for which dynamic simulation is not required, but which values/concentrations likely vary in time. This might include water temperature specification, for example. This specification is applied globally. Set a timeseries that is applied to downstream receiving model boundary condition files by TUFLOW CATCH. In doing so: The name needs to exactly match that of variable configured by the receiving model, and The concentration needs to be in the same units produced by the receiving model Time-series &lt;name&gt; == &lt;bc name&gt; The &lt;bc name&gt; field refers to a name declared in the TUFLOW HPC boundary condition database. For example, ‘temperature_davg’, with the corresponding database entry being (in a database simplified for this example): Name,Source,Column 1,Column 2,Add Col 1,Mult Col 2,Add Col 2,Column 3,Column 4 temperature_davg,temperature_2021.csv,TUFLOW_Time,Airtemp,,,,, 4.5.3.3 Pollutant export Pollutant export models can be configured within TUFLOW CATCH to simulate the release of pollutants from the ground surface across the TUFLOW HPC model domain. This export is a core intention and capability of TUFLOW CATCH and can be configured as uniform or spatially varied across the TUFLOW HPC domain. Any nonuniform spatial definition uses the material numbers (and corresponding spatial distributions) already configured in the TUFLOW HPC model (i.e. the catchment hydraulic model block described above) and affects this through specification of material blocks in this part of the TUFLOW CATCH control file. These blocks are similar to those deployed by TUFLOW FV. Configure default (or spatially uniform) pollutant export: Material == all \\(\\blockindent\\) …commands… \\(\\blockindent\\) …commands… \\(\\blockindent\\) …commands… End Material Once these uniform conditions have been set, progressive specifications of material by material pollutant behaviour can be set. These specifications overwrite previous settings on a spatial basis. This stamping-style approach is akin to the way in which digital elevation model inputs can be progressively updated within TUFLOW HPC and TUFLOW FV by specifying a suite of elevation data that overwite each other on a spatiasl basis. In the case of pollutant export properties, this stamping is affected by specifying subsequent material blocks that relate to individual or multiple materials. Up to ten comma separated materials can be specified in one material block: Material == MatID1, MatID2, MatID3…, MatID10 \\(\\blockindent\\) …commands… \\(\\blockindent\\) …commands… \\(\\blockindent\\) …commands… End Material Once all material specifications have been processed, TUFLOW CATCH will check that all pollutants have had all export properties specified for the entire TUFLOW HPC domain (i.e. every computational grid cell). This includes accounting for constant and timeseries specifications (which are global and do not need to be applied within material blocks). Using the ‘all’ command argument in the first material block specified and providing information for every pollutant required within that block (and then progressively spatially refining) ensures this will be true. Once the initial uniform material specification has been made, not every pollutant needs to be specified in every subsequent material block - only alterations to the uniform conditions need be made. Each line within a material block contains a suite of arguments (in the form command==argument, command==argument… etc.), the first of which is always a keyword flagging the model to be used. Although there are some commonalities in subsequent inline commands, these differ according to the pollutant export model specified, as follows. Different pollutant export models can be specified for different pollutants within the same material block if required. The same pollutant export model should be applied to a given pollutant across all materials, albeit with different parameters. 4.5.3.3.1 Accumulation and washoff Set the model and parameters for the pollutant accumulation and washoff model (see Section 3.2.3.1). All parameters are mandatory: &lt;name&gt;, Method==Washoff1, Rate==\\(R_a\\), Limit==\\(L_{acc}\\), Time Constant==\\(T_c\\), Rain Threshold==\\(R_r\\), Depth Threshold==\\(d\\), Deposition Velocity==w_s The &lt;name&gt; field must correspond to a name designated by TUFLOW FV. The parameters are: Method: keyword ‘Washoff1’ that activates the accumulation washoff model Rate: the areal rate at which the pollutant accumulates (kg/ha/year) Limit: the maximum areal mass that can accumulate in the dry store (kg/ha) Time Constant: a time parameter controlling the pollutant dry store release rate, according to Equation (3.1) (s) Rain Threshold: the minimum rain rate required to activate release from the dry store (mm/hr) Depth Threshold: the minimum water depth in a cell required to activate release from the dry store (m) Deposition Velocity: the velocity at which pollutant in the wet store settles. Used to calculate the mass of pollutant transferred back from the wet to dry store in a model timestep, according to Equation (3.2) (m/day) An example for dissolved organic carbon might be: WQ_DOC_MG_L, Method==Washoff1, Rate==21.446, Limit==21.446, Time Constant==3600, Rain Threshold==1.0, Depth Threshold==0.020, Deposition Velocity==0.0 4.5.3.3.2 Shear Stress Set the model and parameters for the shear stress model (see Section 3.2.3.2). All parameters are mandatory: &lt;name&gt;, Method==Shear1, Rate==&lt;not used&gt;, Limit==\\(L_{shr}\\), Deposition Stress==\\(\\tau_{cd}\\), Erosion Stress==\\(\\tau_{ce}\\), Depth Threshold==\\(d\\), Deposition Velocity==w_s, Erosion Rate==\\(E_r\\) The &lt;name&gt; field must correspond to a name designated by TUFLOW FV. The parameters are: Method: keyword ‘Shear1’ that activates the shear stress model Rate: not used, but listed for consistency Limit: the maximum erosion or deposition that can occur in a cell. Always a positive number (kg/ha) Deposition Stress: the maximum shear stress for which deposition can occur. Shear stresses below this limit will allow for deposition to occur, according to Equation (3.4). Should always be less than the specified erosionStress (N/m\\(^2\\)) Erosion Stress: the minimum shear stress for which erosion can occur. Shear stresses above this limit will allow for erosion to occur, according to Equation (3.3). Should always be greater than the specified depositionStress (N/m\\(^2\\)) Depth Threshold: the minimum water depth in a cell required to activate release from the dry store (m) Deposition Velocity: the velocity at which pollutant in the wet store settles. Used to calculate the mass of pollutant transferred back from the wet to dry store in a model timestep, according to Equation (3.4) (m/day) Erosion Rate: The maximum rate of erosion of pollutant from the dry store, if erosion conditions are met, according to Equation (3.3) (N/m\\(^2\\)) An example for suspended sediment might be: SED_TSS, Method==Shear1, Rate==0.0, Limit==1000.0, Depth Threshold==0.02, Deposition Stress==0.01, Erosion Stress==0.5, Deposition Velocity==1.0, Erosion Rate==0.002 An example for a complete material block might be: Material == 1,4 SED_TSS, Method==Shear1, Rate==0.0, Limit==1000.0, Depth Threshold==0.02, Deposition Stress==0.01, Erosion Stress==0.5, Deposition Velocity==1.0, Erosion Rate==0.001 WQ_DOC_MG_L, Method==Washoff1, Rate==21.446, Limit==21.446, Time Constant==3600, Rain Threshold==1.0, Depth Threshold==0.020, Deposition Velocity==0.0 End Material 4.5.3.4 Pollutant transport Once released, pollutants are transported in the surface using TUFLOW’s advection dispersion module. Pollutants are treated as passive tracers and do not undergo non-conservative transformation, other than that allowed by the pollutant export models described above. Pollutants are tracked in both 1D and 2D model components. If soils have been included in the TUFLOW HPC simulation and infiltration of water occurs, then this water takes with it any previously released pollutants and continues to advect these in the subsurface as it does water. Similarly, if TUFLOW HPC predicts that water travelling in soil layers intersects the ground surface, then any included pollutants are returned to the surface wet store and advected and dispersed as normal. If a particular pollutant is not required to infiltrate from the surface to subsurface, then this infiltration can be turned off (default is on). This is intended to be set as off for particulate pollutants, although is user definable: Infiltration &lt;name&gt; == off An example block of these Pollutant Export Model block commands within TUFLOW CATCH (with clarifying section headers as comments) is: ! _________________________________________________________________ ! POLLUTANT EXPORT Catchment Pollutant Export Model == mass accumulation release ! Constant concentrations Constant Salinity == 0.0 Constant WQ_DISS_OXYGEN_MG_L == 8.0 ! Timeseries Time-series Temperature == temperature ! Prohibited infiltrations Infiltration SED_TSS == Off Infiltration WQ_POC_MG_L == Off Infiltration WQ_PON_MG_L == Off Infiltration WQ_POP_MG_L == Off Material == all SED_TSS, Method==Shear1, Rate==0.0, Limit==1000.0, Depth Threshold==0.02, Deposition Stress==0.01, Erosion Stress==0.5, Deposition Velocity==1.2, Erosion Rate==0.001 WQ_AMMONIUM_MG_L, Method==Washoff1, Rate==0.273, Limit==0.273, Time Constant==3600, Rain Threshold==1.0, Depth Threshold==0.020, Deposition Velocity==0.0 WQ_NITRATE_MG_L, Method==Washoff1, Rate==0.662, Limit==0.662, Time Constant==3600, Rain Threshold==1.0, Depth Threshold==0.020, Deposition Velocity==0.0 WQ_FRP_MG_L, Method==Washoff1, Rate==0.010, Limit==0.010, Time Constant==3600, Rain Threshold==1.0, Depth Threshold==0.020, Deposition Velocity==0.0 WQ_DOC_MG_L, Method==Washoff1, Rate==21.446, Limit==21.446, Time Constant==3600, Rain Threshold==1.0, Depth Threshold==0.020, Deposition Velocity==0.0 WQ_DON_MG_L, Method==Washoff1, Rate==1.021, Limit==1.021, Time Constant==3600, Rain Threshold==1.0, Depth Threshold==0.020, Deposition Velocity==0.0 WQ_DOP_MG_L, Method==Washoff1, Rate==0.005, Limit==0.005, Time Constant==3600, Rain Threshold==1.0, Depth Threshold==0.020, Deposition Velocity==0.0 WQ_POC_MG_L, Method==Washoff1, Rate==12.154, Limit==12.154, Time Constant==3600, Rain Threshold==1.0, Depth Threshold==0.020, Deposition Velocity==0.5 WQ_PON_MG_L, Method==Washoff1, Rate==1.044, Limit==1.044, Time Constant==3600, Rain Threshold==1.0, Depth Threshold==0.020, Deposition Velocity==0.5 WQ_POP_MG_L, Method==Washoff1, Rate==0.061, Limit==0.061, Time Constant==3600, Rain Threshold==1.0, Depth Threshold==0.020, Deposition Velocity==0.5 End Material Material == 2 SED_TSS, Method==Shear1, Rate==0.0, Limit==2000.0, Depth Threshold==0.002, Deposition Stress==0.001, Erosion Stress==0.05, Deposition Velocity==1.5, Erosion Rate==0.1 WQ_AMMONIUM_MG_L, Method==Washoff1, Rate==2.0, Limit==20.0, Time Constant==30, Rain Threshold==0.1, Depth Threshold==0.002, Deposition Velocity==0.0 WQ_NITRATE_MG_L, Method==Washoff1, Rate==5.0, Limit==50.0, Time Constant==60, Rain Threshold==0.1, Depth Threshold==0.002, Deposition Velocity==0.0 End Material Material == 3,5 WQ_DOP_MG_L, Method==Washoff1, Rate==0.5, Limit==0.5, Time Constant==300, Rain Threshold==10.0, Depth Threshold==0.120, Deposition Velocity==0.0 End Material End Catchment Pollutant Export Model 4.5.4 Receiving model (TUFLOW FV) commands This block of the TUFLOW CATCH control file contains commands that construct a TUFLOW FV simulation. These commands are almost entirely those that would be used in setting up a standalone TUFLOW FV control file (*.fvc), with a small number of additional commands that relate to TUFLOW CATCH. A small number of commands issued in the Global commands section of the *.tcc can be overwritten here if needed (for example if GPKG had been specified in the Global commands for the GIS format). These are: Hardware == GIS Format == If GIS Format is overwritten (as SHP), then a subsequent new projection file is most likely required to be specified SHP Projection == The receiving model definition must be declared as a block that encloses all TUFLOW CATCH and TUFLOW FV commands. Set the beginning of the block, with command arguments as either TUFLOWFV or none, and the end of the block (with no command arguments): Receiving Model == \\(\\blockindent\\) …receiving model commands… \\(\\blockindent\\) …receiving model commands… \\(\\blockindent\\) …receiving model commands… End Receiving Model If the Receiving Model command is set to none, then receiving simulation is not executed. This approach might be adopted for the initial stages of a TUFLOW HPC model build, for example. The TUFLOW CATCH commands contained within this Receiving Model block are described following, and all are mandatory unless noted. Set the directory from which TUFLOW CATCH controls TUFLOW FV. Unless there is a need to the contrary, this should be set as a relative path to the TUFLOWFV\\runs directory set up by the TUFLOW CATCH QGIS plugin, i.e. ..\\..\\TUFLOWFV\\runs. Setting this to any other directory is not recommended: Runs Directory == Set the full or relative path to the location of the the TUFLOW FV executable (including the name of the executable itself, with .exe extension) to be called by TUFLOW CATCH: EXE == All TUFLOW FV boundary condition files generated by TUFLOW CATCH are QC type (cell inflow, ‘lateral’, and do not transfer momentum to TUFLOW FV) unless specified otherwise as nodestring (Q type, and do transfer momentum to TUFLOW FV) inflows. All such nodestring inflows need to be drawn as line type objects in a single GIS file and this file declared in the receiving model block as: Catchment BC Nodestring == &lt;path to GIS nodestring file&gt; If TUFLOW FV is being executed alone using previous inflow boundaries created by TUFLOW HPC, then the following command will ensure that those previous boundaries are not overwritten. The name of the .fvcatchbc file produced by a previous TUFLOW HPC simulation needs to be renamed to match the name of the subsequent TUFLOW CATCH simulation calling only TUFLOW FV. In this instance if: TUFLOW CATCH run Model_003.tcc (for example) produced initial TUFLOW FV boundary files The corresponding ..\\TUFLOWCatch\\bc_dbase\\Model_003_catchment_hydraulic.fvcatchbc file could be copied as ..\\TUFLOWCatch\\bc_dbase\\Model_004_catchment_hydraulic.fvcatchbc and Called automatically in Model_004.tcc by a TUFLOW CATCH simulation that has Catchment Hydraulic Model == none Preserve Catchment Inflows == ON Following the issuing of these specific TUFLOW CATCH commands, a TUFLOW FV model can be constructed in the same manner as a standalone model. In this regard: All TUFLOW FV commands are recognised by TUFLOW CATCH and can be issued unchanged from the usage described in TUFLOW FV’s manual and/or relevant release notes TUFLOW FV commands that reference other subsidiary control files (such as geometry control files, *.tgc etc.) or GIS files need to use relative paths, and point to the locations with the TUFLOWFV directory created by the TUFLOW CATCH QGIS plugin, e.g.: Sediment control file == ..\\..\\TUFLOWFV\\stm\\Demo.fvsed These subsidiary control files can then in turn use path references are per standalone TUFLOW FV model construction (and point to locations within the same TUFLOWFV directory structure) Include command calls are supported, as relative references to the TUFLOWFV folder should be used An example block of these Receiving Model block commands within TUFLOW CATCH (with clarifying section headers as comments) is: ! _________________________________________________________________ ! RECEIVING HYDRODYNAMICS AND WQ ! Start receiving model block Receiving Model == tuflowfv ! none ! Base runs directory (to write fvc to) Runs Directory == ..\\..\\TUFLOWFV\\runs EXE == C:\\EXE\\TUFLOWFV\\2023.1.1\\TUFLOWFV.exe Preserve catchment inflows == ON ! General parameters Bottom Drag Model == Manning Include Salinity == 1,1 Include Temperature == 1,1 Include Sediment == 1,0 Include Heat == 1 Spatial Order == 1,1 ! Timestep commands CFL == 0.95 Timestep Limits == 1.0,10.0 Display dt == 900 ! Model parameters Cell Wet/Dry Depths == 5.0e-03, 5.0e-02 Stability Limits == 20.0, 10.0 CFL == 0.95 Momentum mixing model == Smagorinsky Global horizontal eddy viscosity == 0.2 Global horizontal eddy viscosity limits == 0.05, 99999. Scalar mixing model == Smagorinsky Global horizontal scalar diffusivity == 0.2 Global horizontal scalar diffusivity limits == 0.05, 99999. Vertical mixing model == External Turbulence update dt == 1800 Global vertical eddy viscosity limits == 1.0e-4, 1.0 Global vertical scalar diffusivity limits == 0., 1.0 ! Water quality Water quality model == tuflow Water quality control file == .\\Demonstration_005.fvwq Water quality model directory == ..\\..\\TUFLOWFV\\wqm\\ Cell water quality depth == 0.04 ! Sediment transport Sediment control file == ..\\..\\TUFLOWFV\\stm\\Demonstration_005.fvsed ! 2D Geometry Geometry 2D == ..\\..\\TUFLOWFV\\model\\geo\\Demonstration_005.2dm Read Grid Zpts == ..\\..\\TUFLOWFV\\model\\geo\\DEM.asc Read GIS Zline == ..\\..\\TUFLOWFV\\model\\gis\\2d_zln_Demonstration_005_Outlet_R.shp ! 3D Geometry Vertical Mesh Type == z Layer Faces == ..\\..\\TUFLOWFV\\model\\geo\\Demonstration_005_layers.csv Sigma layers == 6 Min Bottom Layer Thickness == 0.05 Cell 3D Depth == 0.05 ! Materials Global Bottom Roughness == 0.03 Read GIS Mat == ..\\..\\TUFLOWFV\\model\\gis\\2d_mat_Demonstration_005_R.shp ! Main lake material == 1 bottom roughness == 0.012 end material ! Inflows material == 2 bottom roughness == 0.030 end material ! Exit material == 3 bottom roughness == 0.012 end material ! Initial conditions Initial Water Level == 4.0 Initial Salinity == 0.0 Initial Temperature == 17.0 Initial Sediment concentration == 1.0 Initial wq concentration == 7.5,1.0,0.00005,0.00005,0.0031,0.0,0.1,0.0,0.056,0.0,0.0000031,0.0,5.0 ! Large sewage plant Read GIS SA == ..\\..\\TUFLOWFV\\model\\gis\\2d_sa_Demonstration_005_R.shp bc == QC_POLY, Sewage_large, ..\\..\\TUFLOWFV\\bc_dbase\\Demonstration_005_Sewage_large.csv bc header == Date,Q,sal,temp,sed,DO,Si,Amm,Nit,FRP,FRP_ads,DOC,POC,DON,PON,DOP,POP,Phy bc update dt == 3600. vertical coordinate type == depth vertical distribution file == ..\\..\\TUFLOWFV\\bc_dbase\\Demonstration_005_Sewage_vert.csv end bc ! Small sewage plant bc == QC_POLY, Sewage_small, ..\\..\\TUFLOWFV\\bc_dbase\\Demonstration_005_Sewage_small.csv bc header == Date,Q,sal,temp,sed,DO,Si,Amm,Nit,FRP,FRP_ads,DOC,POC,DON,PON,DOP,POP,Phy bc update dt == 3600. vertical coordinate type == depth vertical distribution file == ..\\..\\TUFLOWFV\\bc_dbase\\Demonstration_005_Sewage_vert.csv end bc ! Offtake bc == QC_POLY, Offtake, ..\\..\\TUFLOWFV\\bc_dbase\\Demonstration_005_Offtake.csv bc header == Date,Q bc update dt == 3600. vertical coordinate type == height vertical distribution file == ..\\..\\TUFLOWFV\\bc_dbase\\Demonstration_005_Offtake_vert.csv bc scale == -1.0 end bc ! Overflow weir Read GIS nodestring == ..\\..\\TUFLOWFV\\model\\gis\\2d_ns_Demonstration_005_Weir_L.shp bc == QN, ovfl_weir, 0.001 end bc ! Catchment nodestrings to be used for linkage Catchment BC Nodestring == ..\\..\\TUFLOWFV\\model\\gis\\2d_ns_Demonstration_005_Inflows_L.shp ! Meteorology bc == W10, ..\\..\\TUFLOWFV\\bc_dbase\\met\\Demonstration_005_Met_data.csv bc header == Date, u10, v10 bc update dt == 3600. end bc bc == LW_RAD, ..\\..\\TUFLOWFV\\bc_dbase\\met\\Demonstration_005_Met_data.csv bc header == Date, lw bc update dt == 3600. end bc bc == SW_RAD, ..\\..\\TUFLOWFV\\bc_dbase\\met\\Demonstration_005_Met_data.csv bc header == Date, sw bc update dt == 3600. end bc bc == AIR_TEMP, ..\\..\\TUFLOWFV\\bc_dbase\\met\\Demonstration_005_Met_data.csv bc header == Date, at bc update dt == 3600. end bc bc == REL_HUM, ..\\..\\TUFLOWFV\\bc_dbase\\met\\Demonstration_005_Met_data.csv bc header == Date, rh bc update dt == 3600. end bc bc == PRECIP, ..\\..\\TUFLOWFV\\bc_dbase\\met\\Demonstration_005_Met_data.csv bc header == Date, precip bc update dt == 3600. end bc ! Outputs output == netcdf output parameters == h,v,d,sal,temp,sed_1 Output interval == 900.0 Suffix == HD end output output == netcdf output parameters == wq_all output interval == 7200 suffix == WQ end output output == mass output interval == 3600. end output write restart dt == 24 restart overwrite == 1 End Receiving Model 4.6 Construction summary 4.6.1 Supported configurations The following presents a summary of the combinations of block level commands that will trigger the supported TUFLOW CATCH configurations. Only block level commands have been included, unless specific internal commands are relevant. 4.6.1.1 Hydrology For simulation of water only: !________________________________________________________ ! GLOBAL SETTINGS ... !_________________________________________________________________ ! CATCHMENT HYDRAULICS Catchment Hydraulic Model == HPC ... End Catchment Hydraulic Model ! _________________________________________________________________ ! POLLUTANT EXPORT Catchment Pollutant Export Model == none ... End Catchment Pollutant Export Model ! _________________________________________________________________ ! RECEIVING MODEL Receiving Model == tuflowfv ... End Receiving Model If temperature and salinity (or either) are to be simulated: !________________________________________________________ ! GLOBAL SETTINGS ... !_________________________________________________________________ ! CATCHMENT HYDRAULICS Catchment Hydraulic Model == HPC ... End Catchment Hydraulic Model ! _________________________________________________________________ ! POLLUTANT EXPORT Catchment Pollutant Export Model == none Constant Salinity == 0.0 Time-series temperature == temperature End Catchment Pollutant Export Model ! _________________________________________________________________ ! RECEIVING MODEL Receiving Model == tuflowfv ... End Receiving Model 4.6.1.2 Pollutant export !________________________________________________________ ! GLOBAL SETTINGS ... !_________________________________________________________________ ! CATCHMENT HYDRAULICS Catchment Hydraulic Model == HPC ! Downstream polygon Receiving polygon == ..\\..\\TUFLOW\\model\\gis\\2d_rp_\\&lt;name\\&gt;_R.shp Pollutant == \\&lt;name&gt;,\\&lt;name&gt;,\\&lt;name&gt;... ... End Catchment Hydraulic Model ! _________________________________________________________________ ! POLLUTANT EXPORT Catchment Pollutant Export Model == mass accumulation release \\&lt;names must match pollutant == above\\&gt; ... End Catchment Pollutant Export Model ! _________________________________________________________________ ! RECEIVING MODEL Receiving Model == none ... End Receiving Model 4.6.1.3 Integrated !________________________________________________________ ! GLOBAL SETTINGS ... !_________________________________________________________________ ! CATCHMENT HYDRAULICS Catchment Hydraulic Model == HPC ... End Catchment Hydraulic Model ! _________________________________________________________________ ! POLLUTANT EXPORT Catchment Pollutant Export Model == mass accumulation release ... End Catchment Pollutant Export Model ! _________________________________________________________________ ! RECEIVING MODEL Receiving Model == tuflowfv ... End Receiving Model 4.6.2 Other configurations The following presents a summary of the combinations of block level commands that will trigger the alternative TUFLOW CATCH configurations that might be used during model construction and calibration. Only block level commands have been included, unless specific internal commands are relevant. 4.6.2.1 TUFLOW HPC calibration only !________________________________________________________ ! GLOBAL SETTINGS ... !_________________________________________________________________ ! CATCHMENT HYDRAULICS Catchment Hydraulic Model == HPC \\&lt;may require a 2d_bc at downstream outlet to release water from domain\\&gt; ... End Catchment Hydraulic Model ! _________________________________________________________________ ! POLLUTANT EXPORT Catchment Pollutant Export Model == none ... End Catchment Pollutant Export Model ! _________________________________________________________________ ! RECEIVING MODEL Receiving Model == none ... End Receiving Model Alternatively, a TUFLOW CATCH simulation in Pollutant export configuration could be set up, with only a constant and zero salinity set. Because this constant is not simulated in the TUFLOW HPC domain, doing so will not adversely affect TUFLOW HPC run times. It will, however, allow for specification of a receiving polygon to let water out of the TUFLOW HPC domain at a location well downstream of calibration comparison gauges. !________________________________________________________ ! GLOBAL SETTINGS ... !_________________________________________________________________ ! CATCHMENT HYDRAULICS Catchment Hydraulic Model == HPC ! Downstream polygon Receiving polygon == ..\\..\\TUFLOW\\model\\gis\\2d_rp_\\&lt;name\\&gt;_R.shp Pollutant == salinity ... End Catchment Hydraulic Model ! _________________________________________________________________ ! POLLUTANT EXPORT Catchment Pollutant Export Model == mass accumulation release Constant Salinity == 0.0 End Catchment Pollutant Export Model ! _________________________________________________________________ ! RECEIVING MODEL Receiving Model == none ... End Receiving Model 4.6.2.2 TUFLOW FV calibration only !________________________________________________________ ! GLOBAL SETTINGS ... !_________________________________________________________________ ! CATCHMENT HYDRAULICS Catchment Hydraulic Model == none ... End Catchment Hydraulic Model ! _________________________________________________________________ ! POLLUTANT EXPORT Catchment Pollutant Export Model == none ... End Catchment Pollutant Export Model ! _________________________________________________________________ ! RECEIVING MODEL Receiving Model == tuflow fv ... End Receiving Model The above will assign blank inflows to TUFLOW from the TUFLOW HPC domain. If TUFLOW FV is to use previously created inflow boundaries from TUFLOW HPC (via TUFLOW CATCH) then the following should be used, after copying the previously created .fvcatchbc file, for example: TUFLOW CATCH run Model_003.tcc (for example) produced initial TUFLOW FV boundary files The corresponding ..\\TUFLOWCatch\\bc_dbase\\Model_003_catchment_hydraulic.fvcatchbc file could be copied as ..\\TUFLOWCatch\\bc_dbase\\Model_004_catchment_hydraulic.fvcatchbc and Called automatically in Model_004.tcc !________________________________________________________ ! GLOBAL SETTINGS ... !_________________________________________________________________ ! CATCHMENT HYDRAULICS Catchment Hydraulic Model == none ... End Catchment Hydraulic Model ! _________________________________________________________________ ! POLLUTANT EXPORT Catchment Pollutant Export Model == none ... End Catchment Pollutant Export Model ! _________________________________________________________________ ! RECEIVING MODEL Receiving Model == tuflow fv Preserve Catchment Inflows == ON ... End Receiving Model "],["SimulationExecution-1.html", "Section 5 Simulation Execution 5.1 Context 5.2 Execution", " Section 5 Simulation Execution 5.1 Context Previous sections have presented the architecture, available processes and construction of a TUFLOW CATCH model. This section describes the overall execution of a TUFLOW CATCH model. 5.2 Execution In a similar manner to other TUFLOW products, TUFLOW CATCH is best executed from a batch file run within a command window. An example batch file (‘run_catch.bat’) is below. The ‘::’ (double colon) character is a commented line ignored by the command window, and the commands are: set exe= : the full path to the TUFLOW CATCH executable %exe% Demo.tcc : calls the defined TUFLOW CATCH executable to run with Demo.tcc as the input control file. The *.tcc can be in the same directory as the batch file (recommended) or can also use a relative path (not recommended). :: Windows Batch File set exe=C:\\temp\\EXE\\CATCH\\TUFLOWCATCH.exe :: Execute %exe% Demo.tcc To execute TUFLOW CATCH with the above ‘run_catch.bat’ set up, a command window should be opened in the same directory as the batch file, and the following typed at the prompt: run_catch TUFLOW CATCH will run and results will be written to the specified output folder. See Section 6 for results interrogation. "],["Outputs-1.html", "Section 6 Outputs 6.1 Context 6.2 Supported configurations", " Section 6 Outputs 6.1 Context Previous sections have presented the architecture, available processes, construction and execution of a TUFLOW CATCH model. This section describes the results produced by TUFLOW CATCH under the three intended configurations described in Section 1.3. Hyperlinks are provided to more detailed descriptions of output fields in Appendix XXX. 6.2 Supported configurations The three supported configurations of TUFLOW CATCH are: Hydrology Pollutant export Integrated The outputs of these are described in the following sections. In all cases, the TUFLOW CATCH control file is assumed to be named Model_001.tcc. It is strongly recommended that TUFLOW HPC and TUFLOW FV results that are to be used to create a TUFLOW CATCH *.json file for viewing in QGIS are output at the same timestep, referred to as &lt;common_dt&gt; below. 6.2.1 Hydrology 6.2.1.1 Data types It is recommended that the following data types be set, assuming salinity and temperature are included as constants/timeseries. If not, then catch (TUFLOW HPC) and , sal, temp (TUFLOW FV) can be omitted: TUFLOW HPC Map Output Format == XMDF Map Output Data Types == V d h catch Map Output Interval == &lt;common_dt&gt; TUFLOW FV Output == netcdf Output Parameters == h,v,d,sal,temp Output Interval == &lt;common_dt&gt; Suffix == HD End Output 6.2.1.2 Files The following output files are produced in the execution of a hydrology simulation with data types as above. Each is a 2D or 3D (TUFLOW FV) map output that varies in time: TUFLOW HPC Model_001_catchment_hydrology.xmdf Bed Elevation Depth Vector Velocity Velocity Water Level Time of Peak h TUFLOW FV Model_001_receiving_HD.nc Bed Elevation salinity temperature velocity vector Velocity water depth water surface elevation 6.2.1.3 Interrogation The above output files can be viewed either: Individually via the TUFLOW Viewer (File -&gt; Load Results -&gt; Map Outputs), and interrogated using usual TUFLOW Viewer techniques, or Simultaneously via use of the Create TUFLOW Catch JSON function demonstrated in the eLearning material described in Section 4.3 6.2.2 Pollutant export In this example, it is assumed that two pollutants are simulated (in addition to temperature and salinity), as: PFAS, Washoff1 pollutant export model Tailings, Shear1 pollutant export model These models have been chosen because they produce different outputs. 6.2.2.1 Data types It is recommended that the following data types be set: TUFLOW HPC Map Output Format == XMDF Map Output Data Types == V d h catch Map Output Interval == &lt;common_dt&gt; TUFLOW FV is not activated. 6.2.2.2 Files The following output files are produced in the execution of a hydrology simulation with data types as above. Each is a 2D map output that varies in time. Hyperlinks are provided to detailed descriptions in the appendices for representative pollutants: TUFLOW HPC Model_001_catchment_hydrology.xmdf Bed Elevation Conc PFAS Conc TAILINGS Dry Mass PFAS GW Layer 1 Conc PFAS GW Layer 1 Conc TAILINGS Net Mass TAILINGS Depth Vector Velocity Velocity Water Level Time of Peak h 6.2.2.3 Interrogation The above output file can be viewed via the TUFLOW Viewer (File -&gt; Load Results -&gt; Map Outputs), and interrogated using usual TUFLOW Viewer techniques. 6.2.3 Integrated In this example, it is assumed that one sediment fraction and inorganic simulation class water quality are simulated (in addition to temperature and salinity), as: oxygen, silicate, adsorbed phosphorus and phytoplankton as constants all other water quality pollutants, Washoff1 pollutant export model fines, Shear1 pollutant export model salinity, constant temperature, timeseries These models have been chosen because they produce different outputs. 6.2.3.1 Data types It is recommended that the following data types be set: TUFLOW HPC Map Output Format == XMDF Map Output Data Types == V d h catch Map Output Interval == &lt;common_dt&gt; TUFLOW FV Output == netcdf Output Parameters == h,v,d,sal,temp,sed_1 Output Interval == &lt;common_dt&gt; Suffix == HD End Output Output == netcdf Output Parameters == wq_all Output Interval == &lt;common_dt&gt; Suffix == WQ End Output 6.2.3.2 Files The following output files are produced in the execution of a hydrology simulation with data types as above. Each is a 2D or 3D (TUFLOW FV) map output that varies in time. Hyperlinks are provided to detailed descriptions in the appendices for representative pollutants: TUFLOW HPC Model_001_catchment_hydrology.xmdf Bed Elevation Conc SED_FINES Conc WQ_AMMONIUM_MG_L Conc WQ_DOC_MG_L Conc WQ_DON_MG_L Conc WQ_DOP_MG_L Conc WQ_FRP_MG_L Conc WQ_NITRATE_MG_L Conc WQ_POC_MG_L Conc WQ_PON_MG_L Conc WQ_POP_MG_L Dry Mass WQ_AMMONIUM_MG_L Dry Mass WQ_DOC_MG_L Dry Mass WQ_DON_MG_L Dry Mass WQ_DOP_MG_L Dry Mass WQ_FRP_MG_L Dry Mass WQ_NITRATE_MG_L Dry Mass WQ_POC_MG_L Dry Mass WQ_PON_MG_L Dry Mass WQ_POP_MG_L GW Layer 1 Conc SED_FINES GW Layer 1 Conc WQ_AMMONIUM_MG_L GW Layer 1 Conc WQ_DOC_MG_L GW Layer 1 Conc WQ_DON_MG_L GW Layer 1 Conc WQ_DOP_MG_L GW Layer 1 Conc WQ_FRP_MG_L GW Layer 1 Conc WQ_NITRATE_MG_L GW Layer 1 Conc WQ_POC_MG_L GW Layer 1 Conc WQ_PON_MG_L GW Layer 1 Conc WQ_POP_MG_L Net Mass SED_FINES Depth Vector Velocity Velocity Water Level Time of Peak h TUFLOW FV Model_001_receiving_HD.nc Bed Elevation salinity sediment fraction 1 concentration temperature velocity vector Velocity water depth water surface elevation Model_001_receiving_WQ.nc Bed Elevation WQ_AMMONIUM_MG_L WQ_DISS_OXYGEN_MG_L WQ_DOC_MG_L WQ_DON_MG_L WQ_DOP_MG_L WQ_FRP_ADS_MG_L WQ_FRP_MG_L WQ_NITRATE_MG_L WQ_PHYTO_FDIAT_CONC_MICG_L WQ_POC_MG_L WQ_PON_MG_L WQ_POP_MG_L WQ_SILICATE_MG_L 6.2.3.3 Interrogation The above output files can be viewed either: Individually via the TUFLOW Viewer (File -&gt; Load Results -&gt; Map Outputs), and interrogated using usual TUFLOW Viewer techniques, or Simultaneously via use of the Create TUFLOW Catch JSON function demonstrated in the eLearning material described in Section 4.3 "],["AppCommands.html", "Appendix A Commands A.1 Command syntax A.2 Argument syntax A.3 Commands", " Appendix A Commands .book .book-body .page-wrapper .page-inner { max-width: 85%; } The manual’s introduction should be reviewed for instructions regarding the use of interactive components deployed in this section. All TUFLOW CATCH commands and descriptions are provided in Table A.1. A.1 Command syntax TUFLOW CATCH commands are coloured, for example Catchment Pollutant Export Model ==. These can be copied and pasted directly into a *.tcc control file, and arguments added. A.2 Argument syntax Descriptions of the arguments expected by TUFLOW CATCH commands (i.e. information provided after the ==) are contrastingly coloured and always included in angle parentheses, as \\(\\langle\\)argument\\(\\rangle\\) . This argument content takes one of the following forms: Single keyword options. Options are separated by semicolons. Options need to be used exactly as written because they are keywords. For example, \\(\\langle\\)Washoff1;Shear1\\(\\rangle\\) describes the available pollutant export models for the command Method ==. An example of implementing this description would therefore be Method == Washoff1 or for the Material == command, the argument is described as \\(\\langle\\)All;Up to 10 comma separated material numbers\\(\\rangle\\). An example of implementing this description would therefore be either Material == All or Material == 1, 6, 3 Single numeric values. Values are presented using their associated symbol, using the notation described in the manual’s introductory sections. For example, \\(d\\) describes the single numeric value for the command Depth Threshold ==. These arguments are hyperlinked to other relevant information in this manual. An example of implementing this description would therefore be Recommendations. This is denoted with a rec: prefix \\(\\langle\\)rec: plain text\\(\\rangle\\) that recommends a command argument, such as a file path A.3 Commands All TUFLOW CATCH commands and descriptions follow. This page has deliberately been set to be wider than the main document so as to accommodate the detail contained within the table. Tips provided in the manual’s introduction for interacting with the table should be reviewed, especially with regard to searching and navigation. Other tips for use specific to this table include: Commands are coloured and although they show as underlined on mouse hover, these are not hyperlinked Corresponding arguments (presented as their symbols) are coloured and listed in the required order within angled parentheses following each command ==. Each argument is a hyperlink to its description in the relevant Appendix, where appropriate. This description then includes hyperlinks to the relevant science and command syntax (Section 4). This allows easy navigation between command, parameter and scientific information The final text of each description is ‘Simulation construction section …’ and is a link to the relevant part of Section 4 where the command syntax is presented in context. More parameter details and descriptions are subsequently available via further hyperlinks included in the construction section Table A.1: TUFLOW CATCH Commands Command Description Method == \\(\\langle\\)Washoff1;Shear1\\(\\rangle\\) Used in a material block within a pollutant export model block to set the pollutant export model. Simulation construction section 4.5.3.3. Depth Threshold == \\(\\langle\\)\\(d\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the minimum cell water depth at which pollutant export can occur. Applies to all pollutant export methods. Simulation construction section 4.5.3.3. Limit == \\(\\langle\\)\\(L_{acc}\\);\\(L_{shr}\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set an accumulation (washoff model) or erosion (shear model) limit. Simulation construction section 4.5.3.3. Rate == \\(\\langle\\)\\(R_a\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the rate at which a pollutant accumulates to its dry store. Applies only to accumulation pollutant export methods, e.g. Washoff1. It is not used for erosion pollutant export models, e.g. Shear1. Simulation construction section 4.5.3.3.1. Time Constant == \\(\\langle\\)\\(T_c\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to control the rate at which a pollutant is released from its dry store. Applies only to accumulation pollutant export methods, e.g. Washoff1. It is not used for erosion pollutant export models, e.g. Shear1. Simulation construction section 4.5.3.3.1. Rain Threshold == \\(\\langle\\)\\(R_r\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the minimum rainrate threshold at which a pollutant is released from its dry store. Pollutant export is suppressed below this rate. Applies only to accumulation pollutant export methods, e.g. Washoff1. It is not used for erosion pollutant export models, e.g. Shear1. Simulation construction section 4.5.3.3.1. Deposition Stress == \\(\\langle\\)\\(\\tau_{cd}\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the maximum bed shear stress that allows for deposition to occur. This deposition represents a transfer from a pollutant’s wet to dry store. Deposition will not occur at shear stresses above this value. Applies only to shear stress pollutant export methods, e.g. Shear1. It is not used for (nor is it an argument of) accumulation washoff pollutant export models, e.g. Washoff1. Simulation construction section 4.5.3.3.2. Erosion Stress == \\(\\langle\\)\\(\\tau_{ce}\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the minimum bed shear stress that allows for erosion to occur. This erosion represents a transfer from a pollutant’s dry to wet store. Erosion will not occur at shear stresses below this value. Applies only to shear stress pollutant export methods, e.g. Shear1. It is not used for accumulation washoff pollutant export models, e.g. Washoff1. Simulation construction section 4.5.3.3.2. Deposition Velocity == \\(\\langle\\)\\(w_s\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the settling velocity of a pollutant. This settling represents a transfer from a pollutant’s wet to dry store. Settling occurs at all times in the accumulation washoff pollutant export model. Settling only occurs once bed shear stress drops below the user specified value in the shear stress pollutant export model. Simulation construction section 4.5.3.3. Erosion Rate == \\(\\langle\\)\\(E_r\\)\\(\\rangle\\) Used in a material block within a pollutant export model block to set the erosion rate of a pollutant. This erosion represents a transfer from a pollutant’s dry to wet store. Erosion only occurs once bed shear stress increases above the user specified value. Erosion will not occur at shear stresses below this value. Applies only to shear stress pollutant export methods, e.g. Shear1. It is not used for accumulation washoff pollutant export models, e.g. Washoff1. Simulation construction section 4.5.3.3.2. Hardware == \\(\\langle\\)GPU;CPU\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the simulation hardware. This command can be overwritten in the catchment hydraulic model or receiving model blocks if needed. Simulation construction section 4.5.1. GIS Format == \\(\\langle\\)SHP;GPKG\\(\\rangle\\) Used in the General, Catchment Hydraulic Model or Receiving Model commands section of a TUFLOW CATCH control file to set the GIS format of the simulation. This command can be overwritten in the catchment hydraulic model or receiving model blocks if needed. TUFLOW FV does not support GPKG format. Simulation construction section 4.5.1. SHP Projection == \\(\\langle\\)rec: ..\\..\\TUFLOW\\model\\gis\\Projection.prj\\(\\rangle\\) Used in the General, Catchment Hydraulic Model or Receiving Model commands section of a TUFLOW CATCH control file to set the path to the SHP file containing the TUFLOW CATCH model projection. Can be set globally and then overwritten as needed within Catchment Hydraulic Model or Receiving Model blocks. Simulation construction section 4.5.1. Time Format == \\(\\langle\\)ISODATE;hours\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the simulation date format. It is strongly recommended that ISODATE (dd/mm/yyyy hh:mm:ss) be deployed rather than hours. Simulation construction section 4.5.1. Start Time == \\(\\langle\\)dd/mm/yyyy hh:mm:ss;hours\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the simulation start date in the format declared by Date Format ==. It is strongly recommended that ISODATE (dd/mm/yyyy hh:mm:ss) be deployed rather than hours. Simulation construction section 4.5.1. End Time == \\(\\langle\\)dd/mm/yyyy hh:mm:ss;hours\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the simulation start date in the format declared by Date Format ==. It is strongly recommended that ISODATE (dd/mm/yyyy hh:mm:ss) be deployed rather than hours. Simulation construction section 4.5.1. Output Directory == \\(\\langle\\)rec: ..\\output\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the location to which all TUFLOW HPC and TUFLOW FV results are written. It is strongly recommended that this be set to the output folder within the TUFLOWCATCH directory, but can be set elsewhere if file size constraints apply. It can be a relative or absolute path. This is not the location for the TUFLOW CATCH intermediate files. Simulation construction section 4.5.1. Write Check Files == \\(\\langle\\)rec: ..\\check\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the location to which all check files are written. It is strongly recommended that this be set to the check folder within the TUFLOWCATCH directory. It can be a relative or absolute path. Simulation construction section 4.5.1. Log Folder == \\(\\langle\\)rec: log\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the location to which all log files are written. It is strongly recommended that this be set to the log folder within the TUFLOWCATCH directory. It can be a relative or absolute path. Simulation construction section 4.5.1. Catch Output Folder == \\(\\langle\\)rec: ..\\bc_dbase\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the location to which all TUFLOW CATCH intermediate files are written. These include TUFLOW FV boundary condition files and blocks, and summed flow and pollutant outputs. It is strongly recommended that this be set to the bc_dbase folder within the TUFLOWCATCH directory. It can be a relative or absolute path. This is not the location for TUFLOW HPC and TUFLOW FV results files. Simulation construction section 4.5.1. Catch Output Interval Nodestring == \\(\\langle\\)\\(dT_{ns}\\)\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the timestep (in simulation time seconds) at which lines within a nodestring (Q) boundary condition file for TUFLOW FV (created from TUFLOW HPC predictions) are separated. Simulation construction section 4.5.1. Catch Output Interval Lateral == \\(\\langle\\)\\(dT_{lat}\\)\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the timestep (in simulation time seconds) at which lines within a lateral (element, QC) boundary condition file for TUFLOW FV (created from TUFLOW HPC predictions) are separated. Simulation construction section 4.5.1. CSV Write Frequency Day == \\(\\langle\\)\\(dT_{csv}\\)\\(\\rangle\\) Used in the General commands section of a TUFLOW CATCH control file to set the timestep at which boundary condition data stored in memory is written to boundary condition files for TUFLOW FV (created from TUFLOW HPC predictions). Simulation construction section 4.5.1. Catchment Hydraulic Model == \\(\\langle\\)HPC;none\\(\\rangle\\) Used to define the start of a catchment hydraulic model block in a TUFLOW CATCH control file. This block contains the commands that control catchment simulation of surface (and optionally subsurface) hydrology and hydraulics, and is essentially the contents of a TUFLOW HPC *.tcf control file. It does not include any pollutant export commands. Set the argument to none if only receiving water modelling is to be undertaken through the TUFLOW CATCH control file. This command must be matched with a subsequent End Catchment Hydraulic Model command. Simulation construction section 4.5.2. End Catchment Hydraulic Model Used to define the end of a catchment hydraulic model block in a TUFLOW CATCH control file. This block contains the commands that control catchment simulation of surface (and optionally subsurface) hydrology and hydraulics, and is essentially the contents of a TUFLOW HPC *.tcf control file. It does not include any pollutant export commands. This command must be matched with a preceding Catchment Hydraulic Model == command. Simulation construction section 4.5.2. Runs Directory == \\(\\langle\\)rec: ..\\..\\TUFLOW\\runs\\(\\rangle\\) Used in the Catchment Hydraulic Model block of a TUFLOW CATCH control file to set the path from which TUFLOW runs are to be automatically controlled by TUFLOW CATCH. This is the directory to which TUFLOW CATCH writes interim *.tcf and similar files, but the user does not need to interrogate or interact with these files - this command simply tells TUFLOW CATCH where the master TUFLOW control files are to be housed. It is not recommended that users interact with any files in this directory, although users will create and modify content in all other directories under TUFLOW if TUFLOW HPC simulations are invoked. This interaction will occur through the TUFLOW CATCH *.tcc control file. Simulation construction section 4.5.2. EXE == \\(\\langle\\)rec: C:\\EXE\\TUFLOW\\TUFLOW_iSP_w64.exe\\(\\rangle\\) Used in the Catchment Hydraulic Model block of a TUFLOW CATCH control file to set the path to the TUFLOW executable. The full path, either relative or absolute, is required, including the name of the executable itself, with the .exe extention. Simulation construction section 4.5.2. Time Format == \\(\\langle\\)TUFLOWFV\\(\\rangle\\) Used in the Catchment Hydraulic Model block of a TUFLOW CATCH control file to set the time format of output results. Setting to TUFLOWFV is strongly recommended, and use of hours should be avoided. Should be used in conjunction with Zero Date == so that TUFLOW HPC boundaries can be specified in hours (TUFLOW HPC cannot accept ISODATE format in its boundary files at time of writing). Simulation construction section 4.5.2. Zero Date == \\(\\langle\\)dd/mm/yyyy hh:mm\\(\\rangle\\) Used in the Catchment Hydraulic Model block of a TUFLOW CATCH control file to set the date in TUFLOWFV ISODATE format that corresponds to zero hours in TUFLOW HPC boundary condition files. Seconds is not required in the date specification. Simulation construction section 4.5.2. Output Map Data Types == \\(\\langle\\)rec: V h d catch\\(\\rangle\\) Used in the Catchment Hydraulic Model block of a TUFLOW CATCH control file map output command to include all TUFLOW CATCH related outputs. The command argument catch is a keyword and should be added as an output to all hydrologic outputs such as velocity, depth and water surface elevation. XMDF is the recommended output container for these data sets. Simulation construction section 4.5.2. Receiving Model == \\(\\langle\\)TUFLOWFV;none\\(\\rangle\\) Used to define the start of a receiving model block in a TUFLOW CATCH control file. This block contains the commands that control receiving simulation of hydrodynamics, advection dispersion, water quality and other optional processes, and is essentially the contents of a TUFLOW FV *.fvc control file. Set the argument to none if only catchment hydraulic water modelling is to be undertaken through the TUFLOW CATCH control file. TUFLOW CATCH will then not invoke TUFLOW FV. This ‘none’ option is required for the Pollutant export configuration. This command must be matched with a subsequent End Receiving Model command. Simulation construction section 4.5.4. End Receiving Model Used to define the end of a receiving model block in a TUFLOW CATCH control file. This block contains the commands that control receiving simulation of hydrodynamics and other processes, and is essentially the contents of a TUFLOW FV *.fvc control file. This command must be matched with a preceding Receiving Model == command. Simulation construction section 4.5.4. Receiving Polygon == \\(\\langle\\)rec: ..\\..\\TUFLOW\\model\\gis\\2d_rp_&lt;name&gt;_P.shp\\(\\rangle\\) Used in the Receiving Model block of a TUFLOW CATCH control file to set the path to a polygon that delineates the downstream receiving waterway extents of a TUFLOW CATCH simulation. This is only used in the TUFLOW CATCH Pollutant export configuration. All TUFLOW HPC cells and boundary conditions within this polygon are excluded from the TUFLOW HPC simulation. TUFLOW CATCH writes flow and pollutant export summary and timeseries files that contain aggregated flows and loads entering the nominated polygon. These data can be used to compare across pollutant export scenarios, for example, without the need to build a TUFLOW FV model or mesh. Simulation construction section 4.5.2. Pollutant == \\(\\langle\\)Any number of user defined pollutant names\\(\\rangle\\) Used in the Receiving Model block of a TUFLOW CATCH control file to set the names of pollutants to be simulated in the pollutant export model. Only used when TUFLOW CATCH is executed in Pollutant export configuration. Any pollutant names can be used in this command, and they do not need to be those that are generated by TUFLOW FV. Simulation construction section 4.5.2. Pollutant Export Model == \\(\\langle\\)mass accumulation release;none\\(\\rangle\\) Used to define the start of a pollutant export model block in a TUFLOW CATCH control file. This block contains the commands that control pollutant export. Set the argument to none if only hydrology is being simulated, as per TUFLOW CATCH’s Hydrology configuration. This command must be matched with a subsequent End Pollutant Export Model command. Simulation construction section 4.5.3. End Pollutant Export Model Used to define the end of a pollutant export model block in a TUFLOW CATCH control file. This block contains the commands that control pollutant export. This command must be matched with a preceding Pollutant Export Model == command. Simulation construction section 4.5.3. Constant &lt;pollutant_name&gt; == \\(\\langle\\)&lt;float&gt;\\(\\rangle\\) Used in the Pollutant Export Model block of a TUFLOW CATCH control file to set a named pollutant &lt;pollutant_name&gt; concentration to a constant value. The command argument is the value to be set. This value is applied equally to all boundaries and summary files where appropriate. An example might be the setting of salinity in catchment flows as 0.0 g/L. Simulation construction section 4.5.3.1. Time-series &lt;pollutant_name&gt; == \\(\\langle\\)bc database name\\(\\rangle\\) Used in the Pollutant Export Model block of a TUFLOW CATCH control file to apply a named pollutant &lt;pollutant_name&gt; concentration to a timeseries. The command argument is the name of the timeseries as specified by the user in the TUFLOW HPC boundary database. TUFLOW CATCH will interpolate between the specified timeseries and required frequency of writing outputs as needed. An example might be setting water temperature to be a timeseries that reflects seasonality. Simulation construction section 4.5.3.2. Material == \\(\\langle\\)all;Up to 10 comma separated material numbers\\(\\rangle\\) Used in the Pollutant Export Model block of a TUFLOW CATCH control file to apply a material by material pollutant export properties. Up to 10 comma seperated materials can be included in one material block command. Alternatively, the keyword all can be specified and this will instruct TUFLOW CATCH to apply the properties in that corresponding material block to all TUFLOW HPC cells. This is a useful way to set the most commonly occuring conditions for all pollutants across the domain, and acts as a default ccondition. Subsequent Material block declarations for subsets of the entire domain (e.g. for one or more materials) will progressively spatially overwrite this global declaration. This command must be followed by an End Material command to finalise the block. Simulation construction section 4.5.3.3. End Material Used in the Pollutant Export Model block of a TUFLOW CATCH control file to end application of a material by material block pollutant export properties. This command must be accompanied by a preceding Material == command. Simulation construction section 4.5.3.3. GPKG Projection == \\(\\langle\\)rec: ..\\..\\TUFLOW\\model\\gis\\Projection.gpkg\\(\\rangle\\) Used in the General or Catchment Hydraulic Model commands section of a TUFLOW CATCH control file to set the path to the GPKG file containing the TUFLOW CATCH model projection. Only used if GIS Format is set to GPKG. TUFLOW FV does not support GPKG format. Simulation construction section 4.5.1. Preserve Catchment Inflows == \\(\\langle\\)ON;OFF\\(\\rangle\\) Used in the Receiving Model block of a TUFLOW CATCH control file to prevent TUFLOW CATCH from overwriting a previously created (non-blank) TUFLOW FV boundary condition bc block file. Used when preliminary TUFLOW FV boundary condition inflows have been generated by TUFLOW CATCH to support initial TUFLOW FV calibration. Avoids the need to continually rerun TUFLOW HPC within TUFLOW CATCH when undertaking only a TUFLOW FV calibration. Simulation construction section 4.5.2. Runs Directory == \\(\\langle\\)rec: ..\\..\\TUFLOWFV\\runs\\(\\rangle\\) Used in the Receiving Model block of a TUFLOW CATCH control file to set the path from which TUFLOW FV runs are to be automatically controlled by TUFLOW CATCH. This is the directory to which TUFLOW CATCH writes interim *.fvc and similar files, but the user does not need to interrogate or interact with these files - this command simply tells TUFLOW CATCH where the master TUFLOW FV control files are to be housed. It is not recommended that users interact with any files in this directory, although users will create and modify content in all other directories under TUFLOWFV if TUFLOW FV simulations are invoked. This interaction will occur through the TUFLOW CATCH *.tcc control file. Simulation construction section 4.5.2. EXE == \\(\\langle\\)rec: C:\\EXE\\TUFLOWFV\\TUFLOWFV.exe\\(\\rangle\\) Used in the Receiving Model block of a TUFLOW CATCH control file to set the path to the TUFLOW FV executable. The full path, either relative or absolute, is required, including the name of the executable itself, with the .exe extention. Simulation construction section 4.5.2. "],["AppParams.html", "Appendix B Parameters", " Appendix B Parameters .book .book-body .page-wrapper .page-inner { max-width: 95%; } Following are parameters that can be specified within TUFLOW CATCH via user commands. Tips for use: Use the search box to dynamically filter the table Sort the filtered (or unfiltered) table by clicking the arrows at the top of each column Use “s” on your keyboard to toggle the contents pane on and off to provide more screen width if needed UD = user defined N/A = not applicable For each parameter, use the links in the final column to navigate to either: A description of the corresponding control file command that includes the parameter (these links are all suffixed with ‘==’) The section containing the relevant descriptions (these links are all called ‘science’) Table B.1: TUFLOW CATCH parameters Parameter Notation Units Description Links Water depth threshold \\(d\\) m The minimum cell water depth for which pollutant export is permitted for a given pollutant within a given material. Below this depth, no pollutant export occurs. Applies equally to all pollutant export models. Evaluated on a cell by cell basis depthThreshold == science Accumulation limit \\(L_{acc}\\) kg/ha The maximum dry store areal mass of a given pollutant allowed to accumulate within a given material. Used with the Washoff1 pollutant export model. Above this value, no further mass is added to a cell’s dry store. Must be a positive number limit == science Erosion limit \\(L_{shr}\\) kg/ha The maximum erosion or deposition allowed within a material for a given pollutant. The number is specified only as a positive number, but is applied equally to erosion and deposition. For example, if a number of 100 is specified, and erosion is occurring in a given cell, then erosion will stop when the areal mass reaches -100 kg/ha. Equally, if deposition is occurring in the same cell, it will cease when the areal mass reaches 100 kg/ha. These areal masses can be converted to eroded depth or accretion height by assuming a bulk density and applying a conversion from hectares to square metres limit == science Dry store accumulation rate \\(R_a\\) kg/ha/yr The rate at which a pollutant accumuates mass to its dry store. Used only in accumulation pollutant export models. Set to zero to suppress pollutant export or a large value to rapidly populate pollutant dry stores. This might be useful in setting initial conditions rate == science Washoff time constant \\(T_c\\) s A time constant that controls the rate at which a pollutant is washed off (out of its dry store) when both minimum cell water depth and rainfall conditions are met. Used only in accumulation pollutant export models. Set to a large (small) number for slow (rapid) pollutant dry store release timeConstant == science Rainrate threshold \\(R_r\\) mm/hr The minimum instantaneous cell rain rate above which pollutant is exported from its dry store. Used only in accumulation pollutant export models. Set to a large (small) number for reduced (enhanced) pollutant washoff. Evaluated on a cell by cell basis rainThreshold == science Critical shear stress for deposition \\(\\tau_{cd}\\) N/m\\(^2\\) The maximum bed shear stress at which deposition can occur from a pollutant’s wet to dry store. The rate at which this deposition occurs is then set by the specified settling velocity. Used only in shear stress pollutant export models. Set to a small (large) number for reduced (enhanced) pollutant settling. Evaluated on a cell by cell basis. Should be less than the corresponding critical shear stress for erosion depositionStress == science Critical shear stress for erosion \\(\\tau_{ce}\\) N/m\\(^2\\) The minimum bed shear stress at which erosion can occur from a pollutant’s dry to wet store. Used only in shear stress pollutant export models. Set to a large (small) number for reduced (enhanced) pollutant erosion. Evaluated on a cell by cell basis. Should be greater than the corresponding critical shear stress for deposition erosionStress == science Deposition velocity \\(w_s\\) m/d The still water velocity at which a pollutant settles from the wet to dry store. Set to a small (large) number for reduced (enhanced) pollutant settling. Evaluated on a cell by cell basis depositionVelocity == science Erosion rate \\(E_r\\) g/m\\(^2\\)/s The rate at which a pollutant is eroded from its dry store. Used only in shear stress pollutant export models. Set to a small (large) number for reduced (enhanced) pollutant erosion. Evaluated on a cell by cell basis erosionRate == science Nodestring boundary timestep \\(dT_{ns}\\) s The timestep at which lines within a nodestring (Q) boundary condition file for TUFLOW FV (created from TUFLOW HPC predictions) are separated. This is not the timestep at which boundary data is written from memory to file Catch Output Interval Nodestring == science Lateral boundary timestep \\(dT_{lat}\\) s The timestep at which lines within a lateral (element, QC) boundary condition file for TUFLOW FV (created from TUFLOW HPC predictions) are separated. This is not the timestep at which boundary data is written from memory to file Catch Output Interval Lateral == science CSV write timestep \\(dT_{csv}\\) d The timestep (in simulation time) at which boundary condition data in memory is written to boundary condition files for TUFLOW FV (created from TUFLOW HPC predictions). This is not the timestep separating individual lines in a boundary condition file CSV Write Frequency Day == science "],["AppOutputs.html", "Appendix C Files and Data Fields C.1 Surface water concentrations C.2 Groundwater concentrations C.3 Dry mass C.4 Net mass C.5 Other outputs", " Appendix C Files and Data Fields .book .book-body .page-wrapper .page-inner { max-width: 95%; } Depending on the supported configuration selected, TUFLOW CATCH outputs one or more files, each with their own data fields. If the recommended output protocols described in Section 6 are followed, then these are: TUFLOW HPC One *.xmdf with all catchment based results TUFLOW FV One *.nc for hydrodynamics and sediments One *.nc for water quality Possibly others (e.g. particle tracking) Each of these files has any number of data fields, depending on the TUFLOW CATCH configuration, selected pollutants and water quality module settings. Notwithstanding this, the following will hold under the above output protocols: All TUFLOW CATCH map data fields will be contained within the TUFLOW HPC results file (*.xmdf) Receiving waterway hydrodynamic map data fields are those of standard TUFLOW FV outputs (*.nc) Receiving waterway water quality map data fields are those of standard TUFLOW FV WQ outputs (*.nc) The outputs and data fields of the second two points above are not dealt with here because they are described in the TUFLOW FV Manuals and TUFLOW FV WQ Manual Appendices. The first point above (TUFLOW CATCH data fields) is dealt with in this Appendix. Rather than attempt to list every potential data field that might be included in this output file, the attributes of the available data field types are presented. The names of these data fields will vary depending on pollutant names and other parameters, but each type follows a set naming convention. These data field types are: Surface water concentration Groundwater Layer concentration Dry mass Net mass These are described in the following sections. C.1 Surface water concentrations Surface water concentration data fields have the following properties: Content: Reports the temporally and spatially varying concentration of a dissolved or particulate pollutant in surface water Name: “Conc &lt;pollutant_name&gt;”, e.g. “Conc WQ_NITRATE_MG_L” Units: mg/L when Washoff1 model accumulation rates are specified in kg/ha/yr mg/L when Shear1 erosion rates are specified in g/m\\(^2\\)/s These fields are reported at all wet TUFLOW HPC cells for all simulated constituents that are listed within pollutant export material blocks. Constant and timeseries pollutants are not reported because they are assigned only during boundary condition writing, rather than being numerically simulated in the catchment domain. C.2 Groundwater concentrations Groundwater concentration data fields have the following properties: Content: Reports the temporally and spatially varying concentration of a dissolved or particulate pollutant in groundwater associated with soil layer N (N = 1, 2, …) Name: “GW Layer &lt;Layer number&gt; Conc &lt;pollutant_name&gt;”, e.g. “GW Layer 1 Conc PFAS” Units: mg/L when Washoff1 model accumulation rates are specified in kg/ha/yr mg/L when Shear1 erosion rates are specified in g/m\\(^2\\)/s These fields are reported at all TUFLOW HPC cells for all simulated constituents that are listed within pollutant export material blocks. Constant and timeseries pollutants are not reported because they are assigned only during boundary condition writing, rather than being simulated in the catchment domain. These GW Layer data fields will be zero at all times and locations for a given pollutant &lt;name&gt; if its infiltration has been set to off via Infiltration &lt;name&gt; == off C.3 Dry mass Dry mass data fields are created and reported only for pollutants that are set to use the Washoff1 pollutant export model. They have the following properties: Content: Reports the temporally and spatially varying dry mass of accumulated pollutant. It is initialised to zero at simulation commencement Name: “Dry Mass &lt;pollutant_name&gt;”, e.g. “Dry Mass WQ_POC_MG_L” Units: kg/ha when Washoff1 model accumulation rates are specified in kg/ha/yr These fields are reported at all TUFLOW HPC cells for all simulated constituents that are listed within pollutant export material blocks and use the Washoff1 pollutant export model. Constant and timeseries pollutants are not reported because they are assigned only during boundary condition writing, rather than being simulated in the catchment domain. Multiplying each pollutant’s Dry Mass outputs by the TUFLOW HPC cell area (in hectares) and summing across the domain will compute the total dry store mass of each pollutant (in kilograms) as a function of time. C.4 Net mass Net mass data fields are created and reported only for pollutants that are set to use the Shear1 pollutant export model. They have the following properties: Content: Reports the temporally and spatially varying net mass of a pollutant. It is initialised to zero at simulation commencement. A negative/positive number at a given location reflects net erosion/deposition, respectively Name: “Net Mass &lt;pollutant_name&gt;”, e.g. “Net Mass WQ_SED_FINES” Units: kg/ha when Shear1 model accumulation rates are specified in g/m\\(^2\\)/s These fields are reported at all TUFLOW HPC cells for all simulated constituents that are listed within pollutant export material blocks and use the Shear1 pollutant export model. Constant and timeseries pollutants are not reported because they are assigned only during boundary condition writing, rather than being simulated in the catchment domain. Dividing each pollutant’s Net Mass outputs by a user defined bulk density, and then again dividing by 10000 (i.e. m\\(^2\\)/ha) will compute the erosion or deposition depth of each pollutant as a function of space and time. C.5 Other outputs TUFLOW CATCH produces a small suite of supporting outputs that are simple text files. These are listed below. If the TUFLOW CATCH output folder is set to ..\\bc_dase as recommended: Catch Output Folder == ..\\bc_dbase then all files below are written to the TUFLOWCatch\\bc_dbase\\ folder. C.5.1 Mass balance A series of three mass balance files are written as follows (assuming a *.tcc file name of Model_001.tcc). C.5.1.1 Surface water mass balance One file per simulation is produced as follows: Content: Timeseries of spatially summed cumulative surface water flow and associated pollutant masses leaving the TUFLOW HPC model (either to a polygon (Pollutant export TUFLOW CATCH configuration) or TUFLOW FV model domain (Hydrology and Integrated TUFLOW CATCH configurations)) Name: Model_001_catchment_hydraulic_mass_balance_surface.csv Units: Time: ISODATE format Volume: m\\(^3\\) (cumulative) All pollutants: g (cumulative) (not reported for Hydrology configuration as pollutants are not simulated) Uses Can be directly imported into common plotting packages to show total surface cumulative flow and pollutant mass export at the outlet of the TUFLOW HPC model domain (or, equally, entry to the TUFLOW FV domain if used) Provides an accessible means of high level scenario comparisons, for example where cumulative surface catchment flows and pollutants loads are to be compared between different catchment land use options, management interventions or rainfall sequences C.5.1.2 Groundwater mass balance One file per simulation is produced as follows: Content: Timeseries of spatially summed cumulative groundwater flow and associated pollutant masses leaving the TUFLOW HPC model (either to a polygon (Pollutant export TUFLOW CATCH configuration) or TUFLOW FV model domain (Hydrology and Integrated TUFLOW CATCH configurations)) Name: Model_001_catchment_hydraulic_mass_balance_groundwater.csv Units: Time: ISODATE format Volume: m\\(^3\\) (cumulative) All pollutants: g (cumulative) (not reported for Hydrology configuration as pollutants are not simulated) Uses Can be directly imported into common plotting packages to show total groundwater cumulative flow and pollutant mass export at the outlet of the TUFLOW HPC model domain (or, equally, entry to the TUFLOW FV domain if used) Provides an accessible means of high level scenario comparisons, for example where cumulative groundwater catchment flows and pollutants loads are to be compared between different catchment land use options, management interventions or rainfall sequences C.5.1.3 Total mass balance One file per simulation is produced as follows. Its content is the summation of the data reported in the respective surface and groundwater mass balance outputs described in Sections C.5.1.1 and C.5.1.2: Content: Timeseries of spatially summed cumulative surface and groundwater flow and associated pollutant masses combined leaving the TUFLOW HPC model (either to a polygon (Pollutant export TUFLOW CATCH configuration) or TUFLOW FV model domain (Hydrology and Integrated TUFLOW CATCH configurations)) Name: Model_001_catchment_hydraulic_mass_balance.csv Units: Time: ISODATE format Volume: m\\(^3\\) (cumulative) All pollutants: g (cumulative) (not reported for Hydrology configuration as pollutants are not simulated) Uses Can be directly imported into common plotting packages to show cumulative total flow and pollutant mass export at the outlet of the TUFLOW HPC model domain (or, equally, entry to the TUFLOW FV domain if used) Provides an accessible means of high level scenario comparisons, for example where cumulative total catchment flows and pollutants loads are to be compared between different catchment land use options, management interventions or rainfall sequences C.5.2 Receiving polygon If TUFLOW CATCH has been executed in the Pollutant export configuration, then a timeseries output file is produced that reports incoming flow and concentrations to that user defined polygon. This is broadly a concentration based equivalent to the output described in Section C.5.1.3, with some extra fields reported. Assuming a *.tcc file name of Model_001.tcc has been executed, the file is as follows: Content: Timeseries of spatially summed instantaneous surface and groundwater flow and associated pollutant concentrations combined leaving the TUFLOW HPC model to a polygon (Pollutant export TUFLOW CATCH configuration) Name: Model_001_catchment_hydraulic_receiving.csv Units: Time: ISODATE format Flow: m\\(^3\\)/s Salinity: g/L if used Temperature: \\(^{\\circ}\\)C if used All pollutants: mg/L or \\(\\mu\\)g/L as appropriate for each sediment fraction or water quality pollutant Uses Can be directly imported into common plotting packages to show instantaneous total flow and pollutant concentrations at the outlet of the TUFLOW HPC model domain Provides an accessible means of high level scenario comparisons, for example where total catchment flows and pollutants concentrations are to be compared between different catchment land use options, management interventions or rainfall sequences C.5.3 TUFLOW FV boundaries A series of TUFLOW FV boundary related files are written as follows. C.5.3.1 BC blocks A single file that contains all required TUFLOW FV nodestring (Q) and cell (QC) inflow boundary BC blocks is written by TUFLOW CATCH. This file is called automatically by TUFLOW FV under TUFLOW CATCH when required. It is at the heart of the automated linking offered by TUFLOW CATCH. Users should not edit this file in any way. Content: TUFLOW FV BC blocks that direct TUFLOW FV to boundary condition data files prepared by TUFLOW HPC under TUFLOW CATCH. Only produced in the Hydrology and Integrated TUFLOW CATCH configurations. Two example blocks are shown below !----------------------------------------------------------------------------------------- ! Nodestring boundaries BC == Q, NW_Inflow, NW_Inflow.csv Sub-Type == 2 BC Header == Time,Flow,Salinity,Temperature,SED_FINES End BC !----------------------------------------------------------------------------------------- ! Lateral boundaries BC == QC, 1178572.028, 4996161.397, cell1.csv BC Header == Time,Flow,Salinity,Temperature,SED_FINES End BC Name: Model_001_catchment_hydraulic.fvcatchbc Units: NA Uses Used internally by TUFLOW CATCH to link TUFLOW HPC and TUFLOW FV simulations. Users should not edit this file in any way This file calls underlying nodestring and/or lateral boundary condition data files produced by TUFLOW HPC, and these are described below. C.5.3.2 Nodestring boundary data If TUFLOW CATCH has been executed in the Hydrology or Integrated configuration and TUFLOW FV nodestrings have been specified as catchment inflows via Catchment BC Nodestring == &lt;path to GIS nodestring file&gt; then individual data files are produced for each nodestring boundary: Content: Timeseries of flow and associated pollutant concentrations crossing the nodestring Name: “&lt;GIS name&gt;.csv”, e.g. “SW_Inflow.csv”, where “SW_Inflow” is the user defined name given to the nodestring in GIS Units: Time: ISODATE format Flow: m\\(^3\\)/s Salinity: g/L if used Temperature: \\(^{\\circ}\\)C if used All pollutants: mg/L or \\(\\mu\\)g/L as appropriate for each sediment fraction or water quality pollutant Uses Called by Model_001_catchment_hydraulic.fvcatchbc to link TUFLOW HPC and TUFLOW FV under TUFLOW CATCH. Users should not edit this file in any way, including opening and saving it in Excel, which can cause the time format to change and become unreadable. C.5.3.3 Lateral boundary data If TUFLOW CATCH has been executed in the Hydrology or Integrated configuration then individual lateral data files are produced for each transfer cell boundary: Content: Timeseries of flow and associated pollutant concentrations entering a cell Name: “cell_&lt;TUFLOW mesh cell ID&gt;.csv”, e.g. “cell37.csv”, where 37 is the 2D cell ID in the TUFLOW FV mesh Units: Time: ISODATE format Flow: m\\(^3\\)/s Salinity: g/L if used Temperature: \\(^{\\circ}\\)C if used All pollutants: mg/L or \\(\\mu\\)g/L as appropriate for each sediment fraction or water quality pollutant Uses Called by Model_001_catchment_hydraulic.fvcatchbc to link TUFLOW HPC and TUFLOW FV under TUFLOW CATCH. Users should not edit this file in any way, including opening and saving it in Excel, which can cause the time format to change and become unreadable. "],["AppDemoModel.html", "Appendix D Demonstration Model D.1 Context D.2 Domain D.3 Numerical models D.4 Simulation suite D.5 Downloads D.6 Execution D.7 Results interrogation", " Appendix D Demonstration Model D.1 Context A demonstration model and small suite of simulations have been developed to support TUFLOW CATCH users. These simulations: Can be used as templates for construction of other TUFLOW CATCH simulations Encompass the supported TUFLOW CATCH configurations, and Are able to be run without a licence for TUFLOW CATCH, TUFLOW HPC or TUFLOW FV Descriptions of the model and demonstration simulations follow. D.2 Domain The demonstration model is located in New Zealand. It uses publicly available base data sets where available (with some of these being modified on occasion), and synthetic data otherwise. The catchment has: An area of approximately 55km\\(^2\\) A relief of approximately 20m Three (synthetic) land uses Urban Forest Agriculture The general arrangement of the catchment is presented in Figure D.1. Figure D.1: TUFLOW CATCH demonstration model: catchment The receiving waterway (which is a hypothetical lake) has: An area of approximately 1km\\(^2\\) A maximum depth of approximately 12m Two major riverine tributaries Two local wastewater treatment plant discharges One offtake An overflow outlet weir The general arrangement of the receiving waterway is presented in Figure D.2. Figure D.2: TUFLOW CATCH demonstration model: receiving waterway The domain is simulated under TUFLOW CATCH for a period of 1 week from 01/01/2021 to 07/01/2021, inclusive. D.3 Numerical models The TUFLOW HPC, pollutant export and TUFLOW FV models are described following. D.3.1 TUFLOW HPC The TUFLOW HPC model has the following general configuration: A 2D cell size of 50m, SGS turned on with a sample target distance of 1m A synthetic rainfall record applied, with a maximum daily rainfall of approximately 60mm Three materials, with one for each land use above One soil layer with constant thickness of 0.6m All simulations use GPU. D.3.2 Pollutant export The pollutant export model has various forms depending on the TUFLOW CATCH configuration is simulated. Across these various forms, both shear1 and washoff1 methods are deployed, and other pollutant export parameters are set using the guidance provided in this manual. In all cases where applicable: Salinity, dissolved oxygen, silicate, adsorbed phosphorus and phytoplankton are set to constant concentrations Sediment and particulate organics are prohibited from infiltrating to groundwater Water temperature is provided as a timeseries Sediment uses the shear1 method, and all other pollutants use the washoff1 method D.3.3 TUFLOW FV The TUFLOW FV model has the following general configuration: Simulation of hydrodynamics, including density (salinity and temperature) driven processes Full atmospheric heat exchange simulation Sediment transport simulation, with one sediment fraction Water quality simulation, using the Organics simulation class 3D simulation with 8 z layers and 6 sigma layers Three bed materials to define sediment transport and water quality processes All simulations use GPU. D.4 Simulation suite The demonstration model suite includes the following simulations. Table D.1: Demonstration TUFLOW CATCH Simulations Simulation name Description Use case TUFLOW CATCH Configuration Demonstration_001.tcc Catchment hydraulic calibration: HPC 2d outlet Calibration of catchment hydraulic model without receiving model TUFLOW HPC calibration only Demonstration_002.tcc Catchment hydraulic calibration: Pollutant export configuration with constant salinity and temperature timeseries Calibration of catchment hydraulic model with downstream polygon Pollutant export Demonstration_003.tcc Catchment pollutant calibration: Pollutant export configuration with user pollutant/s Only catchment hydraulic and pollutant export models are to be used, with non-TUFLOW FV pollutants and downstream polygon Pollutant export Demonstration_004.tcc Catchment pollutant calibration: Pollutant export configuration with TUFLOW FV pollutants Calibration of catchment pollutant export model following 002 calibration, to TUFLOW FV pollutants with downstream polygon Pollutant export Demonstration_005.tcc Linked catchment and receiving model: Integrated configuration with all TUFLOW FV pollutants Generation of first pass spatially resolved TUFLOW FV HD and pollutant boundaries for subsequent TUFLOW FV calibration initiation Integrated Demonstration_006.tcc Receiving model calibration: TUFLOW FV simulation with preserved inflows Catchment hydraulic and pollutant modelling complete (or largely so) and TUFLOW FV is to be calibrated without reunning catchment model Integrated Demonstration_007.tcc Linked catchment and receiving model: Hydrology configuration with salinity and temperature No pollutant simulation required in TUFLOW - extend 002 above to include TUFLOW FV model Hydrology D.5 Downloads D.5.1 Binaries The required binary executable files are to be downloaded from the following locations (to be updated with hyperlinks: in the interim, email support@tuflow.com for relevant binaries): TUFLOW CATCH TUFLOW HPC TUFLOW FV It is suggested that these are saved in a convenient and centralised location. For the purposes of explanation in this Appendix, it has been assumed that they are saved to the following locations (with ReleaseXX/YY/ZZ being a placeholder for the release version of each, which will be different): C:\\TUFLOW\\EXE\\TUFLOWCATCH\\ReleaseXX\\TUFLOWCATCH.exe C:\\TUFLOW\\EXE\\TUFLOW\\ReleaseYY\\TUFLOW_iSP_w64.exe C:\\TUFLOW\\EXE\\TUFLOWFV\\ReleaseZZ\\TUFLOWFV.exe D.5.2 Simulation files The demonstration model suite can be downloaded here, in the TUFLOW CATCH section. For the purposes of explanation in this Appendix, it has been assumed that the suite is saved to the following location and then unzipped: C:\\TUFLOW\\Demonstration\\TUFLOWCATCH\\ When unzipped, the high level folder structure will be as follows: Modelling TUFLOW TUFLOWCATCH TUFLOWFV The key directory for executing TUFLOW CATCH is then C:\\TUFLOW\\Demonstration\\TUFLOWCATCH\\Modelling\\TUFLOWCATCH\\runs Once downloaded and unzipped, the user is required to: In the Modelling\\TUFLOWCATCH\\runs\\run_simulation.bat file: On line 2, copy and paste in the exact path to the TUFLOW CATCH executable over the placeholder &lt;TUFLOW CATCH EXECUTABLE FULL PATH&gt;, so that: set exe=&lt;TUFLOW CATCH EXECUTABLE FULL PATH&gt; becomes (using the example path above): set exe=C:\\TUFLOW\\EXE\\TUFLOWCATCH\\ReleaseXX\\TUFLOWCATCH.exe Uncomment the desired simulation command by deleting the preceding ‘::’ , so that (if simulation 001 was to be run): :: %exe% Demonstration_001.tcc becomes: %exe% Demonstration_001.tcc In the Modelling\\TUFLOWCATCH\\runs\\Demonstration_001.tcc file (and any other Demonstration_00*.tcc file to be executed): In the Catchment Hydraulic Model block, copy and paste in the exact path to the TUFLOW CATCH executable over the placeholder &lt;TUFLOW EXECUTABLE FULL PATH&gt;, so that: EXE == &lt;TUFLOW EXECUTABLE FULL PATH&gt; becomes (using the example path above): EXE == C:\\TUFLOW\\EXE\\TUFLOW\\ReleaseYY\\TUFLOW_iSP_w64.exe In the Receiving Model block, copy and paste in the exact path to the TUFLOW FV executable over the placeholder &lt;TUFLOW FV EXECUTABLE FULL PATH&gt;, so that: EXE == &lt;TUFLOW FV EXECUTABLE FULL PATH&gt; becomes (using the example path above): EXE == C:\\TUFLOW\\EXE\\TUFLOWFV\\ReleaseZZ\\TUFLOWFV.exe D.6 Execution Once the binaries and simulation files have been downloaded and paths altered as above (and altered files saved), a TUFLOW CATCH simulation can be executed as follows: Open a command prompt and navigate to the TUFLOW CATCH runs folder cd C:\\TUFLOW\\Demonstration\\TUFLOWCATCH\\Modelling\\TUFLOWCATCH\\runs C:\\ Ensure the path to the TUFLOW CATCH executable has been set in run_simulations.bat, and that at least one simulation has been uncommented Type the following in the command prompt and hit enter, and TUFLOW CATCH will execute: run_simulations Some notes on executing the demonstration simulations: Although not mandatory, it is suggested that the simulations be run one at a time, and in order, and results reviewed after each execution Demonstration_005.tcc must be run prior to Demonstration_006.tcc because the former generates boundary conditions for the latter D.7 Results interrogation Once executed, results will be written to: C:\\TUFLOW\\Demonstration\\TUFLOWCATCH\\Modelling\\TUFLOWCATCH\\results Use the QGIS TUFLOW CATCH plugin (see Section 4.3) to generate a .json file and view the results. Simulations that involve only TUFLOW HPC or TUFLOW FV can have their *.xmdf and *.nc results interrogated in the normal manner through the TUFLOW Viewer as shown in Figure D.3. Figure D.3: TUFLOW CATCH demonstration model: loading standard TUFLOW HPC or TUFLOW FV results D.7.1 Example json file creation Simulations 005 and 006 can be used (after execution) to create a json file within the TUFLOW CATCH plugin (see Section 4.3). To do so, select the following results files in the json creation process (making sure the order in the selection dialogue box is as below): Demonstration_006_receiving_HD.nc Demonstration_006_receiving_WQ.nc Demonstration_005_catchment_hydraulic.xmdf Save the json to here: C:\\TUFLOW\\Demonstration\\TUFLOWCATCH\\Modelling\\TUFLOWCATCH\\results\\Demonstration_006.tuflow.json Once created, drag and drop the json onto a QGIS window to view the results. Hit F7 to toggle the layer styling panel and reveal the full suite of simulated quantities. AS an example, select the ‘Conc SED_FINES’ field by clicking on the contour icon to the right of the field name as per Figure D.4. Figure D.4: Selecting the Conc SED_FINES data field in a json results file An animation of the associated surface concentration results (that shows the connectivity between TUFLOW HPC, pollutant export and TUFLOW FV simulations of sediment) is presented in Figure D.5. This animation was prepared using the TUFLOW CATCH plugin, and the maximum concentration was set to 5 mg/L. Figure D.5: Conc SED_FINES animated results The connectivity between models is clear. Of note is the increase in concentrations once flows enter the receiving model arms. This is due to resuspension of previously accumulated bed sediment in the lake, which has been computed using the advanced TUFLOW FV Sediment Transport Module capability. Users could investigate this further by altering the erosion parameterisation within the TUFLOW FV sediment transport control file, or setting initial bed masses in the TUFLOW FV model to zero - this concentration spike will then not appear. D.7.2 Example results An example of a dry mass accumulation predicted by TUFLOW HPC (under the washoff1 model) at a point in time just prior to rainfall is presented in Figure D.6, for FRP. The different accumulations of FRP in different land use areas are clear. The red areas are urban areas, which had the highest accumulation rates of FRP set within the simulation. Figure D.6: TUFLOW CATCH demonstration model: FRP dry mass accumulation An example of a net mass distribution predicted by TUFLOW HPC (under the shear1 model) at simulation end is presented in Figure D.7, for SED_FINES. Positive (negative) results reflect net accumulation (erosion) at simulation end. Erosion (and deposition) limits were set to 1 kg/ha in the simulation. The figure shows that (at least) the catchment areas within the stream network have been eroded to this maximum (blue colour), and no more. Figure D.7: TUFLOW CATCH demonstration model: SED_FINES net mass at simulation end "],["AppDemoModelResCont-2.html", "Appendix E Application under version control E.1 Context E.2 Use case E.3 Possible workflow #1 E.4 Possible workflow #2", " Appendix E Application under version control E.1 Context It is understood that a common use case of TUFLOW CATCH involves multiple modellers with separate but complementary skill sets working on the same TUFLOW CATCH project. For example, a TUFLOW CATCH project might involve: A TUFLOW HPC specialist undertaking catchment simulation, and A TUFLOW FV specialist addressing receiving waterway simulation These modellers will need to work quasi-independently for parts of the project, but bring their work together efficiently at a point, or several points throughout the project schedule. TUFLOW CATCH has been deliberately designed to allow for these modellers to work in parallel as the project unfolds, and most importantly, to both work from the same TUFLOW CATCH control file: different users should not need to set up and work from different TUFLOW CATCH control files of the same model. It also goes without saying that TUFLOW HPC and TUFLOW FV modellers should never set up individual *.tcf and *.fvc control files and attempt to construct their models disjointedly in the hope of manually combining models together under TUFLOW CATCH at some future point: both should undertake all set up works from a single TUFLOW CATCH *.tcc control file. Given this, the question arises as to how this is to be managed from a file control perspective. This is discussed in the following sections. E.2 Use case The use case considered here as an example of using version control is the integrated TUFLOW CATCH configuration, with one modeller working on the TUFLOW HPC calibration, and a different modeller working on the TUFLOW FV calibration. TUFLOW makes no recommendation as to which (of the many available) versioning platforms should or could be used. For the purposes of this example, Git (on Windows) is used, with no intent of endorsement. E.3 Possible workflow #1 The following is a possible workflow for the two modellers delivering the use case described above, working largely independently until recombination of their work into an overall TUFLOW CATCH simulation. Alterations to this are expected to be required on a case by case basis, and one such example is presented subsequently as a second workflow in Section E.4. The steps below assume an introductory level of knowledge of Git commands and processes, and are not intended to be exhaustive. Users should familiarise themselves with basic Git protocols and concepts before reviewing the below. For example, users should appropriately configure their .gitignore file, and be familiar with commands such as git log and git status to keep track of their work. Preliminaries Install Git. See https://git-scm.com/book/en/v2/Getting-Started-Installing-Git Ensure at least one user already has the relevant account and sufficient permissions to create a new Git project in a web interface Project initiation Use the TUFLOW CATCH QGIS plugin (see Section 4.3) to generate the folder structure and template files for a TUFLOW CATCH simulation. This can be created in any location because it will be subsequently moved Create a new Git project via the web interface of either GitHub or GitLab - TUFLOW makes no recommendation in this regard. This is often achieved via clicking a blue button and filling out some high level project details. The project will have one branch, assumed to be called ‘main’ for the purposes of this example Figure E.1: Creating a new Git project Once created, and also from the web interface, copy the address that allows cloning of the new project via https. This is often achieved through a drop down menu on a button marked ‘Clone’, such as the below (the blue highlighted text is to be copied) Figure E.2: Copying the https address of a newly created Git project Open a new DOS command prompt and navigate to a location where modelling is to be undertaken, preferably under a folder called ‘Modelling’ Clone the new Git project to the Modelling folder, by typing the following, pasting the https address copied above in the &lt;placeholder&gt; location git clone &lt;placeholder&gt; An example might look like the following. A new folder under Modelling will be created named the same as the Git project name (in this case, ‘catch-demo’). It is this lower folder that is the git project: git clone https://xx-gitlab.yy-zz.local/user.last/catch-demo.git Change directory into the cloned folder (using the name of the project, in this case ‘catch-demo’) cd catch-demo Copy the TUFLOW CATCH folder structure created above into this project directory (‘Modelling\\catch-demo’ in this example), either through windows explorer or the DOS prompt In the DOS command prompt whilst in the catch-demo directory, add the new files to a Git commit by typing: git add . git commit -m &quot;First commit&quot; Push the new commit back up to the Git web interface git push The project created earlier is now populated with vanilla TUFLOW CATCH template files, both locally and in the web repository. Update files Modify template files locally to set up overall TUFLOW CATCH simulation with common commands (e.g. project etc) and save files Commit changes and push git add . git commit -m &quot;Populates initial TUFLOW CATCH files for branching&quot; git push Create branches In the web interface, which now has the “Populates initial TUFLOW CATCH files for branching” commit present, create a new branch from main for the TUFLOW HPC modeller. This is often achieved via clicking a blue button. Call the branch ‘HPC’ when prompted for a name. Create this new branch from main Figure E.3: Create a branch in a Git project In the web interface, create another new branch from main for the TUFLOW FV modeller in the same way. Call the branch ‘FV’ when prompted for a name. Create this new branch from main The Git project now has the branches it needs: ‘main’ for the final TUFLOW CATCH model; ‘HPC’ for the TUFLOW HPC modeller; and ‘FV’ for the TUFLOW FV modeller. This allows for the individual modellers to develop their models independently, but from the same commit. The intention is that these files will be merged back into main on completion to form the TUFLOW CATCH simulation suite. The TUFLOW HPC and TUFLOW FV modellers can now work on different branches, in parallel, with a view to merging their work back into the main branch on completion. The TUFLOW HPC modeller now: Opens a DOS command prompt and navigates to the directory to be used for modelling. This can be anywhere and does not need to be related to the TUFLOW FV modeller’s work Following the steps above, clones the project git clone https://xx-gitlab.yy-zz.local/user.last/catch-demo.git cd catch-demo Once in the catch-demo (or project) directory it is essential that the TUFLOW HPC modeller not work in the ‘main’ branch, but work in the ‘HPC’ branch. As a warning, the ‘main’ branch will most likely be set as the default branch for the modeller to work in when the project is first cloned, so this needs to be changed manually. This requires the TUFLOW HPC modeller to check out the HPC branch by typing: git checkout HPC The TUFLOW HPC modeller should then begin construction of the TUFLOW HPC model through the TUFLOW CATCH *.tcc control file in this HPC branch, noting: Set up and execution of the TUFLOW HPC model should only occur through the *.tcc file. The modeller should never create a *.tcf file References to boundary database files etc, should point into the TUFLOW directory structure from the *.tcc, for example Figure E.4: Example of referencing TUFLOW files from a *.tcc TUFLOW CATCH control file The TUFLOW CATCH simulation should use the TUFLOW HPC calibration only or Pollutant export configuration with a downstream polygon as a placeholder for the TUFLOW FV mesh. This does not involve making any changes to the Receiving Model block of the *.tcc (which will be modified by the TUFLOW FV modeller) At key stages of construction, the TUFLOW HPC modeller should stage, commit and push changes to the web project git add . git commit -m &quot;A useful commit message&quot; git push When construction is finished, the TUFLOW HPC modeller is ready to merge into the main branch to populate the overall TUFLOW CATCH simulation In parallel with the TUFLOW HPC works, the TUFLOW FV modeller: Opens a DOS command prompt and navigates to the directory to be used for modelling. This can be anywhere and does not need to be related to the TUFLOW HPC modeller’s work Following the steps above, clones the project git clone https://xx-gitlab.yy-zz.local/user.last/catch-demo.git cd catch-demo Once in the catch-demo (or project) directory it is essential that the TUFLOW FV modeller not work in the ‘main’ branch, but work in the ‘FV’ branch. As a warning, the ‘main’ branch will most likely be set as the default branch for the modeller to work in when the project is first cloned, so this needs to be changed manually. This requires the TUFLOW FV modeller to check out the FV branch by typing: git checkout FV The TUFLOW FV modeller should then begin construction of the TUFLOW FV model through the TUFLOW CATCH *.tcc control file in this FV branch, noting: Set up and execution of the TUFLOW FV model should only occur through the *.tcc file. The modeller should never create an *.fvc file References to boundary, geometry and files etc, should point into the TUFLOWFV directory structure from the *.tcc, for example Figure E.5: Example of referencing TUFLOW FV files from a *.tcc TUFLOW CATCH control file The TUFLOW CATCH simulation should use the TUFLOW FV calibration only configuration. This does not involve making any changes to the Catchment Hydraulic Model block of the *.tcc (which will be modified by the TUFLOW HPC modeller) At key stages of construction, the TUFLOW HPC modeller should stage, commit and push changes to the web project git add . git commit -m &quot;A useful commit message&quot; git push When construction is finished, the TUFLOW FV modeller is ready to merge into the main branch to populate the overall TUFLOW CATCH simulation The HPC and FV branches can be merged into the main branch to generate the overall TUFLOW CATCH simulation Because the modellers have been working in separate blocks of the *.tcc, and populating separate folder structures for base data (..\\TUFLOW\\ and ..\\TUFLOWFV\\), conflicts should be minimal Free packages such as Winmerge can be used to assist with this process. This is a suggestion only and not an endorsement of Winmerge by TUFLOW E.4 Possible workflow #2 The following is a possible addition to the workflow presented in Section E.3 for the two modellers delivering the same use case. Instead of the modellers working entirely independently until post calibration, it includes occasional provision of interim catchment inflows from the TUFLOW HPC modeller to the TUFLOW FV modeller to assist in calibration of the latter under wet conditions. This is accomplished by: Merging sufficiently complete HPC and FV branches into the main branch to produce a TUFLOW CATCH integrated configuration simulation from time to time, instead of only at the end of individual calibration tasks Executing TUFLOW CATCH in integrated configuration to produce all spatially and temporally resolved boundary inflows for TUFLOW FV Add, commit and push the boundary files to the main branch Copy the boundary files (including header blocks (.fvcatchbc) and data files (.csv)) to the \\TUFLOWCATCH\\bc_dbase\\ folder in the FV branch being used by the TUFLOW FV modeller for subsequent access Rename the *.fvcatchbc file to be the same as the TUFLOW FV modellers *.tcc file name so that it is automatically found by the current *.tcc simulation Rerun the TUFLOW FV modeller’s *.tcc simulation, adding the command below inside the Receiving Model block so that blank catchment boundary files (the default) are not produced and so do not overwrite those developed in the above integrated TUFLOW CATCH simulation Preserve catchment inflows == ON The TUFLOW FV modeller can then continue the calibration process with revised inflows. The above process can be repeated at intervals that suit the modelling project and timelines. Once complete, the HPC and FV branches can be finally merged, and the full TUFLOW CATCH simulation executed "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
