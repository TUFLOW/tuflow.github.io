[["index.html", "TUFLOW Classic/HPC New Release Notes ", " TUFLOW Classic/HPC New Release Notes Release Build 2023-03-AC "],["introduction.html", "Introduction Document Updates and Important Notices Summary Licensing", " Introduction Document Updates and Important Notices (in chronological order) March 16, 2023: The 2023-03 Release is a major release that includes several new industry leading features built into the TUFLOW HPC 2D solver. The exciting new features include layered interflow, support for new vector and raster GIS file formats, Sub-Grid Sampling (SGS) enhancements and 2D bridge modelling enhancements. The HPC solver has several new default settings due to the new functionality. Without setting the backward compatibility switches the results will be different, although for most models the differences should be minimal. For TUFLOW Classic, no default settings have changed, however, an update to the Fortran Compiler may mean very slight differences compared to the 2020-10 builds. June 22, 2023: The 2023-03-AB Release update which includes bug fixes and enhancements. A description of bug fixes and other changes are highlighted in light green. September 15, 2023: The 2023-03-AC Release update which includes bug fixes and enhancements. A description of bug fixes and other changes are highlighted in light blue. This document may be updated from time-to-time with new content from software updates. Summary The TUFLOW Classic/HPC 2023-03 Release introduces major new functionality, along with general enhancements and bug fixes. The major features are as follows: Layered Interflow The new layered interflow feature permits horizontal flow of water through soil layers within the cumulative infiltration layer. Up to 10 vertical layers are supported, each with horizontal advection and vertical infiltration from above. The functionality introduced in the 2023-03 Release is intended to provide a mechanism to improve catchment runoff and inundation modelling. For example: Catchment response for 2D direct rainfall (“rain on grid”) models can be better represented where subsurface transmission affects surface runoff. Longer term, continuous catchment models offer improved prediction of streamflows between rainfall events. The accuracy of real-time flood forecasts can be improved by modelling the drying and draining of catchments between rainfall events. Sub-surface seepage causing inundation, such as seepage under a levee bank through a porous layer (e.g., old gravel river course), causing flooding on the protected side of the levee. New GIS Database Format for Vector and Raster Data The 2023-03 Release increases support for GIS formats with new vector and raster formats supported for both reading and writing of GIS data. These new formats are GeoPackage (vector and raster) and GeoTIFF (raster only). GeoPackage is a widely supported, open GIS database format, built upon an SQLite database (data is stored as a single file with the extension .gpkg). This database format has several benefits, including: Multiple GIS layer can be stored in the single file database. For example, all GIS input layers can be stored in a single GeoPackage file. Supports spatial indexing, greatly reducing loading and viewing times making it much faster to work with in GIS packages. Faster to write from TUFLOW than the shapefile format. Sub-Grid Sampling Enhancements The 2023-03 Release extends the functionality of the Sub-Grid Sampling (SGS) introduced to TUFLOW HPC in the 2020-01 Release. This includes improving performance of start-up times for SGS models through parallelisation and new .xf files, additional options for defining sampling frequency, and improved output mapping. Bridge Enhancements TUFLOW HPC introduces a new 2D bridge modelling option, that simplifies 2D bridge inputs and incorporates the outcomes of a joint research project between Qld Dept of Transport and Main Roads (TMR) and TUFLOW to better quantify bridge deck losses (Collecutt et al. 2022). The 2023-03 Release also includes support for modelling 1D arch bridges. Licensing For perpetual licences, to run simulations using Build 2023-03 requires payment of the 2022/2023 annual software maintenance fee (invoiced mid-2022) and for the TUFLOW licence to have been updated (i.e., via RaC/RaU files). For active rental and subscription licences, no updates should be required. For tutorial and demo models, or if running in free demo mode, no licence is required. For any licensing enquiries please contact sales@tuflow.com, or for general support support@tuflow.com. Use of the TUFLOW software in any mode is bound by the TUFLOW Products Licence Agreement. Please refer to the TUFLOW Price List for more details or contact sales@tuflow.com. Note: If running TUFLOW HPC on GPU hardware the NVidia drivers may need to be updated for the 2023-03 Release. This is due to an update in the CUDA compiler version. If using TUFLOW HPC on a NVidia GPU device, it is recommended to update the NVidia drivers prior to using the 2023-03 Release. The updated CUDA compiler means that TUFLOW HPC may no longer work on older GPU. For the 2023-03 Release, two executables are provided: 64-bit single precision (TUFLOW_iSP_w64.exe) and 64-bit double precision (TUFLOW_iDP_w64.exe). Note, if using the HPC solver (including Quadtree), it is rare that the double precision version is required due to the nature of the solution scheme. If in doubt, run the model using single and double precision, and if there is no significant change in results use single precision as the simulation will be faster and use less memory. References "],["Overview-1.html", "Section 1 Overview 1.1 2023-03 Release", " Section 1 Overview 1.1 2023-03 Release The 2023-03 Release is a major release that introduces new features and offers significant improvements to the existing sub-grid sampling functionality. A range of general new features, enhancements and bug fixes are also included. These include: New GIS Vector file format – GeoPackage New GIS Raster file formats – GeoTIFF and GeoPackage Layered interflow (Sub-Surface) Flows Sub-Grid Sampling (SGS) improvements 2D bridge modelling enhancements 2D weir flow enhancements As always, it is recommended that when switching to a new build with an established model, test runs are carried out and comparisons made between the old and new builds (subtracting the two maximum water level (h) data sets and reviewing any differences is an easy way to do this). If you have any queries on the comparison, or require clarification or more detail on any of the points below, please email support@tuflow.com "],["TwoDDomConstr-1.html", "Section 2 2D Domain Construction 2.1 Quadtree Updates (HPC Only) 2.2 Sub-Grid Sampling (SGS) Changes 2.3 Infiltration and Sub-Surface Flows 2.4 Modelling Bridge Structure in 2D 2.5 Advection Dispersion 2.6 Non-Newtonian Mixing 2.7 Minor Enhancements and Bug Fixes 2.8 Minor Enhancements and Bug Fixes for 2023-03-AB 2.9 Minor Enhancements and Bug Fixes for 2023-03-AC", " Section 2 2D Domain Construction 2.1 Quadtree Updates (HPC Only) The Quadtree mesh refinement functionality, added in the 2020-01 Release, allows the user to vary the resolution of a model using the HPC 2D Solver. The following enhancements have been included in the 2023-03 Release. \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) 2.1.1 Support For Multiple GPU Multiple GPUs are supported for the 2023-03 Release when using a quadtree mesh. For the 2020 Releases, only a single GPU per simulation could be utilised when using quadtree refinement. The functionality for multiple GPUs with Quadtree is the same as for a standard (single resolution) HPC model. Device IDs can be specified in either the .tcf using the “GPU Device ID ==” command, or via the command line with -pu arguments. Device weightings can be specified with the “HPC Device Split ==” .tcf command (refer to Section 8.4 in the 2020 Release Notes). As per standard HPC (without Quadtree) if peer-to-peer GPU access is available between GPU cards, via either an NVLink or via a compatible PCIe configuration, then this is utilised by default. This can be disabled with the command: GPU Peer to Peer Access == DISABLED | {ENABLED IF AVAILABLE} Note: With newer generations of GPUs increasing the CUDA cores and memory, multiple GPUs simulations will realistically be only confined to very large models. 2.1.2 Support For Multiple Nesting GIS Layers The 2023-03 Release supports multiple 2d_qnl (nesting polygon) layers (i.e. multiple “Read GIS Nesting ==” commands in a single .qcf). Previously, TUFLOW would produce ERROR 2846 if more than one GIS nesting command was specified. The order that the GIS layers are specified does not matter; TUFLOW will read in all GIS layers before processing the mesh. The exception to this is for level one nesting polygons where TUFLOW will adopt the last level one polygon that is found. Previously if more than one level one nesting polygon was found, ERROR 2825 was produced. This has been changed to WARNING 2825 and TUFLOW will override the previous level one polygon. 2.1.3 Support “Trigger 1D” for Variable Z Shape The 2023-03 Release supports a “Trigger 1D” option for 2d_vzsh (variable Z shapes) to commence elevation updates based on the water level at a 1D node. The “Trigger 1D PF” can be used to trigger the elevation updates based on the progress of a 1D PF (Pipe Failure) channel. 2.2 Sub-Grid Sampling (SGS) Changes Sub-Grid Sampling (SGS) stores and uses curves representing the sub 2D cell terrain data of the DEMs, TINs and Z shapes used to construct the model instead of each 2D cell and each 2D face having one elevation. This functionality was first introduced in the 2020-01 Release, the following changes to SGS functionality have been included in the 2023-03 Release. 2.2.1 SGS Default Changes There have been several changes to the SGS defaults (if SGS is enabled with the .tcf command “SGS == On”) since the 2020-10 Release. These changes are listed in Table 2.1 and Table 2.2, discussed in the referenced sections. Table 2.1: Changes in SGS Defaults Command 2020 Default 2023 Default Section SGS Approach == Method B Method C Section 2.2.2 SGS Depth Output == Exact Cell Average Section 7.5.3 of the 2020 Release Notes SGS Map Extent \\(\\langle\\)Full or Trim\\(\\rangle\\) == SGS Map Extent Full == h SGS Map Extent Trim == ALL Section 7.5.4 of the 2020 Release Notes SGS Material == ON OFF Section 2.2.4 Table 2.2: Changes in HR Output Defaults Command 2020 Default 2023 Default Section HR Interpolation Approach == Method A Method C Section 2.2.5 HR Thin Z Line Output Adjustment == OFF ON CELL SIDES Section 2.2.6 2.2.2 SGS Approach For the 2023-03 Release “SGS Approach == Method C” is the default setting if SGS is enabled (SGS == ON). Method C was introduced as beta functionality in the 2020-10-AB Build. The previous default “SGS Approach == Method B” processed elevations into elevation-volume curves (for cells) and elevation-flow area/width curves (cell faces) after reading each elevation dataset. The sampled SGS elevations were discarded after processing the dataset for memory efficiency. Method C retains the SGS elevations in memory throughout the pre-processing stage and performs the generation of the curves only at the end of the pre-processing of all elevation data. Whilst this can potentially use more memory (CPU RAM) the approach has considerable benefits in terms of preserving sub-grid elevation data at cells/faces partially affected by terrain data layers and allows TUFLOW to produce high-resolution mapping at the SGS sampling resolution. See Section 3.7.2 in the 2020 Release Notes for details on the SGS Approach Method C. 2.2.3 Setting SGS Sampling Frequency For the 2023-03 Release, when using the SGS Approach Method C (which is the default for Release 2023-03 – refer Section 2.2.1), there are now several ways of setting the SGS sampling frequency. For the 2020-10 Release when using SGS Method C, the SGS Sample Frequency had to be set using the .tcf command “SGS Sample Frequency == \\(\\langle\\)number of sample locations per face\\(\\rangle\\)”. For the 2023-03 Release, in addition to this command, it is also possible to alternatively set a sampling target distance using the new .tcf command: SGS Sample Target Distance == \\(\\langle\\)distance in metres or feet\\(\\rangle\\) TUFLOW requires an odd number of sample locations across a cell face to ensure the mid-point is a sample point. The sampling frequency is calculated as the TUFLOW cell size divided by the target distance then rounded as per Equation (2.1). \\[\\begin{equation} \\text{Sample Frequency} = \\frac{\\text{TUFLOW Cell Size}}{\\text{Target Distance}} + 1 \\tag{2.1} \\end{equation}\\] For example, for a 10m TUFLOW model with a target distance of 1m, the sampling frequency is 11. Even numbers are rounded up to the next highest odd number. The sampling frequency adopted is reported in the .tlf. If neither “SGS Sample Frequency ==” or “SGS Sample Target Distance ==” is set, a scan of the Geometry Control File (.tgc) is performed to find the minimum raster grid resolution used in “Read Grid Zpt ==” commands, and this is used as the sampling target distance to compute the sampling frequency. If there are no gridded elevation datasets, a default sampling frequency of 11 is used. In summary, there are four ways for the SGS Sample Frequency to be defined; in decreasing order of priority they are: “SGS Sample Frequency ==” command. “SGS Sample Target Distance ==” command. Target distance automatically based on the minimum grid elevation resolution in the .tgc. Default Sampling Frequency of 11 per face / 121 per cell. Note: the sampling frequency is capped at 31 by default to avoid long pre-processing times and high memory usage. In general, a sampling frequency smaller than 31 is sufficient for most natural water ways or artificial structures, and users may not benefit from applying a super fine sample distance against the model cell size. However, if required, this upper limit can be increased by using the following tcf command: SGS Max Sample Frequency == \\(\\langle\\)maximum frequency\\(\\rangle\\) Note, a hard limit of 127 per face (16,129 samples per cell) still applies. 2.2.4 SGS Materials For the 2023-03 Release the sub-grid sampling of materials (land-use) has been disabled. This functionality was included in the 2020-10 Release as beta functionality, see Section 3.7.3 of the 2020 Release Notes. Feedback and further testing indicates that additional development is required. Some significant issues have been identified including the large dynamic range in face depths over which the look-up table must be computed, the transition between sheet flow and channel flow, and the inclusion of the effects of eddy viscosity or sub-grid turbulence on the parallel flow analysis. The latter issue in particular needs further research to provide consistency between different cell sizes. This feature is planned to be reinstated for an update to the 2023-03 Release once further research and benchmarking is completed. 2.2.5 High Resolution Interpolation Approach For SGS Method C, the high resolution (HR) raster map output can be output at finer resolution than the 2D model size. It is important to note that this is interpolating cell centre / corners data across the cell. For the 2023-03 Release enhancements have been made to the interpolation approach. Note: High resolution raster outputs are only available for depth (d) and water level (h) output data types. For the 2020-10 Release this was beta functionality, see Section 3.7.4 of the 2020 Release Notes, and the only approach available is described below as “Method A”. For models with traditional hydrology inflows, “Method A” generally produced effective HR maps. However, for models with very shallow flows (such as direct rainfall models), this could produce HR outputs with interpolation artefacts, as illustrated in Figure 2.1. Figure 2.1: Linear Corner Interpolation for High Resolution Water Level at Steep Slope “HR Interpolation Approach== Method B” improves this by introducing sheet flow checks when interpolating. “HR Interpolation Approach == Method C” uses the sheet flow checks and applies a weighting based on the number of wet SGS sampled locations in the cell. Some example HR outputs for a model with direct rainfall and a very coarse 2D cell size are presented in Figure 2.2 to Figure 2.4. “HR Interpolation Approach == Method C” is the default for the 2023-03 Release. Figure 2.2: HR Interpolation Approach == Method A Figure 2.3: HR Interpolation Approach == Method B Figure 2.4: HR Interpolation Approach == Method C (new default) 2.2.6 High Resolution Thin Breaklines When applying thin breaklines only the cell side and cell corner elevations are modified. For models with thin breaklines and HR outputs, the presence of breaklines can be used to affect the HR interpolation. A new .tcf command has been introduced to control this: HR Thin Z Line Output Adjustment == OFF | {ON CELL SIDES} | ON ALIGNMENT The three options provided are: OFF – Thin breaklines do not affect the HR raster interpolation ON CELL SIDES – This prevents interpolation across cell sides that have thin breaklines. ON ALIGNMENT – The location of the breakline within the TUFLOW cell resolution is stored and stops interpolation occurring over this topographic barrier. “HR Thin Z Line Output Adjustment == ON CELL SIDES” is the default for the 2023-03 Release as this is consistent with the computational location which the topographic barrier is applied. Example outputs from a model with a thin breakline are shown in Figure 2.5 to Figure 2.7 for all three options. Figure 2.5: HR Thin Z Line Output Adjustment == OFF Figure 2.6: HR Thin Z Line Output Adjustment == ON CELL SIDES (new default) Figure 2.7: HR Thin Z Line Output Adjustment == ON ALIGNMENT 2.2.7 Parallel Processing for SGS initialisation As noted in Section 2.2.2, SGS Method C (the default if “SGS == On”) retains the SGS elevations in memory throughout the pre-processing stage and performs the generation of the curves only once at the end of the pre-processing. This is a computationally intense exercise, particularly for large models with small SGS sample distances. To speed up model initialisation, this has been configured to utilise multiple CPU cores. By default, all CPU threads will be used for final SGS elevation pre-processing unless the number of threads (-nt[thread count]) command line argument has been specified. For example, to run on 8 threads the command line argument “-nt8” would be used. There is no check for thread licensing used for pre-processing. If the number of threads specified in the command line argument exceeds the number of threads available all threads are used. See also computational and clock time updates in Section 7.8. 2.2.8 XF Files for SGS Method C In addition to the parallelisation of the final SGS elevation pre-processing (described in Section 2.2.7), XF files are now supported for SGS Method C. At the end of the .tgc reading, after all elevation datasets have been processed, an XF file is written if the “XF Files ==” command is set to on (default). The XF file is written to an “xf” folder which sits in the same location as the .tgc. To avoid re-processing when changes are made to .tgc data other than elevation (e.g. active cells, materials, soils, etc.), the XF file is not written with the same filename as the .tgc. Instead, the .xf will be prefixed by “hpc” or “qdt” for HPC and Quadtree simulations respectively and includes the nesting level, cell size. Any text set with the .tcf command “XF Files Include in Filename ==” is included. When reading the pre-processed SGS XF file, a check is done on the final SGS elevations, if these are consistent then the XF file is used. 2.3 Infiltration and Sub-Surface Flows 2.3.1 Overview The 2023-03 Release permits horizontal flow of the water within the cumulative infiltration layer. Up to 10 vertical layers are supported, each with horizontal advection and vertical filtration from above. Movement of water within the ground in the real world is complex. The functionality introduced in the 2023-03 Release is not intended to replace detailed groundwater modelling, but provides a functional mechanism by which: Catchment response for 2D direct rainfall (“rain on grid”) models can be better calibrated to available river flow data. Long-term catchment models can be constructed that offer some prediction of stream flows long after rainfall events. The accuracy of real-time flood forecasts can be improved by taking into account the drying and draining of catchments that has occurred since the last rainfall event. Sub-surface seepage can cause inundation, such as seepage under a levee bank through a porous layer (e.g., old gravel river course), resulting in flooding on the protected side of the levee. The basic concept is that of dividing the ground into vertical layers, each with a defined thickness (alternatively a z elevation for the bottom of the layer), soil type, and cumulative infiltration. The cumulative infiltration, combined with the porosity defined by the soil type, allows a theoretical “ground water elevation” (also known as a “water table”) to be computed within the layer as shown in Figure 2.8. Figure 2.8: Interflow Concept The vertical (or “convective”) flow of water from the surface water layer into the first (or top) ground water layer (also referred to as the interflow layer) is governed by the soil type infiltration model. The soil types in the top most layer must be one of those defined in Section 6.10 of the 2018 TUFLOW Manual. For layers below the first layer the vertical flow of water, \\(Q^{z}\\), is computed using a “convective” hydraulic conductivity (effectively the same concept as continuing loss): \\[\\begin{equation} Q^{z} = - kdxdy \\tag{2.2} \\end{equation}\\] Where: \\(k\\) is the convective hydraulic conductivity \\(dxdy\\) is the cell area This has required the addition of a new soil type “CO” for layers below the interflow layer. The horizontal advection of water from one cell to the next, \\(Q^{h}\\), is computed using the horizontal hydraulic conductivity of the soil and the horizontal gradient of a variable called the “ground water pressure level”: \\[\\begin{equation} Q^{h} = - k_{h}hp\\frac{de}{dx}dy \\tag{2.3} \\end{equation}\\] Where: \\(k_{h}\\) is the horizontal hydraulic conductivity of the soil (average of the left and right cells used) \\(h\\) is the physical depth of water in the upstream cell (i.e. the ground water elevation less the layer bottom elevation) \\(p\\) is the soil porosity \\(\\frac{de}{dx}\\) is the gradient of the “ground water pressure level” \\(dy\\) the width of the face. For cells that are “unsaturated” the “ground water pressure level” is exactly the ground water elevation within that layer. For cells that are fully saturated, the ground water pressure level is that of the cell in the next layer above (or the water surface elevation if the next layer above is the surface layer). For cells that are “nearly saturated” the ground water pressure level is transitioned between these two options. The threshold at which the transition begins is called the “ground water blending threshold” (refer Section 2.3.8), \\(\\phi\\). \\[\\begin{equation} \\xi = \\frac{\\frac{h}{dz} - \\phi}{(1 - \\phi)} \\tag{2.4} \\end{equation}\\] \\[\\begin{equation} e_{i} = (1 - \\xi)\\left( z_{i} + h_{i} \\right) + \\xi e_{i - 1} \\tag{2.5} \\end{equation}\\] \\[\\begin{equation} e_{0} = {WSE}_{surface} \\tag{2.6} \\end{equation}\\] Where: \\(h\\) is the depth of ground water in the cell \\(dz\\) the vertical thickness of the layer \\(z_{i}\\) the layer bottom elevation \\(e_{i}\\) the resulting ground water pressure level for the layer The layer ordering is such that the surface water layer is “0”, the interflow layer is “1”, and any additional ground water layers range from 2 to N, from top to bottom. If the sum of flows into a layer cell causes it to exceed its soil capacity, the excess is push upwards to the next layer. If this happens for the top-most interflow layer, the excess is pushed into the surface water layer as a “return flow”. This is to be expected in the creek beds but may also happen at the bottom of steep hills where the slope transitions from steep to shallow. Although the above theory appears complex, the implementation within a TUFLOW model is straight forward. The essential steps are: Read a soils (.tsoilf) data file from within the .tcf Define layer thicknesses and soil types in the .tgc Specify locations of groundwater boundaries Add any additional output data types int the .tcf These steps are explained in more detail in the following sections. 2.3.2 Soils File The soils file (.tsoilf) may now include a new column of data for the horizontal hydraulic conductivity of the soils. If omitted, or if all soils used in the model have zero horizontal hydraulic conductivity, then horizontal advection of water will not be considered in the model. Additionally, a new soil type “CO” is required for any layers below the first (i.e. top or interflow) layer. The data columns for CO soils are detailed in Table 2.3. Reading the .tsoilf file is the same as in previous Releases with the .tcf command “Read Soils File ==”. Table 2.3: .tsoilf Parameters Column No No Infiltration Green-Ampt Green-Ampt Horton Initial / Continuing Loss Convective 1 Soil ID Soil ID Soil ID Soil ID Soil ID Soil ID 2 NONE GA GA HO ILCL CO 3 USDA Soil Type (see Table 6-14) Suction (mm or inches) Initial Loss (mm or inches) Initial Loss (mm or inches) Hydraulic Conductivity (mm/h or in/h) 4 Initial Moisture (Fraction) Hydraulic Conductivity (mm/h or in/h) Initial Loss Rate (f0) (mm/h or in/h) Continuing Loss (mm/h or in/h) Porosity (Fraction) 5 Max Ponding Depth (m or ft) Porosity (Fraction) Final Loss Rate (fc) (mm/h or in/h) Porosity (Fraction) Initial Moisture (Fraction) 6 Horizontal Hydraulic Conductivity (mm/h or in/h) Initial Moisture (Fraction) Exponential Decay Rate (k) (h-1 ) Initial Moisture (Fraction) Horizontal Hydraulic Conductivity (mm/h or in/h) 7 Max Ponding Depth (m or ft) Porosity (Fraction) Horizontal Hydraulic Conductivity (mm/h or in/h) 8 Horizontal Hydraulic Conductivity (mm/h or in/h) Initial Moisture (Fraction) 9 Horizontal Hydraulic Conductivity (mm/h or in/h) 2.3.3 TGC Commands Setting Soil Type Setting the soil type for an interflow layer activates the given layer. For example, setting the soil type for interflow layers 1 and 2 will activate 2 vertical interflow layers: Set Soil Layer 1 == 1 ! soil ID of infiltration layer e.g. GA type Set Soil Layer 2 == 5 ! soil ID of a convective layer e.g. CO type Multiple layers can be set simultaneously (the below will activate 3 interflow layers): Set Soil Layer 1 == 1 Set Soil Layer 2,3 == 5 ! sets both layers 2 and 3 to Soil ID 5 This method also works for read GIS and GRID commands: Read GIS Soil Layer 1 == /path/to/file Read GRID Soil Layer 2 == /path/to/file A maximum of 10 vertical layers is permitted and a soil ID should be assigned for each active layer. For example, if interflow layer 2 is active, then soil IDs for layer 1 should be assigned. Note, if the layer number is not specified, it is assumed to be layer 1. Setting Vertical Layer Depths The depth (thickness) of each vertical interflow layer can be set using the following commands: [Set | Read GIS | Read GRID] Soil Thickness Layer N == [value | /path/to/file] [Set | Read GIS | Read GRID] Soil Base Elevation Layer N == [value | /path/to/file] If the soil layer thickness or base elevation is not set for a given layer, it is assumed to be infinite. The soil thickness sets the layer depth from the layer above and soil base elevation sets the absolute elevation of the bottom of the layer. If both methods are specified for a given grid cell, the highest of the two will be adopted. The input units should be in metres or feet. Setting Initial Conditions The initial water level in the interflow layers can also be set via the .tgc using the following commands: [Set | Read GIS | Read GRID] IGW Depth Layer N == [value | /path/to/file] [Set | Read GIS | Read GRID] IGW Level Layer N == [value | /path/to/file] “IGW Depth” is assumed to be the depth of water in the soil (water content divided by porosity). “IGW Level” is assumed to be the level of the water table in each layer. If both methods are specified for a given grid cell, the highest initial condition will be adopted. The input units should be in meters or feet. Note, the initial conditions do not automatically cascade into layers below (i.e. setting the initial water level in the top layer will not automatically set the layers below to be 100% saturated). Setting the initial conditions in the .tgc for any given grid cell will override the “Initial Moisture” parameter set in the .tsoilf. The difference between the methods is that the .tsoilf sets the initial moisture by soil type, whereas setting the initial conditions in the .tgc allows spatial distribution. If no initial conditions are set in the .tgc for a given grid cell, the initial conditions will be determined by the “Initial Moisture” defined in the .tsoilf. 2.3.3.1 Bug Fix For Soil Inputs with XF OFF Build 2023-03-AC fixes a bug when reading a soil layer input and using “XF OFF” (e.g. Read GRID Soil XF OFF == soil.tif). For previous 2023-03 releases, this would cause “ERROR 2579 - Unrecognised command after …” due to additional syntax checking that TUFLOW was undertaking for the new soil commands. 2.3.4 Boundaries At the edge of the active model, two boundary conditions are currently supported: Sealed boundary, no inflow or outflow; and Groundwater level vs time. To specify a groundwater level vs time boundary, a new “GT” type boundary line can be digitised in the 2d_bc file format. This is read into the boundary control file (.tbc) with the “Read GIS BC ==” command. The same groundwater level boundary applies to all vertical layers. If the specified groundwater level is below the elevation at the bottom of the layer, it is dry. If the specified groundwater level is above the elevation at the top of the layer, it is fully saturated. 2.3.5 Groundwater Map Outputs The previous soil layer output data types have been kept, but note that: IR (infiltration rate) will only be reported for the first (top) layer. Reported in mm/hr or in/hr. CI (cumulative infiltration) map output is restricted to models for which the value is indeed cumulative. Specifically, this means only models that have: A single vertical soil layer No horizontal movement of ground water No drying of the soil layer through negative rainfall (Soil Negative Rainfall Approach == None). This is the default approach. For these models the CI output is the “current” water content of the layer (in terms on mm/in of pure liquid), as no water is leaving the soil layer this also represents the cumulative infiltration value. Reported in mm or inches. However, when any of the three options (multiple vertical layers, horizontal movement or negative rainfall) can reduce the groundwater moisture the water content in the layer is no longer a “cumulative value” so output is not available. dGW (depth to groundwater) will be reported for all layers. It is the distance from the ground surface to the ground water level of the layer in question. Reported in m or ft. The new output variables are: GWd (groundwater depth), depth of water for each layer (is cumulative infiltration divided by porosity). Reported in m or ft. GWh (groundwater level), elevation of ground water surface (water table) for each layer. Reported in m or ft. In Build 2023-03-AB, ground water level (GWh) output will now report -99999 on a layer with undefined bed level. GWm (groundwater moisture), dimensionless number in range 0 - 1 representing “fraction full” for each layer. GWq (groundwater unit flow), vector data for the unit flows within each layer. Reported in m2/hr or ft2/hr. Build 2023-03-AB has changed groundwater unit flow units to m2/s or ft2/s. GWv (groundwater velocity), vector data for the velocity within each layer. Reported in m/hr or ft/hr. Build 2023-03-AB has changed groundwater velocity units to m/s or ft/s. 2.3.6 Groundwater Plot Outputs New plot output types have been added to record results from the interflow layers. The following types have been added: PO point: GWd (groundwater depth), depth of water for each layer (is cumulative infiltration divided by porosity), reported in m or ft. GWh (groundwater level), elevation of ground water surface (water table) for each layer, reported in m or ft. GWm (groundwater moisture), dimensionless number in range 0 - 1 representing “fraction full” for each layer. GWq (groundwater unit flow), unit flow magnitude within each layer, reported in m2/hr or ft2/hr. Build 2023-03-AB has changed groundwater unit flow units to m2/s or ft2/s. GWqu (groundwater unit flow u-component), unit flow u-component within each layer, reported in in m2/hr or ft2/hr. Build 2023-03-AB has changed groundwater unit flow units to m2/s or ft2/s. GWqv (groundwater unit flow v-component), unit flow v-component within each layer, reported in in m2/hr or ft2/hr. Build 2023-03-AB has changed groundwater unit flow units to m2/s or ft2/s. GWqa (groundwater unit flow angle), angle of unit flow vector within each layer. Reported in degrees clockwise from north (i.e. a compass bearing). CI (cumulative infiltration) represents the current water content of each layer (mm or in of pure water). This value may increase or decrease depending on the flows into and out of the cell. It is no longer a “cumulative value”. Reported in mm or in. PO line: GWQ (groundwater flow), total flow passing through the given line within each layer. The positive flow convention is left to right looking downstream (same as the ‘Q_’ PO type). Reported in m3/s or ft3/s. PO region: GWVol (groundwater volume), total volume of water within the polygon for each layer. Reported in m3 or ft3. 2.3.7 Interflow and Advection Dispersion Tracking of advection dispersion constituents when using interflow is supported when running HPC solver. Advection-dispersion is not yet supported in Quadtree. Refer to Section 2.5.3 for commands for setting initial concentrations for sub-surface layers. No dispersion is modelled in the sub-surface layers. 2.3.8 Groundwater Blend Threshold Described in Section 2.3.1, when a soil is nearly saturated, the level is transitioned from the level in the current layer to the layer above, as this avoids a sudden change in level as the soil reaches capacity. A “groundwater blend threshold” is used to control this, this threshold has a default value of 0.9, meaning that once a soil exceeds 90% of a soil capacity, the level starts to transition to the level in the layer above. This may be overridden with the .tcf command: GW Blend Threshold == &lt;float&gt; | {0.9} Note that its value must be in range 0 - 0.99. 2.3.9 Initial Moisture and Green-Ampt Infiltration The treatment of initial moisture with the 2023-03 Release is different to the 2020 Releases. For the 2020 Release, a soil capacity was calculated by subtracting the initial moisture fraction from the porosity. This was done to reduce the memory requirements by storing soil capacity instead of both porosity and initial moisture. For the interflow functionality, reducing porosity does not work as both porosity and initial moisture are required to allow a soil to drain correctly. For the 2023-03 Release, both soil initial moisture and porosity are stored. These approaches can produce different results when using the Green-Ampt method. If “Defaults == Pre 2023” is specified, then the previous approach is used. This is only valid if one vertical soil layer is specified. 2.3.10 Improvements in Reading Soil File (.tsoilf) Build 2023-03-AB changes the way that the .tsoilf is read to better handle blank or non-numeric values in columns. Prior to the 2023-03-AB build, TUFLOW would stop reading a line from the .tsoilf at the first column which did not contain numeric values (including blank or text data). This could mean that data in subsequent columns was ignored. For the 2023-03-AB build, each column is processed independently. Extra soil information is now output to the log file. 2.3.11 Bug fix for Infiltration and Advection Dispersion Build 2023-03-AC fixes a bug which could occur when using both soil infiltration and Advection-Dispersion and only affected the HPC solver. This issue could occur if the model has bounced, and this could cause a negative tracer concentration to be generated. This negative concentration could then propagate into the soil layers. The 2023-03-AC release prevents this from occurring and minor differences in models with soil infiltration and Advection-Dispersion may occur. No backwards compatibility is provided. 2.4 Modelling Bridge Structure in 2D 2.4.1 CFD Benchmarking Study A joint research study between the Queensland Department of Transport and Main Roads (DTMR) and TUFLOW regarding modelling bridge decks that are surcharged, under pressure flow or drowned out, as shown in Figure 2.9, is in progress. This work has involved 2D CFD modelling of a common deck and rails bridge geometry, full scale measurements of a similar bridge under flood, and 3D CFD modelling of the same. Current results have been published (Collecutt et al. 2022), though a brief summary is presented here. Figure 2.9: 2D CFD modelling of deck and rail bridge Numerous 2D CFD models indicated that a generalised form for loss coefficient vs downstream water level above the soffit of the deck, TW, was possible, shown in Figure 2.10 for the case where the under-deck height to bed, hb, was 4 times the deck thickness, T. Figure 2.10: Generalised loss coefficient from 2D CFD modelling of bridge deck and rails A full-scale bridge was gauged and the afflux recorded during a significant overtopping event in February 2022. 3D CFD models of the same bridge and surrounds were run, with reasonable agreement as shown in Figure 2.11. Further, the shape of the results appears very similar to that of the generalised 2D results shown in Figure 2.10. Figure 2.11: Full scale afflux measurements and 3D CFD model results for deck and rail bridge A layered loss model was implemented in TUFLOW HPC as per Section 2.4.2, and a 2D HPC model of the bridge and surrounds was run. The results, shown in Figure 2.12, were in excellent agreement with the measured data. Figure 2.12: TUFLOW HPC afflux results for deck and rail bridge using new 2d_bg layer 2.4.2 New Input Layer for Modelling Bridge Structure in 2D The 2023-03 Release introduces the new BG Shape input layer (2d_bg) to set up bridge structures in 2D domain. The new input layer is read in using the .tgc command “Read GIS BG Shape ==”. The new method is similar to the Method D layered flow constriction approach introduced in the 2020‑10 Release (Section 3.4.2 of the 2020 Release Notes), with the GIS layer attributes tidied up for easier user input. The three layers are now called the “pier layer”, the “deck layer” and the “rail layer” for clarity. The new attributes are: ID = Unique bridge ID. Option = Reserved for future use. Pier_pBlockage = The percentage blockage of the pier Layer. For example, enter ‘5’ for a blockage of 5%. Pier_FLC = Pier layer form loss coefficient. Deck_Soffit = The elevation of the bridge soffit (m or ft). Deck_Depth = The thickness of the bridge deck (m or ft). Deck_Width = The bridge width in the predominant direction of flow (m or ft). Deck_pBlockage = The percentage blockage of the deck layer. Enter ‘100’ for a solid bridge deck obstruction. Rail_Depth = The depth of the rail layer (m or ft). Rail_pBlockage: The percentage blockage of the rail layer. SuperS_FLC: The combined form loss coefficient for the deck and the rail layers. Two layers are treated as a single “super structure” layer in this new bridge method. SuperS_IPf: A factor to set the elevation of the inflection point (IP) at which the transition from pressure flow to drowned flow commences. The default value is 1.6. The 2d_bg layer adjusts the FLC value in the vertical as follows: \\[\\begin{equation} {FLC}_{total} = \\left( {FLC}_{pier} + {FLC}_{SuperS}\\frac{y_{SuperS}}{D_{IP}} \\right)\\frac{(y_{pier} + y_{SuperS})}{y_{total}} \\tag{2.7} \\end{equation}\\] With: \\[\\begin{equation} y_{SuperS,max} = D_{IP} \\tag{2.8} \\end{equation}\\] \\[\\begin{equation} y_{pier,max} = D_{peir} \\tag{2.9} \\end{equation}\\] Where: \\(y_{SuperS}\\) = Depth of water above the bridge soffit in the super structure layer. \\(D_{IP}\\) = Depth to the inflection point from the bridge soffit. \\(y_{pier}\\) = Depth of water in the pier layer. \\(D_{peir}\\) = Depth to the pier layer, i.e. the vertical distance from the bed level to the bridge soffit. \\(y_{total}\\) = Total depth of water from the bed to the water surface level The vertical distribution of the form loss coefficient has the following characteristics: Water level below the deck layer: The same result as the 2d_lfcsh approaches, i.e. a constant form loss based on that specified for the pier layer (\\({FLC}_{pier}\\)) is applied. Water level between the deck soffit and the inflection point: The FLC value is linearly increased from \\({FLC}_{pier}\\) to \\({FLC}_{pier}\\) + \\({FLC}_{SuperS}\\) (the combined form loss coefficient for the superstructure layer). The observations from the CFD and the field measurement indicate the inflection point is located around 1.6 times the bridge deck depth (\\(D_{Deck}\\)) above the bridge soffit. The “Inflection Depth” (\\(D_{IP}\\)) is assumed as: \\[\\begin{equation} D_{IP} = SuperS_{IPf}\\left( D_{Deck}{Blockage}_{Deck} + D_{Rail}{Blockage}_{Rail} \\right) \\tag{2.10} \\end{equation}\\] Note that the effect of partial blockage at the rail layer is considered by adding the rail layer depth (\\(D_{Rail}\\)) to the inflection depth proportionally based on the rail layer blockage (\\({Blockage}_{Rail}\\)). Above the inflection point the FLC gradually reduces with increasing depth (in a similar manner to the 2D Layered Flow Constrictions PORTION and METHOD C approaches), shown in Figure 2.13. This is to simulate the transition to drowned flow and tendency to zero energy losses with increasing depth over the bridge deck. Figure 2.13: 2D BG Shape Attributes and Vertical Distribution of Form Loss Coefficient Other key features of the BG layer are: The BG layer does not apply geometry updates. This not only offers simplicity, but also is a desirable option considering that the size of TIN polygons used to modify the bridge bed elevations are often different from the size of polygon used to select BG cell faces. For a line layer a “Deck_Width” value of zero sets the layer as a thin line. It selects one row of faces in the direction of flow, and the FLC value is applied to the faces unchanged. A “Deck_Width” value larger than zero sets the layer as a thick line that selects a whole cell, i.e. two faces in the direction of flow. The FLC values at the faces are divided by two. The wide line feature is not supported by the BG layer. Note, BG polygon shapes are recommended if more than 3 rows of faces must be selected. For a polygon layer, the “Deck_Width” defines the bridge width in the predominant direction of flow. This value is used to distribute the total FLC value to the selected faces, i.e.: \\[\\begin{equation} {FLC}_{face} = \\frac{FLC} {Deck\\_Width} * Cell\\ Size \\tag{2.11} \\end{equation}\\] This means users no longer need to convert the FLC value to “form loss per metre”, which is required by the 2D Layered Flow Constrictions polygons. Note: Build 2023-03-AB caps “Cell Size / Deck_Width” at 1. Previously, a face FLC larger than the original FLC was incorrectly applied when the model cell size is larger than the Deck_Width defined. The point only layer (2d_bg_pts) is also supported. This layer can be used to spatially vary the bridge soffit, the deck depth, and the rail depth. The attributes for this layer include: Deck_Soffit = The elevation of the bridge soffit (m or ft). Deck_Depth = The thickness of the bridge deck (m or ft). Rail_Depth = The depth of the rail layer (m or ft). R1 ~ R3: Reserved for future use. 2.4.3 Automatic Generation of Superstructure FLC Build 2023-03-AC implemented a new feature to automatically generate the superstructure FLC value based on the CFD benchmarking study. Blank BG FLC Approach == METHOD A With the command above, the blank superstructure FLC values will be calculated based on the ratio of the depth of the pier layer (\\(D_{Pier}\\) in the equations above) and the depth to the inflection point from the bridge soffit (\\(D_{IP}\\)). The CFD modelling was conduced using \\(D_{Pier}\\)/\\(D_{IP}\\) ratio of 2, 4 and 6. The FLC value is linearly interpolated within this range and capped at 0.42 and 0.2 outside this range as shown in the figure below. Figure 2.14: CFD benchmarking study of FLC vs \\(D_{Pier}\\)/\\(D_{IP}\\) ratio (h{B}/T in the oririnal paper) Please note the default Blank BG FLC Approach is “NONE”, i.e. Superstructure FLC must to be specified manually. The new approach is likely to become the default approach in the future releases. 2.4.4 Grouped Structure Output The new 2d_bg layer can be used with 2D plot output structure group outputs (2d_po ‘QS’ type) in the same manner as the 2D Layered FC Shape input (2d_lfcsh). 2.5 Advection Dispersion 2.5.1 HPC Support for Multiple Constituents Per Simulation When using the HPC solver it is now possible to run up to 20 advection-dispersion constituents in a single simulation. This is the same limit as when running advection-dispersion with the Classic solver. Prior to the 2023-03 Release if running advection-dispersion with HPC only a single constituent could be modelled. Advection-dispersion is currently not supported in the Quadtree module. 2.5.2 HPC Support for Constituent Settling and Decay For the 2023-03 Release the HPC solver supports the ability to model constituent settling and/or decay. This functionality is detailed in Section 4.6 of the TUFLOW AD Manual. 2.5.3 Layered Interflow - Advection Dispersion TGC Commands Initial concentrations can be set within the groundwater layers using the following .tgc commands (note, not done in the AD Control File): [Set | Read GIS | Read GRID] IGW Conc Layer N1,N2,..N Tracer M1,M2,..M == [value | /path/to/file] Where: N = The groundwater layer number (able to reference multiple in a single command) M = The tracer number (able to reference multiple in a single command) as ordered in the AD Global Database If a layer number is not referenced, it is assumed to apply to layer 1. Likewise, if a tracer number is not referenced it is assumed to apply to the first tracer. Note, the order that ‘Layer’ and ‘Tracer’ appear in the command does not matter (i.e. tracer numbers could be listed before layer numbers). 2.6 Non-Newtonian Mixing Non-Newtonian viscosity formulation was introduced, for a uniform fluid, in the 2020-01-AA Release. This has now been extended to consider mixing of the non-Newtonian fluid with water. To implement this, a passive tracer must be included in the model, requiring a license for the advection-dispersion (AD) module. The AD setup is the same as detailed in the TUFLOW AD Manual. More than one tracer field is permissible, but the non-Newtonian mixing module will assume that the first tracer represents the fraction of non-Newtonian fluid, in the range 0 to 1. Care must be taken to ensure that boundary data and initialisation commands strictly adhere to this range. Where the tracer value is 1, the properties of the fluid will be exactly the non-Newtonian properties as specified with Viscosity Coefficients command. For tracer values between 0 and 1, the non-Newtonian properties are transitioned using power-law equations for the three variables in the Hershel-Bulkley equation. \\[\\begin{equation} \\xi = a^{m} \\tag{2.12} \\end{equation}\\] \\[\\begin{equation} \\rho&#39; = (1 - a)\\rho_{w} + a\\rho_{NN} \\tag{2.13} \\end{equation}\\] \\[\\begin{equation} K&#39; = (1 - a^{m})\\nu_{w} + a^{m} K_{NN} \\tag{2.14} \\end{equation}\\] \\[\\begin{equation} n&#39; = (1 - a^{o})1.0 + a^{o} n_{NN} \\tag{2.15} \\end{equation}\\] \\[\\begin{equation} \\tau_{0}&#39; = a^{p}\\tau_{0,NN} \\tag{2.16} \\end{equation}\\] Where: \\(a\\) = the tracer value (0~1) \\(m\\) = the non-Newtonian mixing exponent for the viscosity parameter \\(o\\) = the non-Newtonian mixing exponent for the power law parameter \\(p\\) = the non-Newtonian mixing exponent for the yield stress \\(\\rho\\) = density of fluid (kg/m3) \\(\\nu\\) = kinematic viscosity (m2/s) \\(K\\) = the Hershel-Bulkley viscosity parameter (Pa sn) \\(n\\) = the Hershel-Bulkley power law exponent \\(\\tau_{0}\\) = the material yield stress (Pa) and subscripts \\(w\\) denotes water, \\(NN\\) denotes pure non-Newtonian fluid. In the 2023-03-AA and 2023-03-AB releases, only one non-Newtonian mixing exponent was allowed for. The 2023-03-AC release allows for three mixing exponents m, o, p, to be specified. Alternative, if only one mixing exponent is specified, that value is used for all three exponents. The bed fraction and 2D viscosity are computed using the non-Newtonian method with the blended parameters The bed friction is then limited to be no less than that predicted from Manning’s equation, and the 2D viscosity is limited to be no less that that predicted from the Wu viscosity formulation with 3D and 2D coefficients of 7 and 0 respectively. To utilise non-Newtonian mixing in a model, the following is required: Select the non-Newtonian viscosity formulation and specify the coefficients for pure non-Newtonian fluid: Viscosity Formulation == Non-Newtonian Viscosity Coefficients == k, n, muLow, muHigh, tau0 Include a passive tracer as per standard AD setup (refer to the TUFLOW AD Manual), making sure boundary data and initialisation are scaled in range 0 to 1. Specify the mixing exponents, m, o, and p to be used: Non-Newtonian Mixing Exponent == &lt;float&gt; | {0} ! used for all three of m, o, p exponents Non-Newtonian Mixing Exponent == &lt;float&gt;, &lt;float&gt;, &lt;float&gt; | {0, 0, 0} ! m, o, p exponents Note that if the non-Newtonian mixing exponent is not specified it defaults to zero which turns the mixing formulation off, and all fluid in the model will be treated as non-Newtonian regardless of tracer value. 2.7 Minor Enhancements and Bug Fixes 2.7.1 Fix to Memory Efficient Quadtree Meshing Algorithm The 2023-03 Release fixes a bug that could occur when using the .qcf command: Quadtree Mesh Processing Method == Memory Efficient Previously, when there were barely overlapping hidden domains (generated as part of the meshing algorithm) that only just overlapped by one or two cells in the top left corner, sometimes the order of the domains would cause cells to be deactivated incorrectly. This would cause holes in the final generated quadtree mesh. 2.7.2 Duplicate Material IDs When reading in materials files, in either .tmf or .csv, the 2023-03 Release handles duplicate material IDs differently. For the 2023-03 Release duplicate material IDs will now override previous values. This includes if the material ID is contained in the same material file or different material file. Overwriting duplicate data is more consistent with other processing in TUFLOW. WARNING 2564 is issued each time a duplicate ID is encountered. Previously if a duplicate material ID was found, it would be discarded with WARNING 2481. 2.7.3 Duplicate Soil IDs Similar to the duplicate material ID change above, when reading soils files (.tsoilf) duplicate soil IDs will now override previous values in the 2023-03 Release. This includes if the soil ID is contained in the same soil file or different soil file. Overwriting duplicate data is more consistent with other processing in TUFLOW. WARNING 2500 is issued each time a duplicate ID is encountered. 2.7.4 Check added for valid Non-Newtonian Coefficients A check has been added if Non-Newtonian formulation has been specified without valid Non-Newtonian coefficients. For build 2023-03-AA onwards ERROR 2572 will be generated if no or invalid coefficients have been specified. 2.8 Minor Enhancements and Bug Fixes for 2023-03-AB 2.8.1 Bug Fix to HR Breakline Adjustment with Output Zone Build 2023-03-AB fixes a memory allocation issue when “HR Thin Z Line Output Adjustment == ON ALIGNMENT” are used in conjunction with Output Zones. Previously, this could cause the simulation to crash without error. 2.8.2 Read GIS / GRID Soil Layer Accepts Multiple Layer Numbers Build 2023-03-AB accepts multiple layer numbers in the GIS / GRID command within the TGC, e.g: Read GIS Soil Layer 1, 2 == gis\\2d_soil_001.gpkg 2.8.3 Un-Deprecated GWD and GWL Commands Build 2023-03-AB un-deprecates the GWD (groundwater depth) and GWL (groundwater level) commands in the TGC which were originally deprecated in favour of the newer “Soil Thickness” and “Soil Base Elevation” commands. However, to conserve backward compatibility, these commands have been un-deprecated when not using the interflow functionality. 2.8.4 Bug Fix HPC GWQ PO Units Build 2023-03-AB fixes the units output from HPC for groundwater flow (line) which was reporting in mm3/s rather than m3/s. Quadtree was correctly reporting in m3/s. 2.8.5 Bug Fix for Ground Water Outputs Build 2023-03-AB fixes an issue which would cause advection-dispersion outputs to be written for groundwater layers if advection-dispersion was being modelled without soils. 2.8.6 Bug Fix for Infiltration Outputs in Classic Build 2023-03-AB fixes an issue where infiltration outputs (CI and IR) were being suppressed when running TUFLOW Classic. For the 2023-03-AA Build, WARNING 2587 was issued and these data types not output. This did not affect the infiltration computations. 2.8.7 Bug Fix for HPC Breakline Memory Release Build 2023-03-AB correctly releases memory when running TUFLOW HPC at the end of the simulation. Previously when running multiple simulations through an external 1D engine, ERROR 3544 could be generated on the second simulation. 2.8.8 Infiltration When No Soil Capacity and Infinite Depth Soil When a soil has an initial moisture fraction greater than the soil porosity (i.e. the soil capacity is zero) TUFLOW issues WARNING 2508. For builds prior to 2023-03-AB, when no soil thickness or soil base elevation is specified (i.e. soil thickness is infinite) and the soil capacity is zero, infiltration occurs despite WARNING 2508 being generated. For build 2023-03-AB this has been fixed so that no infiltration occurs – consistent with the warning message. 2.9 Minor Enhancements and Bug Fixes for 2023-03-AC 2.9.1 Bug Fix to Default SGS Elevation Build 2023-03-AC fixes an issue that SGS bed elevation is set to 0m if Set Zpts command is not used. This means the check message “ERROR 2206 - ZH value not initialised (exceeds 99998m)” was not triggered correctly in SGS models. Build 2023-03-AC now initialise SGS elevation as 99999m, just like the non-SGS model for consistency. 2.9.2 Bug Fix to Quadtree Clip Region Build 2023-03-AC fixes an issue that clip regions are ignored for Read GRID Zpts command. This issue happened to model with multiple clip regions. If some of the clip regions are located outside the model domain, or the quadtree sub-domain(s), the entire clip region file was ignored. Build 2023-03-AC only skips those clip regions outside the model domain, and still applies the clip regions located inside the model domain. 2.9.3 Bug Fix to Read TIN Command in HPC Model Build 2023-03-AC fixes an issue that TIN Angles command wasn’t read before the TINs were created in HPC models. This could cause inconsistency between the TINs created by Classic and HPC models. 2.9.4 Bug Fix Quadtree 2d_zsh Snapped to Code Build 2023-03-AC fixes an issue that could cause TUFLOW to exit uncleanly. This was caused when a 2d_zsh (or similar e.g. 2d_lfcsh) was snapped along the 2d_code polygon. This bug only affected Quadtree models. References "],["OneDSolv-1.html", "Section 3 1D Solver - ESTRY 3.1 Arch Bridge 3.2 Ability to Model Time Lag in Virtual Pipes 3.3 Enhancement to Adverse Slope Culvert 3.4 Improvement to Structure Flow Level Options 3.5 Minor Enhancements and Bug Fixes 3.6 Minor Enhancements and Bug Fixes for 2023-03-AB 3.7 Minor Enhancements and Bug Fixes for 2023-03-AC", " Section 3 1D Solver - ESTRY 3.1 Arch Bridge The 2023-03 Release includes support for arch bridges as 1D channels. The approach is based on the ‘Afflux at Arch Bridges’ (HR Wallingford 1988). Arch bridges are defined in the 1d_nwk layer as a “BArch” type. The 1d_nwk attributes specific to an arch bridge are outlined below in Table 3.1. The remaining 1d_nwk attributes are consistent with other bridge channels. Table 3.1: Arch Bridges 1D Model Network (1d_nwk) Attribute Descriptions No.  Default GIS Attribute Name Description Type 2 Type “BArch” Char (36) 11 Inlet_type Relative path to arch properties .csv file Char (4) 14 Width Optional skew parameter Char (1) 15 Height Optional calibration coefficient Char (1) 17 HConF Discharge coefficient for orifice flow - use negative value to switch on. Float (15) 19 EntryC Lower transition distance for orifice flow Float (15) 20 ExitC Upper transition distance for orifice flow Float (15) The .csv for the arch properties should contain the columns outlined in Table 3.2. Table 3.2: Arch Bridge Properties .csv Column Description 1 Start chainage for arch opening 2 End chainage for arch opening 3 Springing level 4 Soffit level An example of the 1d_nwk attributes and “Inlet_type” .csv is shown in Figure 3.1. Figure 3.1: Example of 1d_nwk Attibutes and Inlet Type .csv. 3.1.1 Arch Bridge Editor An arch bridge creator and editor tool has been developed for the QGIS TUFLOW Plugin, shown in Figure 3.2. This tool is available from the TUFLOW Plugin Version 3.7. The documentation and examples for this tool can be found at the following TUFLOW Wiki page: https://wiki.tuflow.com/QGIS_TUFLOW_Arch_Bridge_Editor Any and all feedback is welcome and can be addressed to support@tuflow.com. Figure 3.2: QGIS TUFLOW Plugin Arch Bridge Editor 3.1.2 Bug Fix with Modelling Multiple Arch Bridges Build 2023-03-AB fixes a bug that occurred when using multiple arch bridges in the same model. This could cause either a ‘Should not be here’ error message or sometimes no error message, and the arch bridge curves would be applied incorrectly. This could occur when reading in multiple arch bridges in the same 1d_nwk layer or using multiple 1d_nwk layers. If using the ‘BArch’ type, please update to the 2023-03-AB release. 3.1.3 Arch Bridge Error Message Number Assignment Build 2023-03-AB correctly assigns error numbers to the CHECK/WARNING/ERROR messages produced when pre-processing arch bridge inputs. Previously, these may have been reported as ‘ERROR XXXX’. 3.2 Ability to Model Time Lag in Virtual Pipes Build 2023-03-AB introduces the ability to lag virtual pipe flows from the inlet to the outlet. Two additional attributes are required, and these are output in empty files written with the 2023-03-AB version of TUFLOW. These additional 1d_pit attributes are described in Table 3.3 below. This data is input on the inlets (VPI). Two approaches are available for lagging flows, these are “Shift” and “Decay”. For the shift method, the outflow is lagged shifted by the lag value time, but is otherwise unchanged. The decay method is based on exponential filtering of the inflow. A “current internal volume” is tracked: \\[\\begin{equation} Q(T) = \\int_{0}^{T} [\\dot{Q}_{in}\\,(t)-\\dot{Q}_{out}\\,(t)]dt \\tag{3.1} \\end{equation}\\] The outflow rate is computed from the internal volume and the time constant (the Lag_Value attribute): \\[\\begin{equation} \\dot{Q}_{out}\\,(t) = \\frac{Q(t)}{Lag\\_Value} \\tag{3.2} \\end{equation}\\] Figure 3.3 below shows the lag approaches applied with a lag value of 60 seconds which is input as 0.0167 hours. Figure 3.3: Virtual Pipe Lag Methods All pits with the same VP Network ID (i.e. form a local network) must use the same approach and Lag_Value. Table 3.3: Additional Virtual Pipe Lag (1d_pit) Attribute Descriptions No.  Default GIS Attribute Name Description Type 12 Lag_Approach Sets the lag approach, as described above “None” or Blank - no lag is applied “Shift” – Shift method applied “Decay” – Decay method applied Char (8) 13 Lag_Value Lag value in hours. Float 3.3 Enhancement to Adverse Slope Culvert Build 2023-03-AC includes an enhancement to adverse slope culvert flux calculation. Prior to 2023-03-AC, significant exit loss could be applied at the exit of an adverse slope culvert if the outlet node is dry or close to dry. This is caused by the mis-representation exit flow area and exit velocity. A fix has been introduced in the new Culvert Flow approach: Culvert Flow == Method G Please note that ‘Method E’ is still the default approach in build 2023-03-AC, but ‘Method G’ is likely be the default in the future releases. 3.4 Improvement to Structure Flow Level Options Build 2023-03-AC includes a new option to use energy level at upstream node and water level at downstream node of 1d structures for flux calculation. This option can be applied globally using the .ecf command: Structure Flow Levels == ENERGY UPSTREAM Alternatively it can be changed individually with “EH” flag in the 1d_nwk “Type” attribute. The default option is “Energy”, i.e. using energy levels at both the upstream and the downstream nodes. This approach is applicable to 1d weirs, spillways, gates and dam failure channels. 3.5 Minor Enhancements and Bug Fixes The 2023-03 Release includes a range of minor enhancements and bug fixes to the 1D solver. 3.5.1 Unused Manning’s n Value Set to Zero in nwk_C Check File and .eof The 2023-03 Release will now show a Manning’s n value of zero in the nwk_C check file and the ESTRY Output File (.eof) if it’s not being used by TUFLOW. Previously if a user had specified a Manning’s n value for a channel type that doesn’t use it (e.g. weirs, bridges), this input value would be shown in some of the output files. This change doesn’t affect any of the computations. 3.5.2 Fixes to Write Check Files [Exclude | Include | None | ALL] == [OFF] The 2023-03 Release fixes the optional, additional commands to the ESTRY Control File (.ecf) command: Write Check Files [Exclude | Include | None | ALL] == \\(\\langle\\)file_path\\(\\rangle\\) | \\(\\langle\\)check_type\\(\\rangle\\) | OFF Previously, adding the keywords ‘Exclude’, ‘Include’, ‘None’, and ‘All’ to the command or setting the command to ‘OFF’ was not working. Adding these keywords will override any settings from the same command specified in the .tcf that affect ESTRY check files. 3.5.3 Pit_A Check File Incorrectly Reporting Width The pit_A check file now correctly reports pit width for ‘Q’ type pits in the 2023-03 Release. This change doesn’t affect any of the computations. 3.5.4 Pit_A Check File Increased Type Attribute Length The 2023-03 Release increases the length of the attribute ‘Type’ in the pit_A check file to eight, which was previously restricted to four. 3.5.5 Incorrect ‘B’ Type Bridge Form Loss Reported in the .eof The 2023-03 Release fixes the form loss reporting in the .eof for ‘B’ type bridges. Previously this could be reported out of order if there were multiple ‘B’ bridges. This change doesn’t affect any of the computations. 3.5.6 Pump Inverts Reported in the .eof The 2023-03 Release now correctly reports pump inverts in the .eof. 3.5.7 1D Pump Point Objects Now Produce ERROR 1438 The 2023-03 Release will produce ERROR 1438 when a point object is used as a 1D pump. Previously TUFLOW would ignore this object. 3.5.8 Pump Curves No Long Trigger ERROR 1092 and ERROR 1093 The 2023-03 Release no longer generates ERROR 1092 and ERROR 1093 when using pump curves in the pit inlet database. Previously these errors would occur if no width or area was specified for the pump curves (these attributes are not required for pumps). 3.5.9 ERROR 2056 Incorrectly Triggering The 2023-03 Release fixes a bug that could incorrectly trigger ERROR 2056 when an inlet pit with an SX connection was located almost exactly on the 2D domain boundary. 3.5.10 WARNING 2039 Counts All Ignored SX Pit Connections WARNING 2039, which reports the number of ignored pit/node SX connections, will now include SX pit connections that are located outside the 2D domain. Previously this warning message would only report the number of ignored pit SX connections that were located within the 2D domain, but not situated in an active 2D cell. 3.5.11 1D Operable Structures Linked to 2D Water Level (H2D) Updating on Map Update Interval The 2023-03 Release fixes an issue with operable structures that were linked to 2D water levels using the H2D variable type in the .toc. Previously, the operable structure would only update and respond to changes in water level at the map output interval (which can be longer than desired). For the 2023-03 Release, the water levels will update at each timestep. 3.5.12 Linking 1D Operable Structures to 2D PO Points Not Functional as Described The 2018 TUFLOW Manual describes an option to base operations on the results from a 2d_po point identifier, rather than coordinates. This functionality now works as described. Previously this would cause an error to be reported. 3.5.13 Bug Fix to Invert Levels used in PF Channel Flow Calculation The 2023-03 Release fixes a bug that could apply incorrect channel inverts for the PF channel flow calculation. Previously, the 1D node inverts were used to determine whether the PF channel was submerged or unsubmerged. This could cause flow calculation issues when the upstream and the downstream nodes were snapped to another 1D channel with lower inverts. As of the 2023-03 Release, the PF channel inverts are now correctly applied. 3.5.14 ERROR 1261 Incorrectly Triggering for 1D PF/DF channels The 2023-03 Release fixes a bug that could incorrectly trigger ERROR 1261 when the Manning’s n (“n_nF_Cd” attribute) is set as zero for 1D PF/DF channels. The 1D PF/DF channels do not require Manning’s n in their hydraulic calculation. 3.5.15 Enhancement and Bug Fix for PF/DF Channel Check Files The 2023-03 Release fixes a bug in which the information reported by the nwk_C check file didn’t match the input attributes in the 1d_nwk file. The 2023-03 Release will also report the weir factor (Cd) and weir submergence factor (Csf) applied during the simulation to the _TSL_P result file. The bottom width of the DF channel cross-section will be reported in the _O.csv file for checking purpose. 3.5.16 Setting Initial State of 1D DF Channel The 2023-03 Release implemented two .toc commands to set the initial breach status of a 1D DF channel: Depth Breached == \\(\\langle\\)initial breach depth in metres or feet\\(\\rangle\\) Top Width Breached == \\(\\langle\\)initial breach width in metres or feet\\(\\rangle\\) Previously, a DF channel always must start from zero breach depth and width. 3.5.17 WARNING Message for Using Zero Pump Capacity When pump capacity is set to zero using the “Pump Capacity ==” command, the “Pump Shutdown Speed ==” will be also set as zero. This does not turn off a pump that is already operating. The 2023-03 Release produces WARNING 1434 to notify users. The “Pump Operation == OFF” command should be used to turn off a pump completely. 3.5.18 Enhancement Reducing Memory Usage for Operational Channels For operational control channels, the 2023-03 Release determines the number of operational channels in the model for memory allocation. Previous Releases allowed for up to 1,000 operational channels, meaning models with less than this will now use less memory. The 2020-10-AE build of TUFLOW allowed this maximum to be set with the .tcf command: Maximum Operational Controls == \\(\\langle\\)number of operational channels/control definitions\\(\\rangle\\) This command is no longer required and should be removed from the .ecf. If this command is included, it will be ignored. 3.5.19 WARNING/ERROR Message for Using Wrong GIS Type in 1d_nwk The 2023-03 Release produces WARNING/ERROR 2073 if wrong object type is used in 1d_nwk GIS layer to notify users. Only point, line and polyline objects are supported by TUFLOW input. 3.5.20 ERROR Message for Using Bridge Flow == Method A in Structure Routines == 2013 (Default) “Bridge Flow == Method A” is only supported in “Structure Routines == ORIGINAL”. The 2023-03 Release produces ERROR 1442 if “Bridge Flow == Method A” is used in “Structure Routines == 2013”, which replaces the “Should not be here [conchn_2_B_1]” message. 3.5.21 Bug fix for ERROR 1025 Fixes bug for models with ERROR 1025, which stopped the simulation with message “ERRORS found in 1D input data”. However, the ERROR message was not correctly output to the log or messages layer. 3.5.22 Bug fix for WARNING 2073 Fixes a bug that could spuriously report WARNING 2073 (Object ignored) for points or lines when a pit search distance was used. The points / lines were being read correctly; the message was spurious. 3.6 Minor Enhancements and Bug Fixes for 2023-03-AB 3.6.1 Operational Channel Memory Allocation Error Build 2023-03-AB fixes an issue where memory for the operational channels was not correctly allocated in some circumstances leading to a crash in the model. 3.6.2 Operational Channels Handle Multiple AND or OR Statements on Same Line 2023-03-AB fixes a bug where operational channels did not work correctly if the logic included multiple AND statements or multiple OR statements on the same line. 3.6.3 Bug Fix for Virtual Pipe Model Not Writing Output Build 2023-03-AB fixes an issue in HPC simulation with virtual pipes (VP) but no other 1D elements. This caused the 1D results files not to be written at the end of the simulation. 3.6.4 Bug Fix for WLL Should Not Be Here Build 2023-03-AB fixes an issue with 1d_wll that cross multiple channels, this could occasionally cause a “Should not be here [no_in]” to be issued and the simulation to be halted in pre-processing. 3.7 Minor Enhancements and Bug Fixes for 2023-03-AC 3.7.1 Bug Fix to VPO Connected to 1d Channel Build 2023-03-AC fixes an issue that VPO does not discharge water to 1d channel even if the VPO is snapped to the 1d channel node. Prior to build 2023-03-AC, any VPO outside the active 2d domain has been ignored. The 2d cells overlapping with 1d channels are often disabled (which is the correct configuration). This means the VPO located inside such deactivated 2d domain was not used in the simulation. Build 2023-03-AC now use all VPOs in the virtual pipe flow calculation even if they’re outside the active 2d domain. Note that this could cause difference in simulation results for models that have intentionally put VPOs outside the active 2d domain. “CHECK 2435 - Virtual Pit Inlet/Outlet outside active 2D domain” message is now generated if any VPO is located outside the active 2d domain. 3.7.2 Bug Fix to Water Levek Lines (WLL) when Virtual Pipes are Used Build 2023-03-AC fixes an issue that Water Level Lines (WLL) are not generated correctly when virtual pipes are also used in the model. References "],["TwoDSolv-1.html", "Section 4 2D Solvers - Classic/HPC 4.1 Overview 4.2 2D HPC Weir Flow Approach 4.3 Support for Record Gauge Data in HPC 4.4 Support for Automatic Initial Water Level in Quadtree 4.5 Support for Long Profiles in HPC 4.6 Increase in Maximum CPU Threads 4.7 Minor Enhancements and Bug Fixes 4.8 Minor Enhancements and Bug Fixes 2023-03-AB", " Section 4 2D Solvers - Classic/HPC 4.1 Overview There are no changes in Release 2023-03 to the core 2D Classic solver, however, an update to the Fortran Compiler may mean very slight differences compared to the 2020-10 builds. The new features described in the sections below apply to the 2D HPC solver. 4.2 2D HPC Weir Flow Approach Where flow in the 2D domain becomes upstream controlled, TUFLOW HPC triggers a weir flow approximation by adjusting the water level gradient. The adjustment was originally calibrated to match the broad-crested weir formula. The 2023-03 Release now supports applying the full weir equation in the 2D domain based on the advanced weir equation (4.1). \\[\\begin{equation} Q = {\\frac{2}{3}C_{f}C_{d}C_{sf}W\\sqrt{2g}H_u^{Ex}} \\tag{4.1} \\end{equation}\\] \\[\\begin{equation} C_{sf} = (1-\\frac{H_{u}}{h_{d}}^{a})^{b} \\tag{4.2} \\end{equation}\\] Where: \\(Q\\) = Flow over the weir face (m^{3}/s or ft^{3}/s). \\(C_{f}\\) = Weir calibration factor. Cf can be either changed globally using the “Set WRF” command, or adjusted locally using the “Read GIS WRF” feature. The default value is 1.0. \\(C_{d}\\) = Weir coefficient. The default is 0.577. \\(C_{sf}\\) = Weir submergence factor based on the Villemonte equation. \\(W\\) = Flow width. For 2D weir approach, this is the length of the weir face (m or ft). \\(H_{u}\\) = Upstream water surface or energy depth relative to the weir invert (m or ft). Can be set by the “HPC Weir Approach” command below. \\(Ex\\) = Weir flow equation exponent. The default value is 1.5. \\(h_{d}\\) = Downstream water surface relative to the weir invert (m or ft). \\(a, b\\) = Exponents used in the Villemonte equation. The default values are 8.55 and 0.556. In the 2023-03 Release, this feature is turned on by default, but can be changed using the following .tcf command: HPC Weir Approach == Method A | Method B | {Method B Energy} “Method A” is the previous method that applies the water level gradient limiter only. “Method B” applies the weir equation and uses the upstream water level above the weir invert as Hu. “Method B Energy” is the new default approach. It applies the weir equation and uses the upstream energy level above the weir invert as Hu. The default coefficients (Cd, Ex, a and b) are based on the parameters used for a Broad-Crested Weir. The following .tcf commands can be used to change them: HPC Thin Weir Parameters == Cd, Ex, a, b HPC Thick Weir Parameters == Cd, Ex, a, b 4.3 Support for Record Gauge Data in HPC The 2023-03 Release adds support for gauge objects in HPC (and Quadtree) which corresponds to the following command in the .tgc and ‘G_’ PO types: Read GIS Objects RECORD GAUGE DATA == \\(\\langle\\)gis_layer\\(\\rangle\\) This functionality is documented in Section 9.8.1 of the 2018 TUFLOW Manual. 4.4 Support for Automatic Initial Water Level in Quadtree The 2023-03 Release adds support for an automatic initial water level (IWL) in Quadtree (previously only available in Classic/HPC). This is implemented using the .tcf command “Set IWL == Auto” and is documented in Section 7.7.1.3 of the 2018 TUFLOW Manual. 4.5 Support for Long Profiles in HPC The 2023-03 Release adds support for long profiles (2d_lp) in HPC and Quadtree. Note: the long profile line processing in Quadtree can sometimes select slightly different cells and results can differ from HPC slightly, even if the 2D results are identical. 4.6 Increase in Maximum CPU Threads The 2023-03 Release increases the maximum number of CPU threads for HPC and Quadtree simulations from 16 to 64. The number of CPU threads can be changed using the “-nt” command line option. If more than the maximum number of CPU threads are requested, ERROR 2485 is reported and the simulation halts. For prior builds this could cause an unrelated error to occur during model initialisation. Note: a modern GPU is likely to provide much faster simulation times than CPU even with lots of CPU cores, a RTX 4080 GPU has almost 10,000 CUDA cores and a RTX 4090 has over 16,000! 4.7 Minor Enhancements and Bug Fixes The 2023-03 Release includes a range of minor enhancements and bug fixes to the 2D solver. 4.7.1 Limiting Manning’s n for Wu Turbulence Calculation When using the Wu turbulence formulation, the υ_3D term has the Manning’s n as a multiplier, the higher the Manning’s n, the higher the turbulence term. Since the timestep used in HPC and Quadtree is dependent on the turbulence, high Manning’s n values, particularly in deep water, can control the timestep. As detailed in Section 5.2.5 of the 2020 Release Notes, from build 2020-10-AB it is possible to set the upper limit for the Manning’s n value used in the turbulence calculation when using the Wu formulation. This only effects the Wu turbulence calculation; the specified Manning’s n is still used for the bed friction term. To specify an upper Manning’s n limit, a third value can be entered in the Viscosity Coefficients command: Viscosity Coefficient == \\(\\langle\\)C3D, C2D, Upper Limiting n\\(\\rangle\\) For the 2023-03 Release the default limiting Manning’s n value is 0.1. For backward compatibility with the 2020 Release this should be set to a 99. For example, to use the default Wu coefficients, with the 2020 defaults of 7 and 0 and no upper limiting Manning’s n value for turbulence the .tcf command would be: Viscosity Coefficient == 7, 0, 99 If any Manning’s n values are specified (fixed or depth-varying Manning’s n) that exceeds the upper limit, WARNING 2583 is issued. 4.7.2 TIN Clip Layers in Quadtree The 2023-03 Release fixes polygon clip layers in Quadtree when reading in TINs using “Read TIN Zpts == \\(\\langle\\)tin\\(\\rangle\\) | \\(\\langle\\)clip_layer\\(\\rangle\\)”. Previously, the clip layer was not being applied and the entire TIN was used. 4.7.3 Change to Treatment of non-Polygon Objects in Geometry Trim Layers The 2023-03 Release changes how invalid clip layer objects are processed when trimming input grid layers (such as using “Read GRID Zpts == \\(\\langle\\)grid\\(\\rangle\\) | \\(\\langle\\)trim.shp\\(\\rangle\\)”). Previously when an invalid object was encountered (e.g., point, polyline, or null object) the entire grid was processed. The behaviour has been changed to be the opposite; invalid objects will now cause TUFLOW to not read in any of the input grid. The previous behaviour could sometimes read in the entire input grid if the clip polygon layer had a null object present that the user was unaware of. Note: For models using SGS, the new behaviour has always been the default, and this has only changed for non-SGS models. 4.7.4 WARNING 3522 Message Text Updated The 2023-03 Release updates the text in WARNING 3522 (SGS parameters are different from XF file) to reference the specific XF file that produced the warning. 4.7.5 New Thick Breakline Face Selection for Quadtree Model The 2023-03 Release improves the method to select cell faces when thick breaklines are used. Previously, refined cell faces might not be raised at changes in mesh resolution, shown in Figure 4.1. The 2023-03 Release ensures all the cell faces surrounding a raised cell are selected by thick breaklines, shown in Figure 4.2, as this is required for the new HPC weir flow approach (Section 4.2). For models using “HPC Weir Approach == Method A” (the previous approach), this change has minimal impact on the modelling result. Figure 4.1: Quadtree Thick Breakline Face Selection 2020-10-AF Figure 4.2: Quadtree Thick Breakline Face Selection 2023-03-AA 4.7.6 Support Read GIS Zpts Polygon Shape in SGS Method C The 2023-03 Release now supports polygon shapes for the “Read GIS Zpts” command in models using “SGS Approach == Method C”. In the 2020-10 Release, “Read GIS Zpts” polygons were only supported with using “SGS Approach == Method B”. 4.7.7 Support Read GRID Zpts ADD Option for SGS Method C The 2023-03 Release also supports the ADD option for the “Read GRID Zpts” command in models using “SGS Approach == Method C”. Prior to this release, the “Read GRID Zpts ADD” command was producing incorrect bed elevation for the model. 4.7.8 Read RowCol Zpts and Read GIS Zpts With Point Layer Now Produce ERROR 3517 in SGS or Quadtree Models The 2023-03 Release will produce ERROR 3517 when Read RowCol Zpts or Read GIS Zpts with a point layer is used in SGS or Quadtree models. Previously TUFLOW would ignore these commands in models using SGS. 4.7.9 Error for .tgc command Read Grid IWL used in .tcf As per the 2018 TUFLOW Manual, the “Read Gridded IWL” command should be specified in the .tgc and not the .tcf. For Build 2023-03-AA, ERROR 2586 will be generated if this command is specified in the .tcf and the simulation is halted. Previously this command was ignored. 4.8 Minor Enhancements and Bug Fixes 2023-03-AB 4.8.1 Running Simulations at the Exact Same Time Causes XF File “End Of File” Error When running simulations at the same time through a batch file or runner utility, sometimes the xf files would crash due to both simulations trying to access the xf files at the same time. This generally occurred only when the connection to the hard drive was slow, such as across a network or when using an external drive. Build 2023-03-AB adds changes to better handle collisions that were encountered. However, running from a local hard drive provides the best performance and stability. 4.8.2 Bug Fix for “Should Not Be Here [tE” with HPC and Restart Files Build 2023-03-AB fixes an issue that caused “Should not be here [tE=….” to be output to the console and log outputs at the first model timestep. The model continued to run, and this did not affect behaviour of the model. 4.8.3 Bug Fix for “Should not Be Here [tE” at End of Simulation Build 2023-03-AB fixes an issue that caused “Should not be here [tE=….” to be repeatedly output at the end of the simulation. This caused an infinite loop to occur and the simulation not to write the maximums and final output. This occurred very rarely and only if a very small initial timestep was set for the model. This only occurred for HPC simulations. 4.8.4 Bug Fix for Forward Slash in Check File Path Build 2023-03-AB fixes an issue with “Write Check Files” and forward slashes. If the final character is a “” then this is treated as a path to the check folder, and all check files get written with the simulation name, e.g.: Write Check Files == ..\\check\\ However, if the final character is not a backslash then this is treated a prefix, e.g.: Write Check Files == ..\\check\\run_002 In the above example all files will be written to the ..\\check\\ folder and will use the prefix “run_002” instead of the simulation name. When using a forward slash notation (Write Check Files == ../check/) then this was being treated as a prefix and not a folder path. For build 2023-03-AB both \\ and / are treated as a path. 4.8.5 Bug Fix for Stability Issue with Thick Breaklines Applying the advanced weir equation over thin and thick breaklines was introduced in 2023-03-AA. However, it has become apparent that on rare occasions the depth adjustment applied to faces parallel to the flow (thick breaklines only) can cause a stability issue. The depth adjustment on these faces has been removed in version 2023-03-AB. This may produce very minor changes in results to models with thick breaklines. 4.8.6 Bug Fix for Small HPC models on CPU with a Large Number of Threads Previous versions of HPC (not Quadtree models) could fail to run due to an incorrect decomposition when splitting the model over a large number of CPU threads. This issue is fixed in 2023-03-AB. 4.8.7 Bug Fix with SGS Calculation For SGS Approach Method C, on very (very) rare occasions the SGS calculations for a cell could cause a cell to have a fixed storage instead of a height varying storage. This issue was introduced in 2023-03-AA and has been fixed in 2023-03-AB. For models that did generate an erroneous SGS calculation on a particular cell, a very small change in results may be expected. Due to this issue the XF files (described in Section 2.2.8 need to be updated if moving to the 2023-03-AB build from the 2023-03-AA build. 4.8.8 Bug Fix with Fixed Form Loss Coefficients in Quadtree When applying additional fixed form loss coefficients (“Set FLC”“, Read GIS FLC” and “Read Grid FLC”) within a Quadtree model, the coefficients were being incorrectly applied. This issue is fixed in 2023-03-AB. 4.8.9 Update to CHECK 3505 SGS TIN for Quadtree Model Build 2023-03-AB now only outputs CHECK 3505 – SGS TIN Outside Model Domain for nesting level 1 when running Quadtree simulations. Previously this check message could be spuriously generated for TIN inputs that were within the base nesting level, but outside the extents of the finer nesting levels. 4.8.10 Bug Fix 2d_lfcsh Layers in Quadtree Snapped to Code Build 2023-03-AB fixes an unreported bug that could incorrectly treat polylines snapped to the code boundary in Quadtree. Previously this had the potential to cause a memory overrun and affect the model in unexpected ways. Not all polyline inputs are affected. Common inputs affected include 2d_zsh (and other breakline inputs), 2d_lfcsh, and 2d_po inputs. "],["BndLnks-1.html", "Section 5 Boundaries and Links 5.1 Support for DSS File Format 5.2 SX Momentum 5.3 Structure Loss Adjustment for SX Connected 1D Structures 5.4 Quadtree Parallel Inertia on HT / HX Boundaries 5.5 HPC Support for Boundary Spline Interpolation 5.6 Default HPC Boundary Approach 5.7 Minor Enhancements and Bug Fixes 5.8 Minor Enhancements and Bug Fixes for 2023-03-AB 5.9 Minor Enhancements and Bug Fixes for 2023-03-AC", " Section 5 Boundaries and Links 5.1 Support for DSS File Format The 2023-03 Release introduces support for time-series data from HEC-DSS files within a boundary condition database. HEC-DSS is a database system for time series, curve, gridded data and more developed by the U.S. Army Corps of Engineers Hydrologic Engineering Center (HEC). See their website at https://www.hec.usace.army.mil/software/hec-dss/ for more information. It is used by the HEC developed models for data input and output. Rather than convert HEC-DSS time-series curves for use in TUFLOW, this data can be accessed directly. HEC-DSS files organise data into paths with six parts (Part A – Part F) that resemble how files are organised on disk. Figure 5.1 shows an example DSS file with a single path, with the curve plotted below. Figure 5.1: Example DSS File To use a HEC-DSS time-series curve within a TUFLOW boundary condition database: Provide the filename in the “Source” column. Leave “Column 1”, which is used for time, blank (DSS files store the time with the curve values). Identify the pathname in “Column 2.” Event placeholders such as event can be used as part of the pathname. Wildcards (*) can be used for parts of the path, however, ensure the wildcards will not select more than one path within the file. The “Add” and “Mult” columns can be used to offset or scale the time-series values, the same as non-DSS time-series curves. Figure 5.2 shows how the time-series curve above could be included in a boundary condition database. A wildcard is used for Part D of the pathname (date range). Note that the pathname must start with a forward slash (/). Figure 5.2: Time-series Curve Example By default, TUFLOW uses the first point in the time-series curve as TUFLOW time-zero. This can be changed using the new command “HEC-DSS Start Date” to identify the date/time that should be used for time-zero. The date should be in the isodate format: yyyy-mm-dd hh:mm:ss, where the time portions are optional. HEC-DSS Start Date == 2022-01-01 Note: Non-time series data such as gridded data from a HEC-DSS file is not supported at this time. Contact support@tuflow.com to request other features that would be beneficial to your workflows. 5.2 SX Momentum 2023-03 Release has improved the handling of momentum flux at SX cells. This change has minor impact on SX cells with sub-critical flow. However, for the SX cells connected to high energy/velocity 1D structures, this enhancement would improve the boundary cell flow behaviour by applying appropriate momentum source/sink. For more details, please refer to the HWRS conference paper (Gao et al. 2022). HPC SX Momentum Approach == Method B Previously, only mass flux has been added to SX cells. For backward capability, please use: HPC SX Momentum Approach == Method A Note: Build 2023-03-AB fixes an minor issue with the reporting of HPC SX Momentum Approach in the .tlf which was missing a new line if Method A was specified. 5.3 Structure Loss Adjustment for SX Connected 1D Structures Build 2020-10-AA introduced a new beta option to extend the adjustment of contraction and expansion losses for 1D culverts and bridges to automatically adjust at 1D/2D SX connections (refer to Section 6.2 in the 2020 Release Notes). This feature has been tested using Venturi flume experiment and real-world flood model (Gao et al. 2022). However, it is still under development and remains as beta functionality. 5.4 Quadtree Parallel Inertia on HT / HX Boundaries For the 2023-03 Release the handling of inertia parallel at head boundaries for Quadtree simulations (“HT” and “HX” type 2d_bc layers) has been changed to “Method B” to provide better consistency with TUFLOW Classic and single level HPC. A new .tcf command has been introduced: Quadtree BC Parallel Inertia Approach == Method A | { Method B} To revert to the 2020 Release method, use “Method A”. 5.5 HPC Support for Boundary Spline Interpolation The 2023-03 Release adds support for boundary cubic spline interpolation (“S” flag in the 2d_bc layer) for HT and QT type boundaries in HPC and Quadtree. Previously, if users specified a spline interpolation HPC would use linear interpolation and no warning message was produced. 5.6 Default HPC Boundary Approach As outlined in Section 6.1.1 of the 2020 Release Notes, HPC Boundary Approach == Method C is now the default. This approach applies a boundary energy correction to HT boundaries but not for HX cells connected to the same node. 5.7 Minor Enhancements and Bug Fixes The 2023-03 Release includes a range of minor enhancements and bug fixes relating to boundaries. 5.7.1 Should Not Be Here When Reading TS1 File The 2023-03 Release changes a “Should not be here csv_to_binary[ncolA]” message to ERROR 0628. This error can occur if the TS1 file has become corrupted or if the user accidentally makes manual edits to the file. 5.7.2 Duplicate SA Boundary Names The 2023-03 Release changes the behaviour of HPC and Classic models that use multiple SA polygons with the same boundary name. In the 2023-03 Release, these boundaries are treated separately; as if they were different boundary names with the same hydrograph. Previously, these SA boundaries would be treated as a single boundary and the cells selected by each polygon would be grouped together. If duplicate SA boundary names are encountered, TUFLOW will issue CHECK 2492 in the 2023-03 Release. The old method can be invoked by reverting to the pre-2023 defaults and WARNING 2492 is produced instead of the check message. The previous method is not available in Quadtree as this has always used the 2023 default method. 5.7.3 CSV Inputs Containing Multiple Blocks The 2023-03 Release fixes an issue with XF files and .csv boundary data that could occur if there were multiple blocks of data within the .csv file. The file is considered to have multiple blocks when there is boundary data below other boundary data, for example in in Figure 5.3. Figure 5.3: CSV Input Containing Multiple Blocks If there are multiple blocks, no XF file will be generated in the 2023-03 Release and WARNING 0627 will be issued. Previously TUFLOW would generate an XF file for the first inflow block it read in and ERROR 0141 could be triggered if inflows in other blocks were required (as they would not be present in the XF file). 5.7.4 BC Zero Flow End Fixed in Quadtree The 2023-03 Release fixes the “BC Zero Flow == End” command for Quadtree models. Previously this command was not working and no warning message was produced. 5.7.5 BC Zero Flow CHECK message The 2023-03 Release adds CHECK 0249 if the “BC Zero Flow ==” command changes the inflow hydrograph (i.e. the current start or end value was non-zero). 5.7.6 Automatic Initial Water Level When Interpolated The 2023-03 Release fixes a bug that could cause the incorrect water level to be applied when using “Set IWL == Auto”. This could happen if the automatic water level at the start time of the simulation required interpolation from the HT boundary data. 5.7.7 SX Region with Z Flag in Quadtree Model The 2023-03 Release fixes a bug that occurred when using a “Z” flag in a 2d_bc “SX” type region. Previously, the Z flag did not lower the cell face and corner elevations in Quadtree models. 5.7.8 Small SX Region Selects At Least One Cell in Quadtree Model Previously, if a small SX region doesn’t select any cell centroid in Quadtree models, the SX region was ignored. In the 2023-03 Release, the centroid of the SX region will be used to select at least one boundary cell. 5.7.9 Check for correct attribute for SA RF boundaries Read GIS SA RF boundaries require 5 GIS attributes compared to the Read GIS SA which only requires a single attribute. For 2023-03-AA a check is performed that the GIS layer has at least 5 attributes and stops with ERROR 2589 if insufficient attributes are present. This can prevent TUFLOW from crashing when reading these boundaries. 5.7.10 Fixes an issue reading xf files, when the time column has zero rows of data Fixes and issue with processing and reading of boundary xf files, if the data in column 1, which is time for a level-time (HT) or flow (QT) has zero rows of data, but the column 2 has valid data. This will now generate an ERROR 0651 and halt the simulation. 5.8 Minor Enhancements and Bug Fixes for 2023-03-AB 5.8.1 Quadtree HQ Total Boundary - Should Not Be Here Build 2023-03-AB changes the ‘should not be here’ that could occur for quadtree models when using an HQ boundary ‘Total’ approach (this is the default method for HQ boundaries) to ERROR 2858. The error was being triggered by the cell selection algorithm failing to create a contiguous line of cells which is required to generate a rating curve. This is in turn can be caused by refinement areas being snapped to the boundary line and causing varied cell size along the boundary (where the line can also pass through inactive areas). The best solution to the error is to buffer refinement areas away from the boundary line. 5.8.2 Better Handling of Null Objects in 2d_sa Layer Build 2023-03-AB improves the handling of Null objects in the 2d_sa input layer. The objects have no geometry and could previously cause an ERROR 2041 to be issued. For build 2023-03-AB these are ignored. 5.9 Minor Enhancements and Bug Fixes for 2023-03-AC 5.9.1 Fixes issue with NetCDF Rainfall with times greater 1,000 hours Build 2023-03-AC fixes an issue with NetCDF rainfall inputs with time values greater than 1,000 hours and boundary increments smaller than 1hr, previously this could cause the rainfall boundary to be updated only every hour and not at the boundary frequency. 5.9.2 Fixes issue with Rainfall Control File with greater 1,000 output times Build 2023-03-AC fixes an issue with creating gridded rainfalls in NetCDF file format if more than 1,000 hours hyetograph points was used. Previously this could cause a simulation to terminate during initialisation. References "],["GISFormats-1.html", "Section 6 GIS Formats 6.1 GeoPackage Format 6.2 GeoTIFF Format 6.3 NetCDF Grid 6.4 Minor Enhancements and Bug Fixes for 2023-03-AB 6.5 Minor Enhancements and Bug Fixes for 2023-03-AC", " Section 6 GIS Formats The 2023-03 Release increases support for GIS formats with new vector and raster formats supported for both reading and writing of GIS data. The newly supported formats are GeoPackage (for both vector and raster data) and GeoTIFF (for raster data only). The 2023-03 Release also extends capabilities for the existing supported NetCDF raster format. The sections below describe the new and extended formats. 6.1 GeoPackage Format GeoPackage vector and raster support has been added for the 2023-03 Release for reading and writing of both vector and raster data. GeoPackage (https://www.geopackage.org/) is a widely supported, open format, built upon an SQLite database (this is stored as a single file with the extension .gpkg). The benefits of this format include: More than one layer can be stored in a single file. For example, all model inputs can be stored in a single GeoPackage database. It supports spatial indexing, making it much faster to work within GIS packages. Faster to write from TUFLOW than Shapefile format. Initially this was added to address some issues with the existing supported vector file formats, notably slow writing and viewing of Shapefiles for large datasets. The MapInfo (MIF/MID) file format is much faster to write from TUFLOW than the Shapefile format, however, loading, rendering, and interacting with the MIF file in GIS packages is much slower than either the Shapefile or GeoPackage. When loading either a MapInfo or Shapefile layer into GIS, typically all the data is loaded and processed when panning the map window, even the ones that are outside of the current view. GeoPackage supports spatial indexing, so that when the view is panned or changed a limited set of objects (within that view) need to be drawn, this makes rendering and interacting with the data much faster. Load the file into QGIS and view the grid for the entire model. Zoom to a small portion of the model and redraw. Table 6.1 shows approximate times taken for TUFLOW to: Write the grid check files. Note, the model has approximately 1.3 million 2D cells, all data was written to local SSD and loaded into QGIS (3.22.1) Load the file into QGIS and view the grid for the entire model. Zoom to a small portion of the model and redraw. Table 6.1: Time to Write and View Check Files in QGIS GIS Format Write grid check (seconds) Load into QGIS and draw all grid cells (seconds) Zoom into to small area (seconds) MIF 7 232 25 SHP 113 40 5 GPKG 47 18 &lt;1 6.1.1 GeoPackage Projection A projection can be defined (used to set the projection used by TUFLOW for GeoPackage files), with the following .tcf command: GPKG Projection == \\(\\langle\\)GPKG layer\\(\\rangle\\) This needs to reference an existing GeoPackage file which can contain either vector or raster data. To create a new GeoPackage file and set the projection in QGIS the following steps are required: From the menu select Layer &gt;&gt; Create Layer &gt;&gt; New GeoPackage Layer. In the New GeoPackage Layer dialogue: Set a database filename and location (e.g. projection.gpkg). Set a table name, typically this would be the same as the filename without the extension. Choose a geometry type (it shouldn’t matter which type is selected, but no coordinate system can be set without a type). Set the CRS for your model. Select “OK”, the GeoPackage file is now ready to be used in TUFLOW. 6.1.2 GeoPackage Vector 6.1.2.1 GeoPackage Vector Inputs The GIS outputs from TUFLOW can be set to GPKG by using the following command: GIS Format == GPKG Since a GeoPackage database can have more than one layer, when reading data into TUFLOW a GeoPackage file and table may need to be specified. The following options are possible: To specify a table in a .gpkg use “&gt;&gt;”: Read GIS Z Shape == gis\\2d_zsh.gpkg &gt;&gt; 2d_zsh_L Specify a .gpkg file path only. It will assume the table name is the same as the .gpkg database name. For example, the below commands are equivalent: Read GIS Z Shape == gis\\2d_zsh_L.gpkg Read GIS Z Shape == gis\\2d_zsh_L.gpkg &gt;&gt; 2d_zsh_L To specify more than one table in a database in the same command line by using “&amp;&amp;”. This is similar to “|” however there is no need to reference the database again: Read GIS Z Shape == gis\\2d_zsh.gpkg &gt;&gt; 2d_zsh_L &amp;&amp; 2d_zsh_P “&amp;&amp;” can be used in conjunction with “|”: Read GIS Z Shape == gis\\2d_zsh_R.gpkg | gis\\2d_zsh.gpkg &gt;&gt; 2d_zsh_L &amp;&amp; 2d_zsh_P Use the command “USE ALL” with “&gt;&gt;” to tell TUFLOW to use all tables in the database: Read GIS Z Shape == gis\\2d_zsh.gpkg &gt;&gt; USE ALL Specify a database to use for subsequent inputs, which can be changed as inputs are read in: Spatial Database == gis\\2d_zsh.gpkg Read GIS Z Shape == 2d_zsh_L | 2d_zsh_P Spatial Database == gis\\2d_mat.gpkg Read GIS Mat == 2d_mat_R This command can be used in the .tcf, .ecf, .tbc, .tgc, .qcf, .tef. Commands are localised to their relevant control file with the exception of the .tcf which acts as a global command - local spatial database will take precedence. The spatial database can be turned off or reverted to the .tcf database with the same command. Turning it off is a global command even when used in a control file other than the .tcf. Regardless of the default GIS extension, if there is an open database TUFLOW will not append “.mif” to the end of the table name. Spatial Database == OFF | TCF 6.1.2.2 GeoPackage Vector Outputs Outputs can be written into separate databases or grouped: Spatial Database Output == SEPARATE | {GROUPED} Grouped databases will group by output folder location. Separate databases will still group geometries together e.g., PLOT_P, PLOT_L, PLOT_R will be written to one database. 6.1.3 GeoPackage Conversion Check GPKG layers include a primary key attribute (as an integer value) which is sometimes included in the attribute table in GIS programs (this happens in QGIS). This is completely fine for GPKG layers as TUFLOW expects this attribute to be present within the format, however if the layer is converted to a different format (e.g. shapefile) the primary key is sometimes retained as an attribute in the converted file. This can cause issues in TUFLOW as this will not always throw an error since some TUFLOW layer types are expected to contain an integer value in the first column. For example, this will happen with quadtree nesting level (2d_qnl) layers and TUFLOW will interpret the primary key as a nesting level value (and the actual nesting level value will be ignored). Typically the name of the primary key is “fid” in GPKG layers (however this is not necessarily always the case). TUFLOW will produce ERROR 0248 if it finds the first field name is ‘fid’ for shapefiles and mif files as this is an indicator that the layer has been incorrectly converted from GPKG. This message can be changed to a warning by using the following command: GPKG Conversion Check == WARNING 6.1.4 GeoPackage Raster TUFLOW supports the GeoPackage raster format via the ‘Gridded Tiled Coverage’ extension to the standard GeoPackage specification. This extension is supported by QGIS and GDAL, however to the best of knowledge of the TUFLOW team at the time of the 2023-03 Release, it is not currently supported by either MapInfo or ArcGIS. The format uses a tiled structure to make rendering and loading faster by enabling the ability to only process the required tiles. The tiled structure also makes pyramids (sometimes referred to as ‘overviews’) inherently available for the format. Note, the 2023-03 Release does not support pyramid creation yet, however, this functionality may be added in a later Release. 6.1.4.1 GeoPackage Raster Inputs Using a GPKG raster is done in the same manner as a GPKG vector layer (Section 6.1.2) but using the ‘Read GRID’ command, for example either of the below commands: Read GRID Zpts == grid_SI_Unit_01.gpkg Read GRID Zpts == grid_SI_Unit_01.gpkg &gt;&gt; DEM_SI_Unit_01 The GPKG projection command stated in (Section 6.1.1) will also work for GPKG raster layers. 6.1.4.2 GeoPackage Raster Outputs The following existing output commands can be extended to use GPKG: Grid Format == GPKG ! sets the default grid format of the model Map Output Format == GPKG HRGPKG ! adds GPKG as a gridded output [GPKG | HRGPKG ] Map Output Interval == \\(\\langle\\)interval\\(\\rangle\\) ! sets the output interval for GPKG gridded output The GPKG raster outputs will also be grouped if the grouping spatial database command is used from Section 6.1.2 (e.g. the DEM_M and DEM_Z will be in the same GPKG database as the 2D check vector layers). 6.1.4.3 GeoPackage Raster Compression The GPKG raster format supports LZW compression of the data. The data is compressed by default, however, can be turned off with the following command: GPKG Compression == NONE | {LZW} By default, TUFLOW will also use a compression predictor to improve the compression ratio, this can be turned off using the following command: GPKG Compression Predictor == NONE | {Horizontal Differencing} Limitation: Currently TUFLOW only supports GPKG raster data containing 32-bit floating point data. This is limited to the ‘Gridded Tiled Coverage’ extension as the native raster support in GPKG currently only supports PNG and JPEG encoding. 6.2 GeoTIFF Format The GeoTIFF raster format is supported in the 2023-03 Release for both inputs and outputs. The following command will set GeoTIFF as the default grid format: Grid Format == TIF The GeoTIFF raster format can be added as a gridded map output: Map Output Format == TIF HRTIF A projection can be set for the output GeoTIFF rasters by using the following command in the TCF: TIF Projection == /path/to/geotiff Only the header information is read in from the file with this command, so it is safe to use large files without any negative impacts on start-up speed. A projection is not required to output to the GeoTIFF format, however it is required to include the spatial reference system in the output GeoTIFF. Currently there is no input projection checking of raster layers (like there is for GIS vector inputs) and the projection is only used for the GeoTIFF outputs. TUFLOW supports several compression methods for GeoTIFF: LZW (Read/Write) DEFLATE (Read/Write) PACKBITS (Read only) The data is compressed by default when writing to GeoTIFF format using the ‘deflate’ method, however, can be changed or turned off using the following command: TIF Compression == NONE | LZW | {DEFLATE} By default, TUFLOW will also use a compression predictor to improve the compression ratio, this can be turned off using the following command: TIF Compression Predictor == NONE | {Horizontal Differencing} Testing has shown that using deflate compression with horizontal differencing will typically achieve better compression than the typical method of using a ZIP file on the same uncompressed data. TUFLOW will default to using all available CPU cores when reading/writing GeoTIFF files which can speed up processing when using compression. This can be changed by specifying the number of threads using the command line argument “-nt[thread count]”. Limitations: Currently TUFLOW only supports GeoTIFFs containing 32-bit floating point data. Currently does not support ‘Cloud Optimised GeoTIFFs’ or the tiled GeoTIFF format. GeoTIFFs support multiple raster bands, however TUFLOW will currently assume the input dataset is within the first raster band. Currently TUFLOW only supports unrotated GeoTIFF rasters. 6.3 NetCDF Grid NetCDF grids are now supported as standard raster inputs for all “Read GRID ==” commands in the .tgc. Previously, NetCDF grids were supported for rainfall and external stress inputs only. The NetCDF raster inputs should follow the NetCDF CF Convention and are treated as a database within TUFLOW (similar to GPKG). The new database input command options are: Read GRID Zpts == grid_SI_Unit_01.nc &gt;&gt; DEM_SI_Unit_01 and Spatial Database == grid_SI_Unit_01.nc Read GRID Zpts == DEM_SI_Unit_01 Limitation: NetCDF rasters support multiple raster bands, however TUFLOW will currently assume the input dataset is within the first band. Note, rainfall and external stress NetCDF inputs remain unchanged and do not use the new syntax. 6.4 Minor Enhancements and Bug Fixes for 2023-03-AB 6.4.1 Spatial Database Command Now Works in Quadtree Control File Build 2023-03-AB fixes an issue when using the “Spatial Database” command in the Quadtree Control File (.qcf). Previously, when setting either the “Base Cell Size”, “Model Origin and Extent” or “Orientation Angle” to “TGC” the Spatial Database command referenced in the QCF could be overwritten by the spatial database reference in the TGC. 6.4.2 Read GRID Location Now Works for New Raster Formats Build 2023-03-AB now accepts GeoTIFF, GPKG raster, and NetCDF raster formats for the “Read Grid Location” command in the TGC. This was previously only working for Quadtree in the 2023-03-AA release. 6.4.3 Compression Now Allows for Size Increase Build 2023-03-AB now allows compressed sizes to become bigger than the uncompressed size. This is applicable for both DEFLATE and LZW compression methods and for GeoTIFF and GPKG raster formats. These formats store data in blocks of tiles or strips and each block of data is compressed individually. Previously, if one of these compressed blocks became larger after compression, it would cause ERROR 0635. The 2023-03-AB release allows compression to get larger. Note this may only be for a single block of data and not necessarily reflect what is happening to the overall file size under compression. 6.4.4 Increase Primary Key Column Name Length Build 2023-03-AB increases the allowed column name length for the GPKG primary key column name from 5 to 50. This only affects reading GPKG layers created from certain applications. For example, the QGIS Kart plugin when converting from a SHP to GPKG will create a primary key column name exceeding 5 characters (it used ‘auto_pk’). 6.4.5 Retry Loop for Locked GPKG Databases Build 2023-03-AB will enter a retry loop while trying to open a GPKG for reading if the database is locked. The retry loop pauses for 1 second before trying again and to prevent an infinite retry loop, TUFLOW will error if it fails to open the database 10 times. Previously this could occur (very rarely) if more than one TUFLOW model was initialising at the same time and using the same input GPKG database(s). 6.4.6 GPKG XF File Naming Build 2023-03-AB changes the file naming convention for GPKG XF file names. Previously the convention was to use the database name followed by all layer names (then conventional XF naming suffixes), for example: 2d_ztin_EG07_010.gpkg_2d_ztin_EG07_010_L_2d_ztin_EG07_010_P.d1.5m_T00001.xf4 However, because these file names can become very long, build 2023-03-AB has changed the approach and hashes the layer names into an 8 character long hexadecimal number which allows TUFLOW to check for file name consistency and limits the filename length, for example: 2d_ztin_EG07_010.gpkg_FEBB7271.d1.5m_T0001.xf4 6.4.7 Bug Fix “Reached maximum concurrent SQLite statements” Build 2023-03-AB fixes a bug that could occur when another application had the same GPKG database open for editing while TUFLOW was trying to read it. This would only occur if the same database was opened and closed many times by TUFLOW. Previously ERROR 0636 and ERROR 0647 was triggered in these situations. 6.4.8 Bug Fix “ERROR 0636 – Issue stepping through SQLite query” Build 2023-03-AB fixes a bug that could occur reading a GPKG layer that contained mis-matched ‘rowid’ and ‘fid’ attributes (‘rowid’ is an internal attribute within SQLite tables and ‘fid’ is the common name for the primary key column in a GPKG layer). This could occur for any number of reasons and the user has very little control over this. Note, there is no requirement for the ‘rowid’ and ‘fid’ column to be in sync and the GPKG layers are not considered corrupt or invalid if this happened. If the ‘rowid’ and ‘fid’ columns became mis-matched, TUFLOW could sometimes produce “ERROR 0636 – Issue occurred stepping through SQLite Query”. This was caused by incorrect parameters passed to the SQLite API routines which has now fixed in TUFLOW 2023-03-AB. 6.4.9 GPKG Multi-Part Polygons In build 2023-03-AB the treatment of multi-part polygons in GPKG are now identical to SHP/MIF. Previously they were treated slightly differently, they were treated as a single polygon with multiple rings. This will not affect the inputs in most cases except where different polygon parts from the same feature overlapped, or for some inputs in TUFLOW that allowed for multi-part features but not for polygons containing multiple rings (e.g. polygons with holes). 6.4.10 ERROR 0305 Triggering When There is No GPKG Projection Build 2023-03-AB no longer triggers ERROR 0305 or WARNING 0305 when a GPKG Projection is not included in the TCF. Previously this message could trigger if a SHP Projection was included. 6.5 Minor Enhancements and Bug Fixes for 2023-03-AC 6.5.1 GPKG XF File Creation Causing “ERROR 0645” Build 2023-03-AC fixes a bug when reading multiple GPKG layers on a single line using the Shapefile convention (e.g. Read GIS Z Shape == 2d_zsh_L.gpkg | 2d_zsh_P.gpkg). Prior to 2023-03-AC, using this syntax could cause “ERROR 0645 - Could not determine layer name, please check syntax” when TUFLOW was creating an XF file name. This error did not cause TUFLOW to terminate and only affected XF file creation and did not stop the layer being processed correctly otherwise (i.e. the layer would be correctly processed when reading the spatial and attribute data). 6.5.2 Bug Fix For GPKG When “fid” Was Not the Same as “rowid” Build 2023-03-AC fixes a bug when reading a GPKG layer that contained entries where the GPKG “fid” column was not equal to the internal SQLite “rowid” column. This would cause an infinite loop of “ERROR 0636 - Issue occurred stepping through SQLite query” and a “Should not be here [stmntID=0]”. 6.5.3 Exit TUFLOW if an ERROR Occurs Reading GPKG Build 2023-03-AC will correctly error and exit if an unexpected error occurs reading a GPKG layer. Previously certain errors could cause an infinite loop to occur (e.g. the error reported in Section 6.5.2) 6.5.4 Bug Fix GPKG Reading 1d_pit Build 2023-03-AC fixes a bug that could cause TUFLOW to exit uncleanly when reading a GPKG 1d_pit layer. This error was caused when TUFLOW checked the 1d_pit column names which was introduced in build 2023-03-AB with the addition of the ability to add a time lag for virtual pits. 6.5.5 GeoTIFF Now Supports “SPARSE_OK=TRUE” GDAL creation option Build 2023-03-AC now supports reading GeoTIFFs created with the “SPARSE_OK=TRUE” creation option. This option is available when creating GeoTIFFs using GDAL and will not write strips where only nodata values exist. "],["OutChecks-1.html", "Section 7 Outputs and Check Files 7.1 Additional Options for Record Gauge Data Outputs 7.2 Time of Max Water Level Switch 7.3 Time of Max Velocity Off by Default 7.4 File Access Timeout 7.5 Additional Check Grid Formats 7.6 High Resolution Map Output Includes Additional File Formats 7.7 New Map Output Data Types 7.8 Changes to Simulation Computational and Clock Times 7.9 Minor Enhancements and Bug Fixes 7.10 Minor Enhancements and Bug Fixes for 2023-03-AB 7.11 Minor Enhancements and Bug Fixes for 2023-03-AC", " Section 7 Outputs and Check Files 7.1 Additional Options for Record Gauge Data Outputs The 2023-03 Release now allows the user to choose whether to automatically include reporting location lines, reporting location points, and gauge locations (PO ‘G_’ type) when processing gauge receptor objects. The following command can be used to specify which location types to include: Record Gauge Data == RLP | RLL | Gauge Or alternatively the following command can be used to exclude types: Record Gauge Data EXCLUDE == RLP | RLL | Gauge The default is to include all reporting locations lines, points, and gauges. 7.2 Time of Max Water Level Switch The 2023-03 Release adds an output switch in the .tcf that gives the user the ability to turn off the “TMax_h” output. This command builds on an existing command: Maximums Track Time == OFF Completely 7.3 Time of Max Velocity Off by Default For the 2023-03 Release, the “TMax_V” output has been switched off by default for TUFLOW Classic outputs to be consistent with TUFLOW HPC. The “TMax_V” output can be turned back on using the following command (available for TUFLOW Classic only): Maximums Track Time == Velocity 7.4 File Access Timeout Improvements have been made to how TUFLOW handles an .xf or .xmdf file that is locked whilst being written to. For both file types, TUFLOW will now repeatedly attempt to access the file. XF File access When multiple instances of TUFLOW are running from the same .tcf file (e.g. different events/scenario combinations), it is possible for these separate TUFLOW simulations to try to access the same .xf file at the same time. This could cause a “race condition” where only one simulation is able to open the file. Previously, TUFLOW would issue a dialog with a message that the file is locked. The user could continue once the XF file was no longer in use by another TUFLOW simulation. The 2023-03 Release will automatically wait for the file to become free and continue without user intervention. XMDF File access When running TUFLOW, XMDF files may become locked due to external use of the file, such as during file backups. The 2023-03 Release will wait for the file to become freed up to the maximum number of retries. The .tcf commands below can be used to modify the number of retries and time to wait between retries. The maximum number of retries is capped to prevent and infinite loops if the file is permanently locked. The commands control behaviour for both .xf and .xmdf files. File Retry Max Count == 40 ! Maximum number of retries File Retry Timeout == 30 ! Time in seconds to wait between retries 7.5 Additional Check Grid Formats All raster output format types are now supported for the check DEMs (DEM_M and DEM_Z). The type can be set using: GRID Format == ASC | FLT | {TIF} | GPKG | NC | TGO | WRR 7.6 High Resolution Map Output Includes Additional File Formats All raster outputs now support a high resolution (HR) option, available when using SGS Method C. The below lists the available high resolution outputs which can be added as map outputs types in the .tcf: HRASC HRFLT HRTIF HRGPKG HRNC HRTGO HRWRR Customisation of the HR outputs is also possible for each type: HRTIF Map Output Types == d h HRTIF Map Output Interval == 0 Note, only depth and water level data types are supported with high resolution map outputs. 7.6.1 Viewing HRNC in TUFLOW Viewer The TUFLOW Viewer supports NetCDF raster viewing (NC and HRNC). This allows users to easily view and query high resolution temporal results using the same functionality available for XMDF. Please see the following wiki page for more information: https://wiki.tuflow.com/TUFLOW_Viewer_-_Load_Results_-_NetCDF_Grid 7.6.2 High Resolution Map Output Includes 1D WLL Elevations Previously, only 2D sub-grid elevations were used to generate the high resolution DEM_Z check file and depth output. 2023-03 Release now utilises the 1D channel bed elevation generated at 1D WLL (water level lines) as well. 7.7 New Map Output Data Types 7.7.1 HPC Control Numbers For HPC simulations the three timestep control numbers (Nu, Nc, and Nd) are now available as map output data types. These control number outputs are: Nu: Courant Number Nc: Shallow Wave Celerity Number Nd: Diffusion Number Note, these are only valid map output data types for HPC simulations, these are not available for Classic simulations. For TUFLOW Classic Courant Number “Cr” output is available. “Cr” map output is not valid for HPC simulations. 7.7.2 New Hazard Output – Auckland Council Hazard NZ Build 2023-03-AB introduces a new hazard category used by Auckland Council, New Zealand. This is specified with the “ZNZ2” map output data type. The categories are shown in Figure 7.1 and defined as: Category 1 (Low Safety Risk): D*V &lt; 0.4 V &lt; 3.0 m/s D &lt; 0.5 m Category 2 (Moderate Safety Risk) D*V &lt; 0.8 V &lt; 3.0 m/s D &lt; 1.2 m Category 3 (High Safety Risk) D*V ≥ 0.8 V ≥ 3.0 m/s and D ≥ 0.1m D ≥ 1.2 m Dry points are assigned Category 0. Figure 7.1: Auckland Council Hazard Output 7.8 Changes to Simulation Computational and Clock Times For build 2023-03 extra information is output to the simulations.log file and .tlf regarding simulation clock and processor time. Note that the processor time is summed across all threads and includes GPU hardware. If parallel processing is used in model initialisation or solver this number may be larger than clock time. Prior to the 2023 release the simulations.log file reported, shown in Figure 7.2: Total processor time at the end of the simulation – highlighted in red Hardware type and number of processor used (CPU or GPU) - highlighted in blue Clock time (wall clock or elapsed real time) at the end of the simulation – highlighted in green Figure 7.2: 2020-10-AF Simulation Log For the 2023 release this has been expanded to include the clock and processor time after initialisation (the start of the solution) as well as the clock and processor time at the end of the simulation, shown in Figure 7.3. From left to right these are: Clock time after initialisation - yellow Processor time after initialisation – light blue Clock time at end of simulation – green Processor time at end of simulation – red Hardware type and number of processor used - dark blue Figure 7.3: 2023-03-AA Simulation Log The clock and processor times are also reported at the end of the .tlf, shown in Figure 7.4. Figure 7.4: 2023-03-AA Simulation Log 7.8.1 Changes to Simulation Log Files for 2023-03-AB Computational processor time is being reported very differently for Windows 11 compared to prior versions of Windows. For earlier version of Windows, the processor time included time spent in GPU computer. For Windows 11, the processor time appears to exclude time spent in GPU calculations. From Build 2023-03-AB if running on GPU hardware the processor time is not reported to the simulations.log file. The processor time is still reported to the .tlf with a note that: “Processor times may be misleading/inaccurate when using GPU hardware.” Build 2023-03-AB also includes some minor changes to the formatting of the simulation log file, which includes: Extra width allowed for dongle serial numbers Better alignment of columns 7.9 Minor Enhancements and Bug Fixes The 2023-03 Release includes a range of minor enhancements and bug fixes relating to output and check files. 7.9.1 Checks for Valid Geometries for Plot Outputs For the 2023-03-AA release, additional checks are performed for plot outputs depending on the GIS geometry. For example, plot output type “Q” (flow) is valid on a line but not a point. Incompatible plot output types will generate either a warning (which is the default) or an error. To set this the following .tcf command can be used: Plot Output Invalid Type == ERROR | { WARNING } Note: Build 2023-03-AB fixes an issue which prevented plot output types Qin, Qout and Vol from working with PO regions. 7.9.2 HPC dt.csv Interval Can Now Be Set The .hpc.dt.csv contains information on the timestep history for HPC (including Quadtree) simulations. Prior to the 2023-03 Release this was output at each timestep. For the 2023-03 Release the output interval can be set with the .tcf command: HPC dt Write Interval == \\(\\langle\\)number of timesteps\\(\\rangle\\) If not set, the default is to use the Screen/Log Display Interval, if set to zero or less the file is supressed and not written. 7.9.3 Bug Fix for Map Output Zones Using Different Map Output Intervals The 2023-03 Release fixes an issue with map output zones that use different map output intervals. Previously, when the output zones had different map output intervals (from other map output zones or the global settings), TUFLOW could fail to write all output times. This could also occasionally cause a ‘Should not be here’ to occur and the model to crash. 7.9.4 SGS Sample Distance Reporting in TLF The 2023-03 Release fixes an issue with the SGS sample distance reporting in the .tlf when the sample distance is less than 0.00001. Previously this would be reported as 0.000. 7.9.5 Limit Number of WARNING 2550 Messages The 2023-03 Release limits the number of WARNING 2550 messages (written at the end of an HPC simulation) to 100. The total number of cells with timestep corrections is still reported. This limit can be disabled by using the “Verbose == ON” command in the .tcf. 7.9.6 2D_WRF Empty File The 2023-03 Release will now write 2d_wrf empty files as part of the following command: Write Empty GIS Files == \\(\\langle\\)file_path\\(\\rangle\\) 7.9.7 High Resolution Grid Outputs Not Created with Map Output Zones The 2023-03 Release fixes a bug with high resolution grid outputs. Previously, they were not being written when the model contained map output zones. 7.9.8 Time Output Cutoff Logging Fix The 2023-03 Release fixes a bug that could incorrectly report the hazard being used in the “Time Output Cutoff ==” command in the .tlf. 7.9.9 Mass Error Reporting During Simulation Showing Asterisks The 2023-03 Release fixes the mass error reporting in the simulation window when the mass error equals negative 100%. Previously this would appear as asterisks (******%). 7.9.10 Snapping Settings Added to .qgs File The 2023-03 Release adds snapping settings to the .qgs file (QGIS project workspace) that is written to the log folder as part of a TUFLOW simulation. This fixes an issue that is present in QGIS version 3.26 or later when loading the .qgs file written by TUFLOW. Without snapping settings in the .qgs file, none of the layers written to the workspace would allow snapping. 7.9.11 Duplicate Messages in the messages_P GIS File The 2023-03 Release removes duplicate messages that were written to the messages_P file. For example, CHECK 1206 and CHECK 1625 could be duplicated. 7.9.12 Quadtree zsh_zpt_check Points in Non-Refined Areas The 2023-03 Release fixes an issue in Quadtree models where the points in the zsh_zpt_check_P check file were at spacing that did not match the level of mesh refinement. This issue was limited to Z-shape polygons and only occurred if the polygon was within the hidden domains used by the Quadtree pre-processing engine. This issue did not affect the mesh generation or the results. 7.9.13 Bug Fix for SGS Model Outputs When Cell Averaged Depth Option is Used The 2023-03 Release fixes an issue where a SGS model could output zero depth at the first simulation timestep when “SGS Depth Output == Cell Average” is used. The 2023-03 Release also fixes an issue where velocity vectors were not written at cells with small cell average depth. Neither of these bugs affects the hydraulic calculation. 7.9.14 Fixes an Issue with Viscosity Output Written as Zero The 2023-03 Release fixes an issue with the viscosity output (data type “T”) being written as zero unless the data type “T” was specified for the default map output data types (e.g. Map Output Data Types without format prefix). For example, the following would cause an output of zero viscosity: Map Output Format == XMDF FLT Map Output Data Types == h V Z0 ZAEM1 XMDF Map Output Data Types == h V Z0 T The following output settings would correctly output the viscosity. Map Output Format == XMDF FLT Map Output Data Types == h V Z0 ZAEM1 T XMDF Map Output Data Types == h V Z0 T For the 2023-03 Release, if viscosity output is requested for any file formats, this will be correctly pulled from the solver. 7.9.15 HPC Control Number Map Output The 2023-03 Release supports three new output data types in the HPC Solver (including Quadtree): Map Output Data Types == Nu Nc Nd Nu is the Courant Number, Nc is the Shallow Wave Celerity Number, and Nd is the Diffusion Number. Please refer to https://wiki.tuflow.com/HPC_Adaptive_Timestepping for how the control numbers are calculated. The 2023-03 Release will also produce WARNING 2386 if the Classic Courant Number (Cr) output is used in a HPC model. 7.9.16 _zsh_zpt Check File for SGS Models The 2023-03 Release fixes a check file inconsistency between SGS Approach Method B and C (see Section 2.2.2). Previously, SGS Method C writes _zsh_zpt check points only if a cell centre, a face mid-points or a corner point is located inside a 2d_zsh polygon. On the other hand, SGS Method B writes _zsh_zpt check points at all the updated SGS cells, faces and corners including the partially updated SGS points. The 2023-03 Release now writes _zsh_zpt check points for all the updated SGS points in both SGS method B and C. In addition, two extra attributes are added to the SGS _zsh_zpt check file. The new attributes include: dZ: the change in elevation at the exact location of cell centres, face mid-points or corner points. ZExact: the new elevation at the exact location of cell centres, face mid-points or corner points. dZmin: the change in minimum elevation inside cells, along faces or at corners. Zmin: the new minimum elevation inside cells, along faces or at corners. Source: the source file that edits the SGS points. 7.9.17 Extra Checks on File Format Specific Map Output Commands Build 2023-03-AA introduces checks on file format specific Map Output commands, to ensure that only one file format is specified. For example, the following command Will now produce ERROR 2590: ASC FLT Map Output Interval == 0 To apply the same settings to more than one format, the command needs to be repeated for each format, e.g.: ASC Map Output Interval == 0 FLT Map Output Interval == 0 7.9.18 Changes to Processing of Map Output Data Types Command When processing “Map Output Data Types == \\(\\langle\\)list of data types\\(\\rangle\\)”, it is recommended that these are separated with a space (and not a tab). To avoid incorrectly processing the data types, 2023-03-AA changes the order these are processed. This will only affect models that do not used a space separator between map output data types. E.g instead of: Map Output Data Types == hvdqcr The recommended syntax would be: Map Output Data Types == h v d q cr 7.9.19 Layered Flow Constriction Check File Now Includes Method The _lfcsh_uvpt check file now reports the energy loss method used for each cell. 7.9.20 HPC Error Codes Are Now Reported in .tlf and Message Layers In addition to being reported in the .hpc.tlf any HPC errors should now be reported in the .tlf and the messages GIS file. 7.10 Minor Enhancements and Bug Fixes for 2023-03-AB 7.10.1 Fix for Quadtree High Resolution Outputs and WLL Build 2023-03-AB fixes an issue with high resolution output in quadtree models with SGS and water level lines. Previously this could cause the simulation to crash without error. 7.10.2 Reduced Log File when Processing Quadtree Polygons Build 2023-03-AB reduces the amount of output which goes to the .tlf when processing Quadtree nesting level polygons. Previously, if a significant number of nesting polygons was used then a large amount of output to the log file was included. For 2023-03-AB this output is still displayed to the console, but not to the .tlf unless “Verbose == On” is set in the .tcf. 7.10.3 Bug Fix for Integer (Hazard) Grid Outputs Build 2023-03-AB now correctly outputs integer grids (e.g. certain hazard outputs) as integers rather than decimal numbers. In the 2023-03-AA build this was broken for the FLT format and did not work for the new raster formats (GeoTIFF, GPKG raster). The ASC format worked in the 2023-03-AA build. 7.10.4 Consistent Reporting Location Dry Output Build 2023-03-AB will now output consistent RL point values across engines for dry cells / nodes. These will now be output with a null value (default value -99999, however can be user set) whenever the output location is dry. Previously Classic and Quadtree would initially report the null value for the first timestep then a zero value for subsequent dry timesteps; HPC and ESTRY would report the bed level. 7.10.5 Bug Fix MIF PLOT output Build 2023-03-AB fixes a bug introduced in the 2023-03-AA build that would not correctly write the GIS PLOT output layer for the MIF format. This only affected the GIS PLOT output layer (the CSV outputs were correct) which meant that the results could not be viewed in TUFLOW Viewer. 7.10.6 Scientific Notation for PO Outputs Build 2023-03-AB uses scientific notation for CSV PO outputs when values are very small (i.e. close to zero, not negative values), e.g. groundwater flow outputs. 7.10.7 Scientific Notation for ASC Outputs Build 2023-03-AB uses scientific notation for ASC grid outputs when values are very small (i.e. close to zero, not negative values) e.g. groundwater unit flow output. 7.10.8 Bug Fix Geometry Type Groundwater Flow Output in TPC Build 2023-03-AB fixes a bug when writing groundwater PO flow line output to the TPC which was previously listing it as a ‘point output’ (e.g. 2D Point GW Flow == …). 7.10.9 Bug Fix Groundwater Vector Grid Outputs Build 2023-03-AB fixes a bug that could cause groundwater vector grid outputs to write out only null values. 7.10.10 Bug Fix Velocity GIS Map Output Build 2023-03-AB fixes the velocity output for the GIS map output which was creating an empty output. 7.10.11 Extra Precision in Quadtree uvpt Check File for Form Loss Build 2023-03-AB allows extra width for the form loss attribute, this has been increased to 4 decimal places in line with the Classic/HPC check file. The form loss values are stored as floating-point numbers, this change only affects the value written to the check files. 7.10.12 TMO Output Changes for HPC Model with SGS Build 2023-03-AB fixes an issue with the TMO format output for HPC models (without Quadtree) when using SGS. For these models the depth output was being reported relative to the cell minimum elevation (SGS Depth Output == Minimum) rather than the datum set with the “SGS Depth Output == ” command (which defaults to Cell Average). 7.10.13 Duplicated HR Output Message in Log File Build 2023-03-AB removes duplicated log file messages related to HR Output. 7.10.14 Updated Links to TUFLOW Wiki An update on the software used to host the TUFLOW wiki website has changed URL links. For example: https://wiki.tuflow.com/index.php?title=TUFLOW_Message_2570 has now become: https://wiki.tuflow.com/TUFLOW_Message_2570 A re-direct has been setup for existing links / pages, however, messages output for Build 2023-03-AB onwards will use the new wiki URL naming convention. The TUFLOW wiki update was competed to provide improvements including the ability to have animations within pages. 7.10.15 Warning 3551 now Check 3551 Build 2023-03-AB has changed “WARNING 3551 - SGS elevations have changes, reprocessing”, from a WARNING to a CHECK. The message remains unchanged. 7.10.16 Check 0008 now ERROR 0008 Build 2023-03-AB escalates message “CHECK 0008 - cannot be found or opened” to “ERROR 0008 - cannot be found or opened”. 7.10.17 Check 2099 now Reported to Log and Console For build 2023-03-AB “CHECK 2099 - Ignored repeat application of boundary to 2D cell” is now output to the .tlf and console, prior to this build only the GIS message layer was written. 7.10.18 Bug Fix for Warning 4020 Build 2023-03-AB fixes a bug that could cause “WARNING 4020 - Should not be here - TUFLOW HPC unused AD BC” to be issued spuriously. 7.11 Minor Enhancements and Bug Fixes for 2023-03-AC 7.11.1 Fix to TMax Output in Output Zone Build 2023-03-AC fixes an issue that time of maximum output (Tmax) was not corrected reported for output zone. This issue happened prior to 2023-03-AC if the time of maximum output was requested for output zones only, but not for the entire domain. 7.11.2 Enhancement to Plot Output Memory Allocation Build 2023-03-AC increased the upper limit of the output data size requested by plot output, which is the number of cells selected by plot output objects (points/lines/regions) multiplied by the number of plot output timesteps. Prior to build 2023-03-AC, memory access violation occurred if the requested output data size exceeds 2,147,483,647, because a 4 byte integer was used for indexing. An 8 byte integer is now used for indexing, and users can selected upto 2,147,483,647 plot output cells and request upto 2,147,483,647 plot output timesteps. 7.11.3 Bug Fix to SGS High-Res Output below Sea Surface Level Build 2023-03-AC fixes an issue with SGS High-Res water level output below sea surface level. The output value for the cell corner water level has been initiliased as 0.0m, which caused error in water level output for model located below the elevation of 0.0m. 7.11.4 Quadtree PO Header Rows Swapped Build 2023-03-AC swaps the first two header rows in the _PO.csv for Quadtree. This change aligns the Quadtree output with Classic and HPC. "],["MinEnhancBugFix-1.html", "Section 8 Minor Enhancements and Bug Fixes 8.1 Minor Enhancements and Bug Fixes for 2023-03-AA 8.2 Minor Enhancements and Bug Fixes for 2023-03-AB", " Section 8 Minor Enhancements and Bug Fixes 8.1 Minor Enhancements and Bug Fixes for 2023-03-AA 8.1.1 Geo-Referenced Messages The following messages are now geo-referenced in the 2023-03 Release: CHECK 3520 CHECK 2470 ERROR 1521 ERROR 2443 (when applicable) 8.1.2 Error Message When No Start or End Time is Specified The 2023-03 Release will produce ERROR 2570 if the user has not specified a start or end time. Previously these would default to a start time of zero hours and an end time of one hour. 8.1.3 Warning When 1D_IWL is Used in TCF or TGC The 2023-03 Release will produce WARNING 2073 if a 1d_IWL point is read in through the .tcf or .tgc, indicating it needs to be read in as a 1D command. 8.1.4 Fixes Issue with Return Characters in GIS Attributes The 2023-03 Release fixes a bug that would cause a “Should not be here” when a carriage return was present in a GIS attribute value. This would cause TUFLOW to produce ERROR 2148, however also cause a “Should not be here” while writing the error to the message_P.shp layer. In the 2023-03 Release the ERROR 2148 is now written cleanly to the messages_P.shp file. 8.1.5 Package Model functionality copies matrix blockage files The 2023-03 Release now copies matrix blockage .csv files, previously these were not copied. 8.1.6 .tcf now closed at end of model initialisation All TUFLOW control files (.tcf, .tgc, and .tbc) are opened by TUFLOW as read only, however, these may not have been closed till the end of the simulation which could interfere with some backup or version control software. For 2023-03-AA onwards these control files (.tcf, .tgc, .tbc) are closed at the end of model initialisation. 8.2 Minor Enhancements and Bug Fixes for 2023-03-AB 8.2.1 Ability to Set Hardware via Command Line Argument Build 2023-03-AB introduces the ability to set the hardware via a command line argument. The syntax is -hwgpu or -hwcpu and this will overwrite any “Hardware == ” command specified in the .tcf. This can be used in conjunction with the -nt (number of threads) or -pu (processing unit id) to provide full control over the hardware usage via the command line. The following command could be used to run a model with CPU hardware on 8 threads: TUFLOW_iSP_w64.exe -b -hwcpu -nt8 FS_Hardware_01.tcf The following command could be used to on GPU hardware using 2 devices (GPU 0 and GPU1): TUFLOW_iSP_w64.exe -b -hwgpu -pu0 -pu1 FS_Hardware_01.tcf 8.2.2 Bug Fix for External 1D Engines Build 2023-03-AB fixes an issue which could cause ERROR 2570 (missing start time or end time) from spuriously being output when linked with external 1D engines (12D, Flood Modeller, or XP-SWMM). 8.2.3 File Path Length Errors Build 2023-03-AB will trigger an appropriate TUFLOW error and meaningful message if a file path length error is encountered. Previously this could cause TUFLOW to hang indefinitely. 8.2.4 Enhancement to Processing of Tabs Build 2023-03-AB changes the processing of tab characters within control file commands. These are now replaced with a space character, previously these were deleted. For example: Map Output Data Types == h → d → t Was previously interpreted as: Map Output Data Types == hdt In this instance h (water level) and dt (variable timestep) would be output instead of h (water level), d (depth) and t (viscosity). "],["LicenceAndInstall-1.html", "Section 9 Licencing and Installing", " Section 9 Licencing and Installing For the 2023-03 Release there have been no changes regarding licencing. "],["BackwardCompat-1.html", "Section 10 Backward Compatibility 10.1 Backward Compatibility to the 2020-10 Release", " Section 10 Backward Compatibility 10.1 Backward Compatibility to the 2020-10 Release The following changes have been made to the default settings from build 2020-10-AF. Some of these have specific commands to revert behaviour, for others these can be reverted by setting defaults to pre 2023. These changes are summarised in Table 10.1 below. Changes specific to models with Sub-Grid Sampling (SGS) are summarised in Table 10.2 and changes specific to models with SGS and High Resolution Outputs in Table 10.3. Table 10.1: Changes in Defaults Description of Change Section Backward Compatibility Command Change to quadtree handling of inertial parallel to boundary Section 5.4 Quadtree BC Parallel Inertia Approach == Method A Upper limiting Manning’s n in Wu turbulence calculation Section 4.7.1 Viscosity Coefficient == \\(\\langle\\)C3D, C2D, 99\\(\\rangle\\) Duplicate Materials IDs Section 2.7.2 No specific command - Defaults == Pre 2023 Duplicate Soil IDs Section 2.7.3 No specific command - Defaults == Pre 2023 Duplicate SA Boundaries Section 5.7.2 No specific command - Defaults == Pre 2023 HPC Weir Approach Section 4.2 HPC Weir Approach == Method A HPC SX Momentum Section 5.2 HPC SX Momentum Approach == Method A HPC Boundary Approach Section 5.6 HPC Boundary Approach == Method B Initial Moisture and Green-Ampt infiltration Section 2.3.9 No specific command - Defaults == Pre 2023 Table 10.2: Changes in Defaults - SGS Models Description of Change Section Backward Compatibility Command SGS Approach Section 2.2.2 SGS Approach == Method B SGS Depth Output Section 2.2.1 SGS Depth Output == Exact Mapping of partially wet SGS cells Section 2.2.1 SGS Map Extent Full == h Table 10.3: Changes in Defaults - High Resolution Outputs Description of Change Section Backward Compatibility Command High Resolution raster output interpolation method Section 2.2.5 HR Interpolation Approach == Method A High resolution thin breaklines Section 2.2.6 HR Thin Z Line Output Adjustment == OFF As always, it is recommended when switching to a new Build with an established model that test runs be carried out and comparisons made between the old and new Builds (subtracting the two maximum water level (h) data sets and reviewing any differences is an easy way to do this). If you have any queries on the comparison outcomes, require clarification or more detail on any of the points below, please email support@tuflow.com. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
