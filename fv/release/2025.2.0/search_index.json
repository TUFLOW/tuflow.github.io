[["index.html", "TUFLOW FV 2025.2.0 Release Notes ", " TUFLOW FV 2025.2.0 Release Notes Updated on 27 Aug 2025 "],["introduction.html", "Introduction Document Updates and Important Notices Summary Using the Release Notes and User Manuals Changes to TUFLOW FV Version Numbering", " Introduction Document Updates and Important Notices (in chronological order) January 22, 2025: TUFLOW FV 2025.0.0 is a major release that includes the addition of event, scenario and variable simulation management features, and the ability to decouple the specification of boundary condition block header information. Also included is a range of user experience enhancements and bug fixes. May 27, 2025: The 2025.1.0 Release update includes TUFLOW FV’s new vertical momentum and scalar diffusivity models as the recommended alternative to the external mixing model feature as well as a number of bug fixes and minor enhancements. Changes related to 2025.1.0 are highlighted in light green. June 17, 2025: The 2025.1.1 Release patch includes a fix to hydraulic structures that use the trigger control structure type. Changes related to 2025.1.1 are highlighted in light blue. August 29, 2025: The 2025.2.0 Release update includes TUFLOW FV’s new mass balance output feature as well as a number of bug fixes, minor enhancements, and updates to TUFLOW FV tutorial modules. Changes related to 2025.2.0 are highlighted in peach. For new modelling projects it is recommended to upgrade to Build 2025.2.0 to make use of this new functionality and improved workflows. For existing projects, while we have provided backward compatibility, it is recommended to assess potential changes by completing result comparisons between previous and new builds. Both Windows and Linux operating system builds are available on the TUFLOW Download Page. This document may be updated from time-to-time with new content from software updates. Summary The 2025.0.0 Release includes: Simulation Management Boundary condition specification enhancements User Experience Enhancements GIS Integration including Read TIN Zpts Improved 1d/2d Culvert Warnings/Messages Minor enhancements and fixes The 2025.1.0 Release update includes the new k-epsilon and k-omega Internal Vertical Mixing Model options. No new additional features or bug fixes are included for the TUFLOW FV sediment transport, water quality or particle tracking modules. The 2025.1.1 Release patch includes a fix to hydraulic structures when using the trigger control type. The 2025.2.0 Release update includes TUFLOW FV’s new mass balance output feature as well as a number of bug fixes, minor enhancements, and updates to TUFLOW FV tutorial modules. Using the Release Notes and User Manuals The new features documented within these Release Notes will be included in the next release of the TUFLOW FV user manual. In the interim we recommend using a combination of these Release Notes and latest manuals. Where any conflicts exist, these release notes take priority. If unsure or if you have any queries, please contact support@tuflow.com. Changes to TUFLOW FV Version Numbering As of the current release, the TUFLOW suite of products (which includes TUFLOW FV) has moved to a uniform versioning system. This system uses the year.minor.patch convention that reflects that already adopted by TUFLOW FV. In the new system: The year corresponds to the major version number e.g. 2025.0.0. Major releases are the only releases that will admit the possibility of breaking changes. There will be one major release per year Minor releases contain new features and bug fixes, but no breaking changes and increment the minor version number, e.g. 2025.1.0 Patch releases are bug fixes only and increment the patch version number, e.g. 2025.0.1 "],["SimManagment-1.html", "Section 1 Simulation Management 1.1 Overview 1.2 Nomenclature 1.3 Events 1.4 Scenarios 1.5 Variables 1.6 Simulation Management Example Models", " Section 1 Simulation Management 1.1 Overview Modelling studies often require the simulation of different events or time periods. For example: A coastal study may need to consider different seasons, climate change scenarios, multiple tidal periods or the duration of separate dredging campaigns A storm tide study may consider different potential combinations of tropical cyclone tracks and tides A flood study may have to consider the 0.2, 0.5, 1.0, 2.0, 5.0, 10.0, 20.0 and 50.0% Annual Exceedance Probability (AEP) events and extreme floods A water quality study may require investigation of multiple scenarios to assess the impact of proposed changes or the efficacy of management intervention To assist with associated simulation management and quality control, TUFLOW FV now includes three features as follows, which can be used in combination. Model Events Event management allows running multiple event combinations (e.g. magnitude, duration, temporal patterns, climate change) using a single set of control files rather than creating a new set of control files for every simulation Model Scenarios Model Scenarios provide the framework to allow the simulation of different model configurational options (e.g. proposed bathymetric changes) from a single .fvc control file, rather than needing to create separate control files for each scenario Model Variables Used to assign a user-specified value (that typically appears in multiple locations in a set a control files) to a string variable Details are provided on how to construct and use events, scenarios and variables in the following sections, after an explanation of the general nomenclature used to do so. 1.2 Nomenclature A method of text substitution is required in order to use a single *.fvc control file to support re-execution of numerous events and/or scenarios. TUFLOW FV achieves this by using the tilde ‘~’ symbol to surround substitutable event and scenario names in *.fvc filenames. That is, the name given to a *.fvc control file includes tilde pairs for as many scenarios and events are required to be simulated in combination. This same single control file is then called repeatedly but with differing scenario and event arguments sent to it, that then perform various functions within the *.fvc as described below. These arguments are substituted where tilde pairs are present in the *.fvc filename. For example, if a particular model required consideration of two events (perhaps one inflow and one tidal) and one scenario (perhaps bathymetric settings) then the *.fvc will need to accommodate these three substitutable quantities using tilde pairs, and therefore might be named as follows (where ‘eX’ and ‘sX’ are keywords that refer to events and scenarios, respectively, and X is a sequential integer). Model_~e1~_~e2~_~s1~_001.fvc If in one instance the user had then set e1 to be ‘Q100’, e2 to be ‘HighTide’ and s1 to be ‘BASECASE’, then the above reusable *.fvc would be interpreted as follows. Model_Q100_HighTide_BASECASE_001.fvc Importantly, this *.fvc would not be created as such (doing so would defeat the purpose of using wildcards in a single *.fvc) but the results files the simulation write would be named accordingly. Model_Q100_HighTide_BASECASE_001.nc Model_Q100_HighTide_BASECASE_001.csv This means that only one *.fvc is used, but multiple sets of uniquely named output files are created. In addition to the above tilde substitution for events and scenarios, variables are referred to within *.fvc files using double angled bracket nomenclature. For example, if a user has specified that a variable called DO_HIGH has a value of 6.0, then the variable DO_HIGH can be referenced anywhere subsequently in an *.fvc as &lt;&lt;DO_HIGH&gt;&gt;. An example of setting water quality initial conditions is provided below. Initial WQ Concentration == &lt;&lt;DO_HIGH&gt;&gt; The use of this nomenclature in setting up and executing scenarios and events, and deploying variables, is described following. 1.3 Events Event management allows running multiple event combinations (e.g. magnitude, duration, temporal patterns, climate change) using a single set of control files rather than creating a new set of control files for every simulation. For example, a flood study requires simulation of the 1%, 2% and 5% Annual Exceedence Probability (AEP). Each AEP needs to be run for the 1hr and 2hr storm duration. The number of .fvc files required with and without event management is shown in Figure 1.1. Figure 1.1: Reduction of Control Files using Event Management 1.3.1 TUFLOW Event File Multiple events are set up through the creation of a TUFLOW Event File (recommended extension .tef) containing .fvc commands that are particular to a specific event. The .tef file is referenced in the .fvc file using the command Event File. Up to nine (9) different types of events can be specified for a simulation, although in most cases only one or two is all that is needed. The location of Event File within the .fvc file and the location of the commands within the .tef file are important. Specifically, the commands from the .tef file (for the events specified using the –e run option or the Model Events command) are inserted into the .fvc at the location of the Event File command, and are processed as if they are embedded into the .fvc file at that location. The event file will typically be used to overwrite default command values and therefore Event File is usually placed as the last command, at the bottom of the .fvc file. The following is an example TUFLOW Event File call within the .fvc file. !_________________________________________________________________ ! EVENTS Event File == FLD008_005.tef ! Reference to the TUFLOW Event File Within the .tef, event-specific commands are contained between Define Event and End Define commands, which declare an event block. Define Event contains the name of the event and associated event block. Commands within an event block are either read or ignored at model startup depending on whether the event has been assigned via the –e command line option or by the Model Events command. The options for running events are described in Section 1.3.2. Any TUFLOW FV command can be placed within a define event block, however event blocks are typically used for commands that relate to model boundary conditions, and simulation period, such as start and end times. Global .fvc commands can also be used in the .tef by placing commands outside the Define Event blocks (normally at the top). The new command BC Event Source enables dynamic text replacement within .fvc files at runtime. This approach allows alternative boundary conditions, include files, or model parameters to be modified using a single .fvc file. An example .tef is provided as follows, noting that it conforms to the same general nomenclature as described in Section 1.2 with pairs of tildes surrounding text that is to be substituted. Since these substitutable text strings are not part of a *.fvc control file name, they can be user defined and are not keywords (e.g. ‘aep’ is user defined as below, but e1 is a keyword). ! TUFLOW EVENT FILE (.TEF) defines the parameters for the model events Define Event == Q100 ! Start definition of block of commands for event ‘Q100’   BC Event Source == ~aep~ | 100yr ! Text for runtime substitution   Timestep Limits == 0.01, 0.3 ! Minimum and maximum time steps allowed End Define ! End definition of block of commands for event ‘Q100’ Define Event == 2h ! Start definition of block of commands for event ‘2h’   BC Event Source == ~dur~ | 2hr ! Text for runtime substitution   End Time == 3.0 ! Simulation end time End Define ! End definition of block of commands for event ‘2h’ The BC Event Source and Timestep Limits commands within the event block will be executed if the events ‘Q100’ and ‘2h’ are specified at runtime (refer Running Events) and complete the following function. In the Define Event block the Timestep Limits are selected as a function of the event severity. Timesteps are modified to allow for events with larger water depths and velocities. BC Event Source assigns dynamic text replacement variables for rainfall intensity and storm duration. Using the above event block example as a guide, dynamic text replacement using BC Event Source is governed by the following rules. Replacement of text in directory and file paths to the right of the == is supported. For example: BC == Q, 1, ..\\bc_dbase_~aep~_~dur~.csv becomes: BC == Q, 1, ..\\bc_dbase_100yr_2hr.csv Replacement of command input parameters to the right of the == is supported. For example: BC Header == inflow_time_~dur~, inflow_~aep~_~dur~_FC01 becomes: BC Header == inflow_time_2hr, inflow_100yr_2hr_FC01 Replacement is not allowed in TUFLOW FV command syntax to the left of the ==. For example: BC Header ~aep~ == inflow_time_hr,inflow_~aep~_FC01 Will result in an error due to the ~aep~ to the left of the ==. BC Event Source text replacement is currently limited to .fvc and include file commands. It is not currently available for commands within Sediment Transport (.fvsed), Water Quality (.fvwq) and Particle Tracking (.fvptm) Control Files. 1.3.2 Running Events Two options are available to run multiple events from the same .fvc file: Using a batch file (.bat): Specifying –e or –eX options (where X is a number from 1 to 9) to run the multiple events using the same .fvc file – refer to the Event Examples. This is the recommended approach. Using the Model Events command: Change the events manually before each simulation within the .fvc file. Note that if using the –e option, a .bat file –e events will override any events defined using Model Events within the .fvc. The Model Events command is typically used to set the default event(s). To automatically insert the name of the event(s) into the output filenames so as to make the output names unique, place “~e~” or “~e&lt;X&gt;~” where &lt;X&gt; is a number from 1 to 9 into the .fvc file name as shown in the following example. MODEL_~e1~_001.fvc Can be configured to run any number of e1 event names: - e1=0100F: MODEL_0100F_001.fvc - e1=0200F: MODEL_0200F_001.fvc - e1=0500F: MODEL_0500F_001.fvc - e1=1000F: MODEL_1000F_001.fvc Multiple events can be simulated from the one .fvc file using a batch file. The example below uses three events to vary the event rainfall intensity, duration and temporal pattern. set EXE=C:\\Program Files\\TUFLOWFV\\TUFLOWFV.exe set OMP_NUM_THREADS=4 %EXE% –e1 10pct –e2 01h –e3 T01 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 10pct –e2 01h –e3 T02 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 10pct –e2 02h –e3 T01 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 10pct –e2 02h –e3 T02 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 05pct –e2 01h –e3 T01 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 05pct –e2 01h –e3 T02 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 05pct –e2 02h –e3 T01 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 05pct –e2 02h –e3 T02 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 02pct –e2 01h –e3 T01 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 02pct –e2 01h –e3 T02 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 02pct –e2 02h –e3 T01 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 02pct –e2 02h –e3 T02 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 01pct –e2 01h –e3 T01 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 01pct –e2 01h –e3 T02 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 01pct –e2 02h –e3 T01 Nile_~e1~_~e2~_~e3~_001.fvc %EXE% –e1 01pct –e2 02h –e3 T02 Nile_~e1~_~e2~_~e3~_001.fvc When many events are to be executed, it can be convenient to do so through a series of loops in a batch file, rather than listing multiple rows of (relatively repetitive) commands as above. Native batch file syntax can be used to do so (in Windows), by defining arrays and then looping through these arrays accordingly. For example, the above 16 calls to TUFLOW FV can be written more succinctly (and robustly) as follows. set EXE=C:\\Program Files\\TUFLOWFV\\TUFLOWFV.exe set OMP_NUM_THREADS=4 REM Set arrays e1, e2 and e3 set ev1=10pct 05pct 02pct 01pct set ev2=01h 02h set ev3=T01 T02 REM Loop through arrays for %%a in (%ev1%) do ( for %%b in (%ev2%) do ( for %%c in (%ev3%) do ( %EXE% -e1 %%a -e2 %%b -e3 %%c Nile_~e1~_~e2~_~e3~_001.fvc ) ) ) For further examples on running events from batch files, including advanced batch looping refer to the TUFLOW FV Wiki. 1.3.3 Event Examples Three examples are presented below. Examples 1 and 2 are an estuary model use case that runs a series of simulation years 2016-2018. Example 1 uses one type of event to select the year to run. Example 2 adds a second event to select climate change allowances for inflow and downstream water levels. Example 3 is a catchment model that uses three events to run combinations of rainfall event intensities, durations and temporal patterns. In the examples, note how the start and end time, initial conditions, and output dir commands are used within the event blocks to vary the model configuration as a function of the event simulated. Events Example 1 Within each BC Block: ! ~simperiod~ replaced by event file BC Event Source text BC == Q, Upstream, ..\\bc_dbase\\Estuary_Inflows_~simperiod~.csv  BC Header == Time_UTC, Flow_cumecs, Salinity_ppt, Temp_degC End BC ! ~simperiod~ replaced by event file BC Event Source text BC == WL, Downstream, ..\\bc_dbase\\Estuary_Water_Levels_~simperiod~.csv  BC Header == Time_UTC, Level_mMSL, Salinity_ppt, Temp_degC End BC Include “~e1~” in the .fvc file name, for example “Example_Estuary_~e1~_001.fvc”, and add the following line: Event File == Estuary_Events.tef. The “Estuary Events.tef” file contains the following. !__________________________________________________________________________ ! Global Default Settings Time Format == ISODATE Start Time == 01/01/2016 00:00:00 ! (UTC) Unless Start Time is subsequently repeated start in 2016 !__________________________________________________________________________ ! Simulation Year Event Definitions ! Commands Specific to 2016Define Event == 2016   BC Event Source == ~simperiod~ | 20160101_20170101  ! .fvc file runtime text replacement   End Time == 01/01/2017 00:00:00   Output Dir == ..\\results\\2016   Write Check Files == ..\\check\\2016   Initial Water Level == 0.1   Initial Salinity == 35.0   Initial Temperature == 18. End Define ! Commands Specific to 2017 Define Event == 2017   BC Event Source == ~simperiod~ | 20170101_20180101  ! .fvc file runtime text replacement   Start Time == 01/01/2017 00:00:00   End Time == 01/01/2018 00:00:00   Output Dir == ..\\results\\2017   Write Check Files == ..\\check\\2017   Restart File == ..\\log\\Example_Estuary_2016_001.rst End Define ! Commands Specific to 2018 Define Event == 2018   BC Event Source == ~simperiod~ | 20180101_20190101  ! .fvc file runtime text replacement   Start Time == 01/01/2018 00:00:00   End Time == 01/01/2019 00:00:00   Output Dir == ..\\results\\2018   Write Check Files == ..\\check\\2018   Restart File == ..\\log\\Example_Estuary_2017_001.rst End Define Multiple events can be simulated from the one .fvc file using a batch file. For more information on running batch files refer to the TUFLOW FV Wiki. set EXE=C:\\Program Files\\TUFLOWFV\\TUFLOWFV.exe set OMP_NUM_THREADS=4 %EXE% –e1 2016 Example_Estuary_~e1~_001.fvc %EXE% –e1 2017 Example_Estuary_~e1~_001.fvc %EXE% –e1 2018 Example_Estuary_~e1~_001.fvc Events Example 2 Within each BC Block: ! ~simperiod~ and climate ~clim~ replaced by event file BC Event Source text BC == Q, Upstream, ..\\bc_dbase\\Estuary_Inflows_~simperiod~_~clim~.csv  BC Header == Time_UTC, Flow_cumecs, Salinity_ppt, Temp_degC End BC ! ~simperiod~ and sea level rise allowance ~clim_wl_offset~ replaced by event file BC Event Source text BC == WL, Downstream, …\\bc_dbase\\Estuary_Inflows_~simperiod~.csv  BC Header == Time_UTC, Level_mMSL, Salinity_ppt, Temp_degC  BC Offset == ~clim_wl_offset~, 1.0, 1.0 End BC Include “~e1~” and “~e2~” in the .fvc file name, for example “Example_Estuary_~e1~_~e2~_001.fvc”, and add the line: Event File == Estuary_Events.tef The “Estuary Events.tef” file contains the following: !__________________________________________________________________________ ! Global Default Settings Time Format == ISODATE Start Time == 01/01/2016 00:00:00 ! (UTC) Unless Start Time is subsequently repeated start in 2016 !__________________________________________________________________________ ! Simulation Year Event Definitions ! Commands Specific to 2016 Define Event == 2016   BC Event Source == ~simperiod~ | 20160101_20170101  ! .fvc file runtime text replacement   End Time == 01/01/2017 00:00:00   Output Dir == ..\\results\\2016   Write Check Files == ..\\check\\2016   Initial Water Level == 0.1   Initial Salinity == 35.0   Initial Temperature == 18. End Define ! Commands Specific to 2017 Define Event == 2017   BC Event Source == ~simperiod~ | 20170101_20180101  ! .fvc file runtime text replacement   Start Time == 01/01/2017 00:00:00   End Time == 01/01/2018 00:00:00   Output Dir == ..\\results\\2017   Write Check Files == ..\\check\\2017   Restart File == ..\\log\\Example_Estuary_2016_&lt;&lt;~e2~&gt;&gt;_001.rst  ! &lt;&lt;~e2~&gt;&gt; event name variable End Define ! Commands Specific to 2018 Define Event == 2018   BC Event Source == ~simperiod~ | 20180101_20190101  ! .fvc file runtime text replacement   Start Time == 01/01/2018 00:00:00   End Time == 01/01/2019 00:00:00   Output Dir == ..\\results\\2018   Write Check Files == ..\\check\\2018   Restart File == ..\\log\\Example_Estuary_2017_&lt;&lt;~e2~&gt;&gt;_001.rst  ! &lt;&lt;~e2~&gt;&gt; event name variable End Define !__________________________________________________________________________ ! Climate Change Definitions ! Commands Specific to Existing Climate Conditions Define Event == CC_EXST   BC Event Source == ~clim~ | CC_EXST   BC Event Source == ~clim_wl_offset~ | 0.0    ! Sea level rise End Define ! Commands Specific to 2050 Climate Projections Define Event == CC_2050   BC Event Source == ~clim~ | CC_2050   BC Event Source == ~clim_wl_offset~ | 0.3    ! Sea level rise End Define ! Commands Specific to 2100 Climate Projections Define Event == CC_2100   BC Event Source == | CC_2100   BC Event Source == ~clim_wl_offset~ | 1.0    ! Sea level rise End Define ! Commands Specific to 2150 Climate Projections Define Event == CC_2150   BC Event Source == ~clim~ | CC_2150   BC Event Source == ~clim_wl_offset~ | 1.5    ! Sea level rise End Define Multiple events can be simulated from the one .fvc file using a batch file. For more information on running batch files refer to the TUFLOW FV Wiki. set EXE=C:\\Program Files\\TUFLOWFV\\TUFLOWFV.exe set OMP_NUM_THREADS=4 %EXE% –e1 2016 –e2 CC_EXST Example_Estuary_~e1~_~e2~_001.fvc %EXE% –e1 2016 –e2 CC_2050 Example_Estuary_~e1~_~e2~_001.fvc %EXE% –e1 2016 –e2 CC_2100 Example_Estuary_~e1~_~e2~_001.fvc %EXE% –e1 2016 –e2 CC_2150 Example_Estuary_~e1~_~e2~_001.fvc %EXE% –e1 2017 –e2 CC_EXST Example_Estuary_~e1~_~e2~_001.fvc %EXE% –e1 2017 –e2 CC_2050 Example_Estuary_~e1~_~e2~_001.fvc %EXE% –e1 2017 –e2 CC_2100 Example_Estuary_~e1~_~e2~_001.fvc %EXE% –e1 2017 –e2 CC_2150 Example_Estuary_~e1~_~e2~_001.fvc %EXE% –e1 2018 –e2 CC_EXST Example_Estuary_~e1~_~e2~_001.fvc %EXE% –e1 2018 –e2 CC_2050 Example_Estuary_~e1~_~e2~_001.fvc %EXE% –e1 2018 –e2 CC_2100 Example_Estuary_~e1~_~e2~_001.fvc %EXE% –e1 2018 –e2 CC_2150 Example_Estuary_~e1~_~e2~_001.fvc Events Example 3 The following example shows the setup for a floodplain model with multiple different design rainfall intensities, rainfall durations, and temporal patterns. Within each BC Block: ! Storm intensity, duration and temporal pattern replaced by event file BC Event Source text BC == Q, Nile_River, ..\\bc_dbase\\Inflows\\Nile_~AEP~_~durn~.csv   BC Header == Time_hrs, Flow_cumecs_~tpattern~ End BC ! Storm intensity, duration and temporal pattern replaced by event file BC Event Source text BC == QC, Back_Creek, ..\\bc_dbase\\Inflows\\Back_Creek_~AEP~_~durn~.csv   BC Header == Time_hrs, Flow_cumecs_~tpattern~ End BC Include “~e1~”, “~e2~”, and “~e3~” in the .fvc file name, for example “Nile_~e1~_~e2~_~e3~_001.fvc”, and add the line: Event File == Nile_Events.tef The “Nile Events.tef” file contains the event block logic provided below. !__________________________________________________________________________ ! Global Default Settings Time Format == HOURS Start Time == 0.0 ! Unless Start Time is subsequently repeated all start at time 0 !__________________________________________________________________________ ! Annual Exceedance Probability Definitions Define Event == 10pct  BC Event Source == ~AEP~ | 010pct  Output Folder == ..\\10pct End Define Define Event == 05pct  BC Event Source == ~AEP~ | 05pct  Output Dir == ..\\05pct End Define Define Event == 02pct  BC Event Source == ~AEP~ | 02pct  Output Dir == ..\\02pct End Define Define Event == 01pct  BC Event Source == ~AEP~ | 01pct  Output Dir == ..\\01pct End Define !__________________________________________________________________________________ ! Storm duration definitions Define Event == 01h  BC Event Source == ~durn~ | 01h  End Time == 3.0 End Define Define Event == 02h  BC Event Source == ~durn~ | 02h  End Time == 4.0 End Define !__________________________________________________________________________________ ! Temporal patterns definitions Define Event == T01  BC Event Source == ~tpattern~ | T01 End Define Define Event == T02  BC Event Source == ~tpattern~ | T02 End Define 1.3.4 Additional Functionality 1.3.4.1 Event Logic Blocks Whilst an Event File can be constructed that defines any number of events and their associated commands, event names can also be used within *.fvc files to dynamically issue commands within If… Else If… Else… End If logical blocks. For example, the timestep limits can be set within a *.fvc, depending on the event chosen as follows. Specifically, if any event has one of these names then the timestep limits will be set accordingly. ! Modify the model timestep limits as a function of rainfall intensity If Event == Q1      Timestep Limits == 0.1,1.0 Else If Event == Q10      Timestep Limits == 0.01,0.1 Else If Event == Q50      Timestep Limits == 0.01,0.1 Else If Event == Q100      Timestep Limits == 0.001,0.1 Else      Pause == Should not be here - invalid event specified. End If The Pause command causes TUFLOW FV to stop whenever it is encountered, which in the above case would be if no event had been specified called any of Q1, Q10, Q50 or Q100. ‘Or’ logic can also be used in blocks such as the above by deploying the ‘|’ character. Noting that the Q50 and Q100 Timestep Limits are the same above, the overall block could be written more succinctly as demonstrated in the following example. ! Modify the model timestep limits as a function of rainfall intensity If Event == Q1      Timestep Limits == 0.1,1.0 Else If Event == Q10 | Q50     ! Example ‘OR’ logic using ‘|’ character      Timestep Limits == 0.01,0.1 Else If Event == Q100      Timestep Limits == 0.001,0.1 Else      Pause == Should not be here - invalid event specified. End If 1.3.4.2 Events as Variables Events are also automatically defined as variables and can be assigned accordingly within *.fvc control files. For example, if multiple events (e1) were set up and executed but a separate folder was desired for each events’s suite of outputs, then the following syntax in the *.fvc would accomplish this outcome. Output Dir == ..\\results\\&lt;&lt;~e1~&gt;&gt;\\ If e1 was set be Q2 then the above would be interpreted as Output Dir == ..\\results\\Q2\\ Similar approaches can be applied to other TUFLOW FV *.fvc commands. 1.4 Scenarios When completing project or research work, it is common to require the comparison of the ‘existing’ or ‘base case’ conditions with a future ‘design’, or series of ‘design options’. This may include for example: Earthworks or changes in landuse for a proposed coastal or floodplain development New capital works for a new port, dredge channel, or a series of new channel designs Changes to dam operations Different bridge or structure upgrade options Model Scenarios provide the framework to allow the simulation of different design options from a single .fvc control file, rather than needing to create separate control files for each scenario. The If Scenario feature controls which commands are to be applied depending on the scenario or combination of scenarios specified by the user. Using If Scenario is similar to using If…Else If… Else…End If constructs in a programming or macro language. 1.4.1 Running Scenarios The approach to running scenarios is analogous to Model Events, with the exception that a ‘Scenario File’ similar to the ‘Event File .tef’ is not required. Two options are available to run scenarios from the same .fvc file: Using a batch file (.bat): Specifying –s or –sX options (where X is a number from 1 to 9) to run single, or mutliple scenarios using the same .fvc file – refer to the Scenario Examples. This is the recommended approach. Using the Model Scenarios command: Change the scenarios manually before each simulation within the .fvc file. Note that if using the –s option, a .bat file –s calls will override any scenarios defined using Model Scenarios which is defined within the .fvc. The Model Scenarios command is typically used to set the default scenario(s). To automatically insert the name of the scenario(s) into the output filenames so as to make the output names unique, place “~s~” or “~s&lt;X&gt;~” where &lt;X&gt; is a number from 1 to 9 into the .fvc. For example a study on the Mary River with fvc name: MR_~s1~_~s2~_001.fvc Can be configured to run any number of s1 and s2 scenario. For example: set EXE=C:\\Program Files\\TUFLOWFV\\TUFLOWFV.exe set OMP_NUM_THREADS=4 %EXE% –s1 EXG –s2 BASE MR_~s1~_~s2~_001.fvc %EXE% –s1 DEV –s2 OPT1 MR_~s1~_~s2~_001.fvc %EXE% –s1 DEV –s2 OPT2 MR_~s1~_~s2~_001.fvc %EXE% –s1 DEV –s2 OPT3 MR_~s1~_~s2~_001.fvc becomes: s1=EXG and s2=BASE: MR_EXG_BASE_001.fvc s1=DEV and s2=OPT1: MR_DEV_OPT1_001.fvc s1=DEV and s2=OPT2: MR_DEV_OPT2_001.fvc s1=DEV and s2=OPT3: MR_DEV_OPT3_001.fvc Note that the character length for s1 (3) and s2 (4) is consistent between each run. This is optional. For further examples on running scenarios from batch files, including advanced batch looping refer to the TUFLOW FV Wiki. 1.4.2 Scenario Examples Scenarios Example 1 In a .fvc file: !__________________________________________________________________________________ ! Apply materials Set Mat == 1 ! Set materials to default of 1 Read GIS Mat == shp\\2d_mat_existing.shp ! Apply existing materials If Scenario == opA   Read GIS Mat == shp\\2d_mat_opA.shp ! Option A changes existing materials End If TUFLOW FV will carry out the following steps: Set all material values over the entire 2D domain to a value of 1. Process the 2d_mat_existing.shp layer to assign material values from a layer of land-use polygons representing the existing situation. One of the following will then occur: If “-s1 opA” is specified as a run option in a batch file, or Model Scenarios == opA is specified in the .fvc file, then the 2d_mat_opA.shp layer is processed to modify the material values where Option A has changed the landuse. If “~s1~” occurs within the .fvc filename, it is replaced by “opA” in the output filenames, otherwise “opA” is appended to the .filename for the output filenames. If opA was not specified as a scenario, this layer would be ignored. For example, as would be required if modelling the existing scenario. Example 1 can be extended to include an Option B, where Option B is a modified version of Option A as shown in Example 2a below. Scenarios Example 2a Set Mat == 1 ! Set unspecified materials to default of 1 Read GIS Mat == shp\\2d_mat_existing.shp ! Apply existing materials If Scenario == opA | opB   Read GIS Mat == shp\\2d_mat_opA.shp ! Option A changes to existing materials End If If Scenario == opB   Read GIS Mat == shp\\2d_mat_opB.shp ! Option B changes to Existing and Option A End If In the above example, either “–s opB” or “–s1 opA –s2 opB” can be used for the run options when modelling the Option B scenario. Scenarios Example 2b Set Mat == 1 ! Set unspecified materials to default of 1 Read GIS Mat == shp\\2d_mat_existing.shp ! Apply existing materials If Scenario == opA   Read GIS Mat == shp\\2d_mat_opA.shp ! Option A changes to existing materials End If If Scenario == opB   Read GIS Mat == shp\\2d_mat_opB.shp ! Option B changes to existing materials End If Alternatively, the following would give the same result. Set Mat == 1 ! Set unspecified materials to default of 1 Read GIS Mat == shp\\2d_mat_existing.shp ! Apply existing materials If Scenario == opA   Read GIS Mat == shp\\2d_mat_opA.shp ! Option A changes to existing materials Else If Scenario == opB   Read GIS Mat == shp\\2d_mat_opB.shp ! Option B changes to existing materials End If In the above, either “–s opB” or “Model Scenarios == opB” would be used when modelling Option B. If the Existing, Option A and Option B scenarios all had their own layer of materials for the whole model the commands could be laid out as shown in Example 2c noting the use of the Else option which forces the use of the layer 2d_mat_existing.shp if opA or opB is not specified. Scenarios Example 2c Set Mat == 1 ! Set unspecified materials to default of 1 If Scenario == opA   Read GIS Mat == shp\\2d_mat_opA.shp ! Option A materials for whole model Else If Scenario == opB   Read GIS Mat == shp\\2d_mat_opB.shp ! Option B materials for whole model Else   Read GIS Mat == shp\\2d_mat_existing.shp ! Existing materials for whole model End If Or, a more explicit approach is shown below. Set Mat == 1 ! Set unspecified materials to default of 1 If Scenario == exg   Read GIS Mat == shp\\2d_mat_existing.shp ! Existing materials for whole model Else If Scenario == opA   Read GIS Mat == shp\\2d_mat_opA.shp ! Option A materials for whole model Else If Scenario == opB   Read GIS Mat == shp\\2d_mat_opB.shp ! Option B materials for whole model End If Scenarios Example 3 The If Scenario command can be nested up to 10 levels. The extract below is from an .fvc file of a complex model that calls various model sub-domains at different floodplain mesh resolutions (20m and 60m). The logic as to which other sub-models/boundaries the CAS sub-model needs is built into include files using nested If Scenarios. If Scenario == CAS ! Cell size dependent commands   If Scenario == 20m ### 20m grid Domain     Geometry 2d== ..\\model\\geo\\CAS_20m_001.2dm     Timestep Limits == 0.01, 0.1   Else If Scenario == 60m ### 60m grid Domain     Geometry 2d == ..\\model\\geo\\CAS_60m_001.2dm     Timestep Limits == 0.05, 0.5   Else     Pause == Should not be here - invalid CAS cell size scenario specified.   End If ! Cell size independent commands   Include == ..\\model\\CAS_BCs_001.fvc   Include == ..\\model\\CAS_Outputs_001.fvc End If The Pause command causes TUFLOW FV to stop whenever it encounters it. In the example above, the Pause command is used to pause the simulation and display the message shown as a cross-check that an appropriate cell size scenario has been specified. Any scenarios are automatically set as variables, so have uses parallel to those described for Events above. 1.5 Variables The Set Variable command can be used to assign a user-specified value to a string variable. This command operates at a higher level than If Scenario or If Event logic blocks so that variables can differ within different scenarios/events. Note: Set variable commands can only be specified in the .fvc or within an include file referenced from the .fvc. They are not yet available within sediment, particle or water quality control files. The example below is a floodplain model where two different mesh resolutions are being tested. To manage the size of result output, the variable “NC_OUTPUT_INTERVAL” is used to set the map output interval. In the .fvc file we have the following syntax. !_________________________________________________________________ ! MODEL VARIABLES If Scenario == HRES  Geometry 2D == ..\\model\\geo\\Floodplain_001.2dm  ! High resolution mesh  Set Variable NC_OUTPUT_INTERVAL == 900.         ! Assign variable 900 seconds Else If Scenario == LRES  Geometry 2D == ..\\model\\geo\\Floodplain_002.2dm  ! Low resolution mesh  Set Variable NC_OUTPUT_INTERVAL == 300.         ! Assign variable 300 seconds Else  Pause == Unexpected Scenario Specified - Refer FVC End If The variable NC_OUTPUT_INTERVAL is dynamically replaced at runtime to adjust the NetCDF output interval. Output == NetCDF  Output Parameters == h, v, d, zb  Output Interval == &lt;&lt;NC_OUTPUT_INTERVAL&gt;&gt;  ! Output at 300 or 900 s as a function of Scenario  Output Statistics == max  Output Statistics dt == 1 End Output The Set Variable functionality available in TUFLOW FV 2025.0.0 can be used in combination with the assignment batch/shell script environment variables (Introduced in TUFLOW FV 2023.1). For example: REM Example batch file that uses the environment variable IWL to set initial water level set EXE=C:\\Program Files\\TUFLOWFV\\TUFLOWFV.exe set OMP_NUM_THREADS=4 set IWL=2.0 %EXE% Env_Var_Example.fvc Within the .fvc file the environment variable value is returned via the $ syntax. For example: Initial Water Level == $IWL achieves the same outcome as the variable syntax shown below. Set Variable INITIAL_WL == 2.0 Initial Water Level == &lt;&lt;INITIAL_WL&gt;&gt; 1.6 Simulation Management Example Models TUFLOW FV’s Example Model dataset has been updated with ten new examples models to allow you to test and interact with the new event, scenario and variable functionality. The models can be run without a TUFLOW FV license. "],["HD-1.html", "Section 2 Hydrodynamic Engine Updates and Enhancements 2.1 BC Headers 2.2 GIS Integration Enhancements 2.3 Hydraulic Structure Updates 2.4 Mass Balance 2.5 Minor Enhancements and Fixes", " Section 2 Hydrodynamic Engine Updates and Enhancements 2.1 BC Headers Within a BC block users can now specify boundary condition headers, scale and offset commands independently for hydrodynamics, sediment, tracers and water quality. This decouples the previous single line ordering required for specification of these quantities across modules. This effective subdivision of a previous single BC block’s commands is: Hydrodynamics BC Header == BC Scale == BC Offset == BC Default == Sediment Sed Header == Sed Scale == Sed Offset == Sed Default == Tracer Trace Header == Trace Scale == Trace Offset == Trace Default == Water Quality WQ Header == WQ Scale == WQ Offset == WQ Default == For example, if a model uses the QC boundary condition type, with salinity, temperature, one sediment fraction, one tracer, and one water quality constituent included, the legacy BC block would be written as shown in the below example. BC == QC, STP_Outfall, ..\\bc_dbase_MGL_HIGH_FLOW.csv ! Headers: Q, Salinity, Temperature, Sediment, Tracer, WQ     BC Header == Time,STP_HIGH_FLOW,S,T,CLAY,Tracer_1,HIGH_DO     BC Scale == 1.1,1.2,1.2,1.2,1.2,1.2     BC Offset == 0.1,0.1,2.0,1.5,1.5,1.5     BC Default == 0.0,0.0,22.0,15.0,50.0,10.0 End BC As of TUFLOW FV 2025.0.0, this can be rewritten as follows. BC == QC, STP_Outfall, ..\\bc_dbase_MGL_HIGH_FLOW.csv ! Headers: Q, Salinity, Temperature     BC Header == Time,STP_HIGH_FLOW,S,T     BC Scale == 1.1,1.2,1.2     BC Offset == 0.1,0.1,2.0     BC Default == 0.0,0.0,22.0 ! Sediment header/scale/offset     Sed Header == CLAY     Sed Scale == 1.2     Sed Offset == 1.5     Sed Default == 15.0 ! Tracer header/scale/offset     Trace Header == Tracer_1     Trace Scale == 1.2     Trace Offset == 1.5     Trace Default == 50.0 ! WQ header/scale/offset     WQ Header == HIGH_DO     WQ Scale == 1.2     WQ Offset == 1.5     WQ Default == 10.0 End BC This new approach means that, for example, an additional sediment fraction can be added to the simulation and added to the QC BC block without impacting the subsequent tracer or water quality BC commands. Notes: If users specify headers/scale/offset/default in both the BC Header == , BC Scale == , BC Offset == , and BC Default == commands and any of the subsequent sediment, tracer, or WQ BC commands within a BC block, the values defined in the subsequent sediment/tracer/WQ specification commands will overwrite the BC Header == , BC Scale == , BC Offset == , and BC Default == commands It is recommended to use the BC header/scale/offset/default commands for hydrodynamic, salinity, and temperature headers/scale/offset/default only, while using the sediment, tracer, and WQ-specific commands for their respective variables Reference to the boundary condition time variable should only be specified by the BC Header == command. Time should not be repeated for any of the Sed Header == , Trace Header == , or WQ Header == commands When salinity or temperature functionality is disabled (e.g., Include Salinity == 0, 0), the BC Header == line should be updated accordingly to remove salinity. If this is not undertaken then the undeleted salinity entries will be interpreted as temperature entries Users should always check the log file to verify that the BC variable names match the expected headers in the BC file 2.2 GIS Integration Enhancements 2.2.1 TIN Bathymetry Assignment Cell centre elevations can now be set using a triangulated irregular network (TIN) using the Read TIN Zpts command. Currently the command supports Aquaveo SMS .tin format to set cell centre elevations within the TIN extent. Read TIN Zpts adopts TUFLOW FV’s layering approach and can be used in combination with the following common elevation commands: Set Zpts == Read GRID Zpts == Read GIS Z Line == Cell Elevation File == The below example shows the use of Read TIN Zpts to update mesh elevations for a proposed development. The SMS .tin file is shown in Figures 2.1 and 2.2. Figure 2.1: Design TIN Layout Figure 2.2: Oblique View of Design Mesh Topoography To ‘stamp’ the development elevations onto the mesh, the TIN is specified at a position in the .fvc below the assignment of the existing topography as follows. !_________________________________________________________________ ! GEOMETRY Geometry 2D == ..\\model\\geo\\Floodplain_001.2dm ! Topography Set Zpts == 90. Read Grid Zpts == ..\\model\\geo\\dem_m01.asc Read GIS Z Line == ..\\model\\gis\\2d_zln_M03_thalweg_001_L.shp | ..\\model\\gis\\2d_zln_M03_thalweg_001_P.shp Read GIS Z Line == ..\\model\\gis\\2d_zln_M03_Rd_Crest_001_L.shp | ..\\model\\gis\\2d_zln_M03_Rd_Crest_001_P.shp Read GIS Z Line == ..\\model\\gis\\2d_zln_Invert_Correction_001_R.shp ! Enforce mesh Zb to surveyed culvert invert levels ! New Development Design Earthworks Read TIN Zpts == ..\\model\\geo\\Development_Design.tin If the Write Check Files command is enabled, the resulting model elevations can be reviewed within the mesh check file. 2.3 Hydraulic Structure Updates 2.3.1 Default Culvert Height And Width Contraction Coefficients Culvert width contraction (Width_Cont) and height contraction (Height_Cont) coefficients have been updated to default to 1.0. Previously if the Width_Cont and Height_Cont were not explicitly set in the culvert database file, TUFLOW FV would default to 0.0 resulting in no flow through the structure. Note: The height contraction coefficient Height_Cont for box culverts is usually 0.6 for square edged entrances to 0.8 for rounded edges. This factor is not used and is ignored for circular culverts The width contraction coefficient Width_Cont for box culverts typically varies from 0.9 for sharp edges to 1.0 for rounded edges. This factor is normally set to 1.0 for circular culverts. 2.3.2 Default Culvert Entry and Exit Loss Coefficients Culvert entry loss (Entry_Loss) and exit loss (Exit_Loss) coefficients have been updated to default to 0.5 and 1.0, respectively. Previously if these parameters were set to zero in the culvert database file, TUFLOW FV would default both to 0.0. Setting these to zero now results in these new defaults being applied. Note: If 0.0 is required for either of these coefficients then this can be effectively achieved by setting very small numbers in the culvert database file. Any number greater than 10\\(^{-6}\\) will serve this purpose. 2.3.3 Improved Culvert Invert Checking An error message is now output if 1D culvert inverts are specified below the minimum ground elevation of connected nodestrings or zones. The default error behaviour can be set to a warning using the global .fvc command Culvert Invert Check == WARNING. The error/warning message is output to the TUFLOW FV log file (.log) and the GIS messages layer (located within the log directory) if GIS integration is enabled. An example of the error message is provided below. Downstream culvert invert elevation is 36.50000 Downstream ground elevation (minimum) is 37.50000 ERROR: Culvert downstream invert is less than ground elevation, ID 1 This warning message is provided to highlight areas where the 1D/2D connection may need improvement, or mesh elevations at the inlet or outlet of a culvert structure may need to be amended to reflect surveyed culvert invert levels. 2.3.4 Weir Structure User Defined Width An additional user-defined weir flow width property has been added for the WEIR flux function. This argument, denoted ‘B’ is the seventh argument of the structure block Properties command. For example: Stucture == Linked Nodestrings, Road_US, Road_DS     Flux Function == Weir     Properties == 2.5, 1.705, 1.5, 8.55, 0.556, 0.7, 12.6     ! H, C, Ex, a, b, Csf_min, B (set the weir available flow width to 12.6 meters) End Structure User-defined flow width is supported for linked nodestring and linked zones structure types. It is not supported for single nodestring structure types. If the user-defined width ‘B’ is not specified, the weir width is set either via: The Max Open Width command for linked zones structure types The average of the upstream and downstream nodestring lengths for linked nodestrings structure types The nodestring length for nodestring structure types 2.3.5 Weir Adjust Memory Allocation Fix A fix has been included that addresses a memory allocation issue when using the WEIR_ADJUST, and WEIR_DZ_ADJUST flux function types. 2.3.6 Target Rule Structure Control Fix A fix has been implemented for structures using the Target Rule control type. The value being returned by the control block sample parameter was being incorrectly set to a NaN resulting in zero structure flow. 2.3.7 Control Block Trigger Rule Fix An issue has been resolved with parameter sampling when using the trigger control type. In some models, this caused out-of-bounds memory access, leading to memory corruption and premature model termination. 2.3.8 Porous Structure Linked Structure Fixes The following improvements have been made to the porous flux function for models using linked nodestring or linked zone structure types. A memory allocation issue affecting linked zones has been resolved. The assignment of upstream and downstream water levels for head differential calculation for both linked nodestrings and linked zones has been corrected. Single nodestring structures were not affected. 2.4 Mass Balance Users can now specify an additional output type massbalance that generates a suite of csv files that report timeseries of all time-accumulated volume and mass fluxes within a model domain, as related to all simulated quantities, other than temperature. One csv file is generated for each simulated quantity’s volume or mass balance, and so is intentionally self contained. This allows users to complete their own mass balance analyses on a per-simulated-quantity basis, without additional post processing or reference to any other output files. Each output csv file is named &lt;fvc_name&gt;_MASSBALANCE_&lt;quantity_name&gt;.csv. For example the csv file for the salinity mass balance of simulation River_001.fvc would be named River_001_MASSBALANCE_SALINITY.csv, and written to the nominated results folder. Each csv file has several columns, each reporting a timeseries of mass or accumulated flux, and these columns vary between simulated quantities. The following columns are reported as the first five columns for all simulated quantities: Time Total instantaneous volume or mass of quantity, as computed from TUFLOW FV state variables (which is the same as the mass output) Accumulated fluxes across all QC and QC_POLY boundaries, summed to a single timeseries Accumulated fluxes across all Q boundaries, summed to a single timeseries. This does not include internal nodestring fluxes Accumulated fluxes across all WL, QN and WLS boundaries, summed to a single timeseries. This does not include internal nodestring fluxes Following these columns, a series of bespoke accumulated fluxes are reported, and these depend on the quantity reported. After these bespoke accumulated fluxes, the following four columns are reported for all simulated quantities: Summed accumulated fluxes for the reported quantity, including boundary (columns 3 - 5 above) and all bespoke fluxes, with sign (direction) preserved Instantaneous flux-based volume or mass at time \\(t\\), as computed from summing the volume or mass at time \\(t-1\\) and time \\(t\\) fluxes. This provides an alternative estimate of instantaneous volume or mass that is then compared with the volume or mass reported in column 2. This comparison is reported in the next column Percentage error between the instantaneous volume or mass reported in column 2 and the corresponding flux-based estimate reported in the previous column. For further information on the percentage error calculation refer to the TUFLOW FV Water Quality User Manual mass balance model appendix The number of times the quantity reported has been ‘turned over’ since the beginning of the simulation. This is computed by summing the accumulated absolute values of all fluxes and dividing that sum by the original volume or mass. It is not intended to be an exact quantity to be used for flushing or similar analyses, but rather, to be interpreted as a quantity that provides an indication of the rapidity at which a quantity is cycled through the model domain. For example, a turnover value of 300 for VOLUME at the end of a one month simulation indicates that the modelled domain is dynamic and that water is cycled relatively quickly through the system. Conversely, a turnover value of 0.3 indicates the reverse - the simulated quantity is relatively stable and potentially stagnant. Column headers in each csv file for hydrodynamic simulated quantities are presented in Table 2.1. Acronyms within column headers include: V = Volumetric quantity A = Areal quantity MF = Mass flux FV = TUFLOW FV output or computed from same NS = Nodestring, encompassing WL, WLS and QN boundary types WQ = Water Quality output or computed from same Q = Q boundary type QC = QC or QC_POLY boundary types PCT = Percent Table 2.1: Volume and Mass Flux Headers Column Header Description Units Volume &lt;fvc_name&gt;_MASSBALANCE_VOLUME.csv TIME ISODATE Time FV_VOL Instantaneous volume computed from TUFLOW FV state variables. Always a positive quantity. m\\(^3\\) FV_MF_QC Accumulated volume fluxes across all QC and QC_POLY boundaries, summed to a single timeseries. Can be a positive or negative quantity. m\\(^3\\) FV_MF_Q Accumulated volume fluxes across all Q boundaries, summed to a single timeseries. Can be a positive or negative quantity. m\\(^3\\) FV_MF_NS Accumulated volume fluxes across all WL, WLS and QN boundaries, summed to a single timeseries. Can be a positive or negative quantity. m\\(^3\\) FV_MF_EVAP Accumulated evaporative flux. Always a negative quantity. m\\(^3\\) FV_MF_PREC Accumulated precipitation flux. Always a positive quantity. m\\(^3\\) FV_MF_TOTAL Total of accumulated volume fluxes, with individual signs preserved. Can be a positive or negative quantity. m\\(^3\\) MF_VOLUME Estimate of total volume computed from summing previous timestep volume and current timestep volume fluxes. Always a positive quantity. m\\(^3\\) MF_PCT_ERROR The percentage error of the different between FV_VOL and MF_VOL. Can be a positive or negative quantity. % MF_TURNOVERS See explanatory text (Section 2.4). Always a positive quantity. No units Mass balance outputs are triggered by issuing a massbalance type output block. As for the previously available mass and flux types, the only parameter to be specified for massbalance is the output interval, in seconds. Output == massbalance     Output Interval == 900.0 End Output An example of a mass balance output for volume is presented in Figure 2.3. The quantities in the legend are as per Table 2.1. The figure shows total volume in the top panel and fluxes in the bottom. The water volume balance between catchment inflows and tidal outflows is clear, and the volume of the system considered has turned over approximate 160 times in the period considered. Figure 2.3: Mass balance output: Volume 2.5 Minor Enhancements and Fixes 2.5.1 External Turbulence Scaling When using Vertical Mixing Model == External, the computed eddy viscosity and scalar diffusivity can be optionally scaled through the Vertical Mixing Parameters command. This command requires two parameters: Eddy viscosity scale factor and Scalar diffusivity scale factor. The final (modelled) eddy viscosity and scalar diffusivity are determined as follows. Eddy viscosity = Computed eddy viscosity x Eddy viscosity scale factor Scalar diffusivity = Computed scalar diffusivity x Scalar diffusivity scale factor For example: Vertical Mixing Model == External Vertical Mixing Parameters == 1.0, 1.0  ! {1.0} Eddy viscosity scale factor, {1.0} Scalar diffusivity scale factor 2.5.2 Depth Velocity Product Output Parameter The product of depth and velocity is now available by invoking the map or point output parameter ‘z0’ noting: The 0 in z0 is a zero, not the letter O 2D or 3D map output is supported for NetCDF output format 2D output is calculated by multiplying the water depth by the depth averaged velocity 3D output is calculated by multiplying the water depth by the surface 3D layer velocity Maximum and minimum statistics tracking is supported via the Output Statistics output block command Depth averaged map output is available via XMDF and DATV output formats Point output is supported The following two examples show the output of z0 for NetCDF and Point outputs respectively. Output == NetCDF   Output Parameters == h, v, d, zb, z0   Output Interval == 300.   Output Statistics == max   Output Statistics dt == 1 End Output Output == Points   Read GIS PO == ..\\3d_po_Output_Points_001_P.shp   Output Parameters == h, v, d, rhow, z0   Output Interval == 300. End Output 2.5.3 Additional Point Output Parameters Supported The output parameters outlined in Table 2.2 are now available for point time series output. Each can be specified using the Output Parameters output block command as follows. Output == Points    Read GIS PO == ..\\3d_po_Output_Points_001_P.shp    Output Parameters == h, v, rhow ! water level, vel, density    Output Interval == 900. End Output Table 2.2: Newly Supported Point Output Parameters Point Output Parameter Description Units BEDLOAD_SED_X Bedload for a specific sediment fraction X g/m/s PAR Photsynthetically active radiation - Z-face W/m\\(^2\\) PAR_CC Photsynthetically active radiation - Cell-centered W/m\\(^2\\) RHOW Water density kg/m\\(^3\\) SEDLOAD_SED_X Sediment load for a specific sediment fraction X g/m/s SUSPLOAD_SED_X Suspload for a specific sediment fraction X g/m/s TURBZ Turbulence Output Parameter which includes each of the following TURBZ_ outputs. NA TURBZ_BVFSQ Cell z-face buoyancy production (BRUNT-VAISALA) frequency squared /s\\(^2\\) TURBZ_EPS Cell z-face turbulence dissipation m\\(^2\\)/s\\(^3\\) TURBZ_L Cell z-face turbulence length-scale m TURBZ_NUH Cell z-face vertical temperature diffusivity m\\(^2\\)/s TURBZ_NUM Cell z-face vertical eddy viscosity m\\(^2\\)/s TURBZ_NUS Cell z-face vertical salinity diffusivity m\\(^2\\)/s TURBZ_SPFSQ Cell z-face shear production frequency squared /s\\(^2\\) TURBZ_TKE Cell z-face turbulent kinetic energy m\\(^2\\)/s\\(^2\\) VMAG Velocity magnitude m/s W Vertical velocity m/s WVPERBOT Wave near-bed orbital motion period s WVUBOT Wave near-bed orbital motion amplitude m/s 2.5.4 Improved Boundary Nodestring Overlap Checking TUFLOW FV will now return an error and stop a run if it detects overlap between two or more open boundary nodestrings specified across .2dm and 2d_ns GIS files. If the model has GIS integration enabled, an entry will be added to the GIS messages layer output to the log directory. This can be reviewed in GIS (refer Figure 2.4). Figure 2.4: Nodestring Overlap Check 2.5.5 GPU 3D Drying Z Layer Message Fix This fix concerns an incorrect error message for models using z or z-hybrid 3D layering on GPU hardware. CPU runs are not affected. During simulation, if the top z-layer dried out TUFLOW FV was incorrectly reporting a water level and/or velocity magnitude exceedance message as follows. ERROR: Water Surface and/or Velocity Magntitude has exceeded limits in cell 20 The z-layer drying error message has been fixed and the correct error is now reported. For example: ERROR: Water Surface is less than 0.001m above top zlayer at cell 20 2.5.6 Duplicate Flux File Fix A fix has been added to allow the output of multiple flux output blocks. As shown in the example below, after one flux output block has been specified, subsequent flux output blocks can be added, provided they contain the Suffix command. ! Multiple Flux Outputs Output == flux   Output Interval == 300. ! 5mins End Output Output == flux   Output Interval == 60.   Suffix == HR ! 1min HR (high resolution) End Output 2.5.7 Turbulence Map Output Fix Vertical averaging of the ‘TURBZ’ map output parameter has been added for NetCDF format. Previously TUFLOW FV would exit prematurely. The 2D output of 3D variables is achieved via the Vertical Averaging map output block command. For example: ! Average the results 6 to 12m below the water surface and output as 2D Output == netcdf   Output Parameters == TURBZ ! Cell face turbulence outputs   Output Interval == 900. ! 15mins   Vertical Averaging == depth-range, 6, 12 ! 3D to 2D averaging command End Output 2.5.8 Flux Output Header Fix Flux output csv files have been updated to ensure ‘NS’ is prefixed on all flux file headings. This now supports integer and string nodestring names and provides backward compatibility for existing post-processing scripts such as MATLAB and Python time series extraction. Figure 2.5: Flux Header Fix 2.5.9 Structured Mesh Check File Fix The coordinate field width for the .2dm check file when using regular meshes has been increased to ensure coordinates are written correctly for both spherical and cartesian models. Previously, x and y coordinates were not being correctly delimited for cartesian models, leading to .2dm read errors in supporting GIS software. 2.5.10 Log Directory Command Fix Fixes an issue with log file creation when a tab character follows the Log Dir command. If a tab was present following the Log Dir command TUFLOW FV would previously exit with the error: ERROR: Could not create directory: 2.5.11 GPU 3D Memory Error Fix A memory allocation fix has been included that affected a small subset of 3D models running on GPU. Model set-ups subject to the issue would crash in the first iteration with the error: “NaN value detected in cell”. This issue did not affect simulations run on CPU hardware. 2.5.12 Improved Stability Limit Messages Error messages have been improved for water surface elevation or velocity magnitude limit exceedances when using the Stability Limits == command as described in the below sub-sections. 2.5.12.1 Messages On CPU Hardware Water Level If the model exceeds the water level stability limit: Previously: Water Surface has gone above … m at cell … layer … Now: Imperial Units: Water surface has exceeded stability limit …. ft at 2D cell … Metric Units: Water surface has exceeded stability limit …. m at 2D cell … Velocity If the model exceeds the velocity stability limit: Previously: Velocity has gone above …. m/s at cell …. layer … depth is … Now: Imperial Units 2D Model: Velocity has exceeded stability limit …. ft/s at 2D cell … Imperial Units 3D Model: Velocity has exceeded stability limit …. ft/s at 2D cell … (3D cell … - vertical layer …) Metric Units 2D Model: Velocity has exceeded stability limit …. m/s at 2D cell … Metric Units 3D Model: Velocity has exceeded stability limit …. m/s at 2D cell … (3D cell … - vertical layer …) 2.5.12.2 Messages On GPU Hardware Water Level And Velocity Previously: Water Surface and/or Velocity Magnitude has exceeded limits in cell id … Now: Water surface and/or velocity magnitude has exceeded limits in 2D cell id … 2.5.13 Changes to Cell Face Map Outputs For consistency with other map output parameters, the following output and parameters are now cell-centred whereas they were previously output on z-faces. PAR TURBZ (TURBZ_TKE, TURBZ_EPS, TURBZ_L, TURBZ_SPFSQ, TURBZ_BVFSQ, TURBZ_NUM, TURBZ_NUH, TURBZ_NUS) 2.5.14 Unstructured Mesh Unused Nodes Check A check has been added to identify and report unused nodes in the unstructured mesh when reading a .2dm file via the Geometry 2D command. If unused nodes are found, TUFLOW FV will terminate with an error. For example: 2 unused .2dm nodes found - remove disjoint nodes in mesh. The following information is reported: Unused node IDs are printed to the console. Unused node IDs and their location are written to the model messages GIS layer in the log folder. Unused nodes can be readily removed in Aquaveo SMS via the ‘Select Disjoint’ tool in the 2D Mesh Nodes menu. "],["VMM-1.html", "Section 3 Internal Vertical Mixing Model 3.1 Introduction 3.2 k-ε Vertical Mixing Model 3.3 k-ω Vertical Mixing Model 3.4 Unstratified vs. Stratified Flow Fields 3.5 Internal Wave Mixing Model 3.6 References", " Section 3 Internal Vertical Mixing Model 3.1 Introduction TUFLOW FV 2025.1.0 includes two new Vertical Mixing Model options: the k-epsilon (k-ε) turbulence model (Launder and Spalding, 1974) (Section 3.2) and the k-omega (k-ω) turbulence model (Wilcox, 1988) (Section 3.3). These provide recommended alternatives to the previously available ‘External’ option. Both the k-ε and k-ω models can be optionally extended using the Second Order Model (Section 3.4.1), Vertical Mixing Length Scale Limiter (Section 3.4.2), and Internal Wave Mixing Model (Section 3.5). Model benchmarking results are presented in Appendix B. 3.2 k-ε Vertical Mixing Model The k-ε turbulence model is commonly used in 3D hydraulic modelling. It solves two transport equations for two turbulence variables: Turbulent kinetic energy \\(k\\) Dissipation rate of turbulent kinetic energy \\(\\varepsilon\\) From these, the vertical eddy viscosity \\(\\nu_{t,v}\\) is computed using: \\[ \\nu_{t,v} = C_\\mu \\frac{k^2}{\\varepsilon} \\] where \\(C_\\mu\\) is a model coefficient (default = 0.09). This value of \\(\\nu_{t,v}\\) is then used to close the bulk momentum equations. To activate the k-epsilon model the command Vertical Mixing Model == k-epsilon is used. By default, TUFLOW FV automatically sets the k-ε model parameters using Launder and Spalding (1974) and Rodi (1984) to the values in Table 3.1. These can be overridden using the Vertical Mixing Parameters command. A full description of the science is provided in Appendix A.1. A user-specified minimum limit on the calculated turbulent kinetic energy and dissipation rate can be optionally set using Global Minimum Vertical TKE == \\(k_\\text{min}\\) (default \\(1 \\times 10^{-10}\\) m\\(^2\\)/s\\(^2\\)) and Global Minimum Vertical EPS == \\(\\varepsilon_\\text{min}\\) (default \\(1 \\times 10^{-14}\\) m\\(^2\\)/s\\(^3\\)). ! Activate the k-ε vertical mixing model Vertical Mixing Model == k-epsilon Optionally override default Vertical Mixing Parameters == C1ε, C2ε, Cμ, σk, σε, C3ε+, C3ε− Vertical Mixing Parameters == 1.44, 1.92, 0.09, 1.00, 1.30, 1.00, 0.00 Table 3.1: Vertical Mixing Parameters - k-epsilon Model Parameter Description Default \\(C_{1\\varepsilon}\\) Production-to-dissipation coefficient in the ε-equation source term 1.44 \\(C_{2\\varepsilon}\\) Dissipation rate coefficient in the ε-equation sink term 1.92 \\(C_\\mu\\) Empirical coefficient for eddy viscosity \\(\\nu_t = C_\\mu \\frac{k^2}{\\varepsilon}\\) 0.09 \\(\\sigma_k\\) Turbulent Prandtl number for \\(k\\) (diffusion of \\(k\\)) 1.00 \\(\\sigma_\\varepsilon\\) Turbulent Prandtl number for \\(\\varepsilon\\) (diffusion of \\(\\varepsilon\\)) 1.30 \\(C_{3\\varepsilon+}\\) Buoyancy production term (stable stratification) 1.00 \\(C_{3\\varepsilon-}\\) Buoyancy production term (unstable stratification) 0.00 3.3 k-ω Vertical Mixing Model The k-ω turbulence model deployed by TUFLOW FV follows Wilcox (1988). It solves two transport equations for: Turbulent kinetic energy \\(k\\) Rate of the inverse turbulent time scale \\(\\omega\\) From these, the vertical eddy viscosity \\(\\nu_{t,v}\\) is computed using: \\[ \\nu_{t,v} = \\frac{k}{\\omega} \\] This value of \\(\\nu_{t,v}\\) is then used to close the bulk momentum equations. The model is activated using the command Vertical Mixing Model == k-omega. TUFLOW FV automatically sets the k-ω model parameters to the values provided in Table 3.2 however these can be optionally overidden using the Vertical Mixing Parameters command. A full description of the science is provided in Appendix A.2. A user-specified minimum limit on the calculated turbulent kinetic energy and dissipation rate can be optionally set using Global Minimum Vertical TKE == \\(k_\\text{min}\\) (default \\(1 \\times 10^{-10}\\) m\\(^2\\)/s\\(^2\\)) and Global Minimum Vertical EPS == \\(\\varepsilon_\\text{min}\\) (default \\(1 \\times 10^{-14}\\) m\\(^2\\)/s\\(^3\\)). These values are used to compute the minimum value of \\(\\omega\\) as: \\[ \\omega_{\\text{min}} = \\frac{\\varepsilon_{\\text{min}}}{C_\\mu \\, k_{\\text{min}}} \\] ! Activate the k-ω vertical mixing model Vertical Mixing Model == k-omega Optionally override default Vertical Mixing Parameters == α, β, Cμ, σk, σω, C3ω+, C3ω− Vertical Mixing Parameters == 0.5555, 0.075, 0.09, 2.00, 2.00, 0.00, 0.00 Table 3.2: Vertical Mixing Parameters - k-omega Model Parameter Description Default \\(\\alpha\\) Coefficient in the production term of the \\(\\omega\\)-equation 5/9 \\(\\beta\\) Coefficient in the dissipation term of the \\(\\omega\\)-equation 3/40 \\(C_\\mu\\) Empirical coefficient for eddy viscosity \\(\\nu_t = C_\\mu \\frac{k}{\\omega}\\) 0.09 \\(\\sigma_k\\) Turbulent Prandtl number for \\(k\\) (diffusion of \\(k\\)) 2 \\(\\sigma_\\omega\\) Turbulent Prandtl number for \\(\\omega\\) (diffusion of \\(\\omega\\)) 2 \\(C_{3\\omega+}\\) Buoyancy production term (stable stratification) 0 \\(C_{3\\omega-}\\) Buoyancy production term (unstable stratification) 0 3.4 Unstratified vs. Stratified Flow Fields Whilst the two-equation models introduced above can be used to compute eddy viscosities in unstratiﬁed flows, they are less applicable to stably stratified conditions often featured in lakes, estuaries and the ocean. To reliably compute momentum flux in these conditions, a second order model (Umlauf and Burchard, 2005) and turbulent lengthscale limiter (Galperin et al., 1988) can therefore be optionally applied. 3.4.1 Second Order Model Umlauf and Burchard (2005) proposed a second-order closure formulation to modify the model constant \\(C_\\mu\\), which appears in both turbulence models described above. For stably stratified, curved, or shallow turbulent fields, \\(C_\\mu\\) can become a function of the turbulence parameters being computed (\\(k\\) and \\(\\varepsilon\\)). TUFLOW FV implements the simplified formulation of Umlauf and Burchard (2005). This formulation expresses \\(C_\\mu\\) as a function of the non-dimensional shear number \\(\\alpha_M\\) and buoyancy number \\(\\alpha_N\\). The related stability functions and group IDs (Table A.2.1) are described in Appendix A.2. There is no default group ID, and if not specified TUFLOW FV will return the error: Error reading second order vertical mixing model parameter group flag. ! Enable second-order algebraic formulation for C_μ Second Order Vertical Mixing Model == Algebraic ! Specify parameter group ID for second-order model (no default) Second Order Vertical Mixing Model Parameter Group == GL78 3.4.2 Lengthscale Limiter The turbulent length scale limiter (L) of Galperin et al. (1988) can optionally be applied within TUFLOW FV when computing \\(\\nu_t\\) under stably stratified conditions, using the scheme of Galperin et al. (1988): \\[ L^2 \\leq C_{\\text{Gapl}} \\frac{k}{N^2} \\] where: \\(N^2\\) is the squared Brunt–Väisälä frequency (where \\(N^2 &gt; 0\\), in units of s\\(^{-2}\\)) \\(C_{\\text{Gapl}}\\) is a coefficient (typically \\(C_{\\text{Gapl}} = 0.53\\), as suggested by Galperin et al. 1988) This limiter corresponds to a lower bound on dissipation rates: For the k-ε model: \\[ \\varepsilon \\geq \\frac{C_\\mu^{3/4}}{\\sqrt{2} \\, C_{\\text{Gapl}}} \\cdot \\frac{k}{N} \\] For the k-ω model: \\[ C_\\mu k \\omega \\geq \\frac{C_\\mu^{-1/4}}{\\sqrt{2} \\, C_{\\text{Gapl}}} \\cdot \\frac{1}{N} \\] The length scale limiter is activated using the following commands: ! Apply Galperin et al. (1988) length scale limiter using CGapl Vertical Mixing Length Scale Limiter == 0.53 ! &lt;CGapl&gt; {0.53} 3.5 Internal Wave Mixing Model For mixing below the thermocline or halocline, TUFLOW FV can apply the internal wave mixing model of Kantha and Clayson (1994) to damp turbulence under the influence of internal wave activity and shear instability. The viscosities (\\(\\nu_t\\) and \\(\\nu_h\\)) are modelled as a decreasing function of the gradient Richardson number: For \\(R_i &gt; R_{i,\\text{cr}}\\): \\[ \\nu_t = \\nu_{t,R}, \\quad \\nu_h = \\nu_{h,R} \\] For \\(0 \\leq R_i &lt; R_{i,\\text{cr}}\\): \\[ \\nu_t = \\nu_{t,R} + \\nu_{t,\\text{shear}} \\left[1 - \\left(\\frac{R_i}{R_{i,\\text{cr}}}\\right)^2 \\right]^3 \\] \\[ \\nu_h = \\nu_{h,R} + \\nu_{t,\\text{shear}} \\left[1 - \\left(\\frac{R_i}{R_{i,\\text{cr}}}\\right)^2 \\right]^3 \\] For \\(R_i \\leq 0\\): \\[ \\nu_t = \\nu_{t,R} + \\nu_{t,\\text{shear}}, \\quad \\nu_h = \\nu_{h,R} + \\nu_{t,\\text{shear}} \\] Additional definitions: \\[ R_i = \\frac{N^2}{S^2}, \\quad S = \\sqrt{2 S_{ij} S_{ij}}, \\quad N^2 = -\\frac{g}{\\rho} \\frac{d\\rho}{dz} \\] Where: \\(\\nu_{t,R}\\): Viscosity due to internal waves (default = \\(1 \\times 10^{-4} \\, \\text{m}^2/\\text{s}\\)) \\(\\nu_{h,R}\\): Diffusivity of heat due to internal waves (default = \\(5 \\times 10^{-5} \\, \\text{m}^2/\\text{s}\\)) \\(\\nu_{t,\\text{shear}}\\): Viscosity due to shear instability (default = \\(5 \\times 10^{-3} \\, \\text{m}^2/\\text{s}\\)) \\(R_{i,\\text{cr}}\\): Critical Richardson number (default = 0.7) \\(S\\): Magnitude of the mean strain rate tensor (units: s\\(^{-1}\\)) \\(N^2\\): Brunt–Väisälä frequency squared (units: s\\(^{-2}\\)) \\(g\\): Gravitational acceleration (m/s\\(^2\\)) \\(z\\): Vertical coordinate (m) Turbulence extinction occurs when the turbulent kinetic energy drops below a threshold \\(k &lt; k_{\\text{lim,iw}}\\), with the default \\(k_{\\text{lim,iw}} = 1 \\times 10^{-6} \\, \\text{m}^2/\\text{s}^2\\). The internal wave mixing model is activated using the commands: ! Activate the internal wave mixing model (Kantha and Clayson, 1994) Internal Wave Mixing Model == ON ! {OFF} Optional override of model parameters == klim,iw, Ri,cr, νt,shear, νt,R, νh,R Internal Wave Mixing Model Parameters == 1.0e-6, 0.7, 5.0e-3, 1.0e-4, 5.0e-5 ` 3.6 References Canuto, V.M., Howard, A., Cheng, Y., Dubovikov, M.S. (2001). ‘Ocean turbulence. Part I: one-point closure model. Momentum and heat vertical diffusivities’, Journal of Physical Oceanography, 31, 1413-1426. Cardin, P., and Olson P. (2015) ‘Treatise on Geophysics (Second Edition)’ Ushijima, Y., and Yoshikawa, Y. (2020), ‘Mixed layer deepening due to wind-induced shear-driven turbulence and scaling of the deepening rate in the stratiﬁed ocean’, Ocean Dynamics, 70, 505-512. Cheng, Y., Canuto, V.M., Howard, A.M. (2002). ‘An improved model for the turbulent PBL’, Journal of the Atmospheric Sciences, 59, 1550-1565. Galperin, B., Kantha, L.H., Hassid, S., Rosati, A. (1988). ‘A quasi-equilibrium turbulent energy model for geophysical ﬂows’, Journal of the Atmospheric Sciences, 45, 55-62. Gibson, M.M., Launder, B.E. (1978). ‘Ground effects on pressure ﬂuctuations in the atmospheric boundary layer’, Journal of Fluid Mechanics, 86, 491-511. Launder, B.E., and Spalding, D.B. (1974). ‘The numerical computation of turbulent flows’, Computer Methods in Applied Mechanics and Engineering, 3 (2), 269-289. Kantha, L.H., Clayson, C.A. (1994). ‘An improved mixed layer model for geophysical applications’, Journal of Geophysical Research, 99, 25235-25266. Luyten, P.J., Deleersnijder, E., Ozer, J., Ruddick, K.G. (1996). ‘Presentation of a family of turbulence closure models for stratiﬁed shallow water ﬂows and preliminary application to the Rhine outﬂow region’, Continental Shelf Research, 16, 101-130. Mellor, G.L., Yamada, T. (1982). ‘Development of a turbulence closure model for geophysical ﬂuid problems’, Review of Geophysics, 20, 851-875. Pollard, R.T., Rhines, P.B., Thompson, R.O.R.Y. (1973) ‘The deepening of the Wind-Mixed layer’, Geophysical Fluid Dynamics, 4(4), 381-404. Price, J.F. (1979), ‘On the scaling of stress-driven entrainment experiments’, Journal of Fluid Mechanics, 90(3), 509-529 Rodi, W. (1984). ‘Turbulence models and their application in hydraulics’, Technical Report Institute of the Association for Hydraulic Research, Delft, The Netherlands. Umlauf, L., and Burchard, H. (2005), ‘Second-order turbulence closure models for geophysical boundary layers. A review of recent work’, Continental Shelf Research, 25, 795-827. Wilcox, D.C. (1988), ‘Re-assessment of the scale-determining equation for advanced turbulence models’, AIAA Journal, vol. 26, no. 11, pp. 1299-1310. "],["AD-1.html", "Section 4 Advection Dispersion Module 4.1 Minor Enhancements and Fixes 4.2 Mass Balance", " Section 4 Advection Dispersion Module 4.1 Minor Enhancements and Fixes 4.1.1 Fully Specified Grid Boundary Fix A fix has been added that addresses incorrect water level boundary assignment to the OBC_GRID type boundary. This issue only occurred when the Include Salinity and/or Include Temperature were disabled. 4.2 Mass Balance Users can now specify an additional output type massbalance that generates a suite of csv files that report timeseries of all time-accumulated volume and mass fluxes within a model domain, as related to all simulated quantities, other than temperature. This includes tracers that do not decay or settle. Details of this output are provided in Section 2.4 of these Release Notes. One csv file of timeseries data is generated for each simulated quantity’s mass balance, and each csv file’s headers are therefore unique. The column headers pertaining to tracers are presented and described in Table 4.1, with relevant mass units. Acronyms within column headers include: V = Volumetric quantity A = Areal quantity MF = Mass flux FV = TUFLOW FV output or computed from same NS = Nodestring, encompassing WL, WLS and QN boundary types WQ = Water Quality output or computed from same Q = Q boundary type QC = QC or QC_POLY boundary types PCT = Percent ‘_N’ in the file path refers to tracer number, which increments from 1 upwards to the total number of tracers simulated. One file per tracer is produced. Table 4.1: Tracer Mass Flux Headers Column Header Description Units Salinity &lt;fvc_name&gt;_MASSBALANCE_SALINITY.csv TIME ISODATE Time FV_SAL_MASS Instantaneous mass of salt computed from TUFLOW FV state variables. Always a positive quantity. tonnes FV_MF_QC Accumulated salt fluxes across all QC and QC_POLY boundaries, summed to a single timeseries. Can be a positive or negative quantity. tonnes FV_MF_Q Accumulated salt fluxes across all Q boundaries, summed to a single timeseries. Can be a positive or negative quantity. tonnes FV_MF_NS Accumulated salt fluxes across all WL, WLS and QN boundaries, summed to a single timeseries. Can be a positive or negative quantity. tonnes FV_MF_TOTAL Total of accumulated salt fluxes, with individual signs preserved. Can be a positive or negative quantity. tonnes MF_SAL_MASS Estimate of total salt mass computed from summing previous timestep mass and current timestep mass fluxes. Always a positive quantity. tonnes MF_PCT_ERROR The percentage error of the difference between FV_SAL_MASS and MF_SAL_MASS. Can be a positive or negative quantity. % MF_TURNOVERS See explanatory text (Section 2.4). Always a positive quantity. No units Temperature &lt;fvc_name&gt;_MASSBALANCE_TEMPERATURE.csv Not used Tracer &lt;fvc_name&gt;_MASSBALANCE_TRACER_N.csv TIME ISODATE Time FV_TRC_MASS Instantaneous tracer mass computed from TUFLOW FV state variables. Always a positive quantity. tonnes if TRC in in mg/L FV_MF_QC Accumulated tracer mass fluxes across all QC and QC_POLY boundaries, summed to a single timeseries. Can be a positive or negative quantity. tonnes if TRC in in mg/L FV_MF_Q Accumulated tracer mass fluxes across all Q boundaries, summed to a single timeseries. Can be a positive or negative quantity. tonnes if TRC in in mg/L FV_MF_NS Accumulated tracer mass fluxes across all WL, WLS and QN boundaries, summed to a single timeseries. Can be a positive or negative quantity. tonnes if TRC in in mg/L FV_MF_TOTAL Total of accumulated tracer mass fluxes, with individual signs preserved. Can be a positive or negative quantity. tonnes if TRC in in mg/L MF_TRC_MASS Estimate of total tracer mass computed from summing previous timestep tracer mass and current timestep tracer mass fluxes. Always a positive quantity. tonnes if TRC in in mg/L MF_PCT_ERROR The percentage error of the different between FV_TRC_MASS and MF_TRC_MASS. Can be a positive or negative quantity. % MF_TURNOVERS See explanatory text (Section 2.4). Always a positive quantity. No units "],["ST-1.html", "Section 5 Sediment Transport Module 5.1 Mass Balance", " Section 5 Sediment Transport Module 5.1 Mass Balance Users can now specify an additional output type massbalance that generates a suite of csv files that report timeseries of all time-accumulated volume and mass fluxes within a model domain, as related to all simulated quantities, other than temperature. This includes the suspended sediment mass transport component for all sediment fractions. Bed load mass transport is currently excluded. Details of this output are provided in Section 2.4 of these Release Notes. One csv file of timeseries data is generated for each simulated quantity’s mass balance, and each csv file’s headers are therefore unique. The column headers pertaining to suspended sediment are presented and described in Table 5.1, with relevant mass units. Acronyms within column headers include: V = Volumetric quantity A = Areal quantity MF = Mass flux FV = TUFLOW FV output or computed from same NS = Nodestring, encompassing WL, WLS and QN boundary types WQ = Water Quality output or computed from same Q = Q boundary type QC = QC or QC_POLY boundary types PCT = Percent ‘_N’ in the file path refers to sediment fraction number, which increments from 1 upwards to the total number of sediment fractions simulated. One file per sediment fraction is produced. Table 5.1: Sediment Mass Flux Headers Column Header Description Units Sediment &lt;fvc_name&gt;_MASSBALANCE_SEDIMENT_N.csv TIME ISODATE Time FV_SED_MASS Instantaneous sediment fraction mass computed from TUFLOW FV state variables. Always a positive quantity. tonnes FV_MF_QC Accumulated sediment fraction mass fluxes across all QC and QC_POLY boundaries, summed to a single timeseries. Can be a positive or negative quantity. tonnes FV_MF_Q Accumulated sediment fraction mass fluxes across all Q boundaries, summed to a single timeseries. Can be a positive or negative quantity. tonnes FV_MF_NS Accumulated sediment fraction mass fluxes across all WL, WLS and QN boundaries, summed to a single timeseries. Can be a positive or negative quantity. tonnes FV_MF_NETSED Accumulated sediment fraction mass flux of net sedimentation (i.e. settling and erosion) acros the entire domain, summed to a single timeseries. Can be a positive or negative quantity. tonnes FV_MF_TOTAL Total of accumulated sediment fraction mass fluxes, with individual signs preserved. Can be a positive or negative quantity. tonnes MF_SED_MASS Estimate of total sediment fraction mass computed from summing previous timestep sediment fraction mass and current timestep sediment fraction mass fluxes. Always a positive quantity. tonnes MF_PCT_ERROR The percentage error of the different between FV_SED_MASS and MF_SED_MASS. Can be a positive or negative quantity. % MF_TURNOVERS See explanatory text (Section 2.4). Always a positive quantity. No units "],["WQ-1.html", "Section 6 Water Quality Module 6.1 Mass Balance", " Section 6 Water Quality Module 6.1 Mass Balance Users can now specify an additional output type massbalance that generates a suite of csv files that report timeseries of all time-accumulated volume and mass fluxes within a model domain, as related to all simulated quantities, other than temperature. This includes water quality constituents. Details of this output are provided in Section 2.4 of these Release Notes, and output file header information can be round in Section 4.9.2 of the TUFLOW FV Water Quality User Manual. "],["PT-1.html", "Section 7 Particle Tracking Module 7.1 Minor Enhancements and Fixes", " Section 7 Particle Tracking Module 7.1 Minor Enhancements and Fixes 7.1.1 Multiple Particle Groups Fix A fix has been added that addresses memory overflow errors when running long simulation periods with multiple particle groups. 7.1.2 Spherical Coordinate Particle Position Fix The calculation of particle location at high latitudes has been improved. The particle tracking module updates the Lagrangian particle position using the particle velocity components \\([u, v, w]\\) and the Lagrangian timestep, \\(\\Delta t\\). In the case of a Cartesian coordinate system, the following simple set of equations is used to perform the position update: \\[ x_1 = x_0 + u \\Delta t \\\\ y_1 = y_0 + v \\Delta t \\\\ z_1 = z_0 + w \\Delta t \\] In the case of a Spherical coordinate system, spherical trigonometry is applied to update the Lagrangian particle position on the approximate sphere representing the Earth. The following equations are used to update the particle position in spherical coordinates (latitude and longitude, in radians): \\[ \\begin{align} \\Delta x &amp;= u \\Delta t \\\\ \\Delta y &amp;= v \\Delta t \\\\ \\delta &amp;= \\frac{\\sqrt{\\Delta x^2 + \\Delta y^2}}{R_\\text{Earth}} \\\\ \\theta &amp;= \\frac{\\pi}{2} - \\text{atan2}(\\Delta y, \\Delta x) \\\\ \\text{lat}_1 &amp;= \\arcsin \\left( \\sin(\\text{lat}_0) \\cos(\\delta) + \\cos(\\text{lat}_0) \\sin(\\delta) \\cos(\\theta) \\right) \\\\ \\text{lon}_1 &amp;= \\text{lon}_0 + \\text{atan2} \\left( \\sin(\\theta) \\sin(\\delta) \\cos(\\text{lat}_0), \\cos(\\delta) - \\sin(\\text{lat}_0) \\sin(\\text{lat}_1) \\right) \\\\ z_1 &amp;= z_0 + w \\Delta t \\end{align} \\] Prior to version 2025.1.0, the longitude update was calculated using: \\[ \\text{lon}_1 = \\text{lon}_0 + \\text{atan2} \\left( \\sin(\\theta) \\sin(\\delta), \\cos(\\delta) - \\sin(\\text{lat}_0) \\sin(\\text{lat}_1) \\right) \\] This approximation becomes increasingly inaccurate at high latitudes. This calculation has been corrected in version 2025.1.0. "],["Tools-1.html", "Section 8 Visualisation and Model Development Tools 8.1 XMDF and NetCDF File Locking (HDF5 Compatibility Issues) 8.2 TUFLOW FV Boundary Condition Tools", " Section 8 Visualisation and Model Development Tools 8.1 XMDF and NetCDF File Locking (HDF5 Compatibility Issues) This is an important note concerning the use of recent builds of QGIS, Python or other viewers/libraries that utilise HDF5 1.12 and later to view NetCDF or XMDF result output. This note applies to all TUFLOW FV versions, not only the latest release. HDF5 is a data model, library and file format for storing and managing large data files. Both the Aquaveo XMDF and Unidata NetCDF map output types offered by TUFLOW FV are built on HDF5 components for data storage, compression and management. HDF5 Version 1.12 and later includes new default file locking behaviour that can result in TUFLOW FV model crashes if XMDF or NetCDF results are opened whilst TUFLOW FV is running, regardless if in read only or write modes. Console output will typically display the following errors for NetCDF and XMDF respectively. Figure 8.1: NetCDF File Lock Error Figure 8.2: XMDF File Lock Error Therefore, to avoid a model exiting prematurely it is not recommended to open XMDF or NetCDF if the viewer utilises HDF5 1.12 or later whilst a model is running. The current work-around is to make a copy of results and view the copy, or to wait until the simulation has completed. This issue is temporary, and we are currently working towards a solution which includes upgrading the HDF5, NetCDF and XMDF libraries when suitable updates become available. 8.2 TUFLOW FV Boundary Condition Tools A fix has been made to the Get Atmos boundary condition generation tool that affected datasets downloaded over the prime meridian (longitude = 0.). To guide users, the Get Atmos Wiki has been updated to include several examples of longitude input. "],["Support-1.html", "Section 9 User Manuals, Tutorials and Supporting Materials 9.1 Updated Tutorial Models 9.2 New Example Models 9.3 TUFLOW FV Wiki Updates 9.4 User Manuals", " Section 9 User Manuals, Tutorials and Supporting Materials 9.1 Updated Tutorial Models Tutorials 1-4 have been upgraded to include step-by-step guides on both mesh generation and the TUFLOW FV model build process (refer Table 9.1). Instructions are provided on the TUFLOW FV Tutorial Introduction Page. Table 9.1: New TUFLOW FV Tutorials Tutorial Description Tutorial Model Introduction Instructions and links to the required software installations and downloads to enable completion of the free tutorials. Meshing Module M01 Trapazoidal Channel - Mesh Build Meshing Module M02 Riverine Channel - Mesh Build Meshing Module M03 Coastal Application - Mesh Build Meshing Module M04 Floodplain Application - Mesh Build Tutorial Module M01 Trapazoidal Channel - TUFLOW FV Model Build Tutorial Module M02 Riverine Channel - TUFLOW FV Model Build Tutorial Module M03 Coastal Application - TUFLOW FV Model Build Tutorial Module M04 Floodplain Application - TUFLOW FV Model Build The trapezoidal model mesh and model build tutorials Meshing Module 01 and Tutorial Module 01 have been upgraded with step-by-step video guides. 9.2 New Example Models A series of fifteen new 3D example models have been added to TUFLOW FV’s Example Model Dataset. The 3D Estuary Model example suite primarily focuses on 3D boundary condition types. The Floodplain and Estuary models now include a series of Simulation Management components showcasing TUFLOW FV 2025.0.0’s new event, scenario and variable features. 9.3 TUFLOW FV Wiki Updates The following TUFLOW FV Wiki pages have been upgraded: New User Installation Guide Running TUFLOW FV 9.4 User Manuals The suite of TUFLOW FV user documentation is provided for reference in Table 9.2. Table 9.2: TUFLOW FV Documentation Manual Description TUFLOW FV User Manual The TUFLOW FV User Manual is the primary guide to help users understand the TUFLOW FV software ecosystem and to help with the development of TUFLOW FV models. The User Manual provides detailed instructions and examples on recommended folder structuring, control file setup and command descriptions. The TUFLOW FV User Manual will be released in a web based form in subsequent commercial releases. TUFLOW FV Science Manual The TUFLOW FV Science Manual provides detail on TUFLOW FV’s underlying hydrodynamic and advection dispersion numerical scheme. The TUFLOW FV Science Manual will be released in a web based form in subsequent commercial releases. TUFLOW FV Sediment Transport and Particle Tracking Modules User Manual A comprehensive Sediment Transport and Particle Tracking Modules User Manual is available for use with the Sediment Transport and Particle Tracking Modules of TUFLOW FV. This manual contains Scientific Documentation on the various sediment and particle model options available. The format of the Sediment Control File (.fvsed) and Particle Tracking Control File (.fvptm) is detailed with example code snippets and command appendices also provided. The TUFLOW FV Sediment Transport and Particle Tracking Modules User Manual will be released in a web based form in subsequent commercial releases. TUFLOW FV Water Quality Module User Manual The TUFLOW FV Water Quality User Manual provides a comprehensive online user guide for the TUFLOW FV Water Quality Module. It should be used to support all water quality model builds and simulations as it includes information beyond just commands: it is a full guide to the processes, constituents, diagnostics, demonstration models, science and set up of water quality simulations. It also includes interactive plots and network diagrams to support user understanding. "],["LicensingInstallation-1.html", "Section 10 Licensing", " Section 10 Licensing To run simulations using the Windows or Linux 2025.0.0 build requires payment of 2024/2025 annual software maintenance and for the TUFLOW licence to have been updated (i.e. via RaC/RaU files). No licence is required to run tutorial and demonstration models. To run simulations using the Windows or Linux 2025.1.0 build requires payment of 2024/2025 annual software maintenance and for the TUFLOW licence to have been updated (i.e. via RaC/RaU files). No licence is required to run tutorial and demonstration models. To run simulations using the Windows or Linux 2025.2.0 build requires payment of 2025/2026 annual software maintenance and for the TUFLOW licence to have been updated (i.e. via RaC/RaU files). No licence is required to run tutorial and demonstration models. For licensing enquiries please contact sales@tuflow.com, and for general support contact support@tuflow.com. Use of the TUFLOW software suite is bound by the TUFLOW Products End User Licence Agreement. "],["App-VMMS-1.html", "Appendix A Vertical Mixing Model Science A.1 K-Epsilon Model Science A.2 K-Omega Model Science A.3 Second Order Model Science A.4 References", " Appendix A Vertical Mixing Model Science A.1 K-Epsilon Model Science The k-ε turbulence model solves transport equations for the turbulent kinetic energy \\(k\\) (units: m\\(^2\\)/s\\(^2\\)) and the dissipation rate of turbulent kinetic energy \\(\\varepsilon\\) (units: m\\(^2\\)/s\\(^3\\)): \\[ \\frac{\\partial}{\\partial t} (\\rho k) + \\frac{\\partial}{\\partial x_i} (\\rho k u_i) = \\frac{\\partial}{\\partial x_j} \\left( \\rho \\frac{\\nu_t}{\\sigma_k} \\frac{\\partial k}{\\partial x_j} \\right) + P_k + P_b - \\rho \\varepsilon \\] \\[ \\frac{\\partial}{\\partial t} (\\rho \\varepsilon) + \\frac{\\partial}{\\partial x_i} (\\rho \\varepsilon u_i) = \\frac{\\partial}{\\partial x_j} \\left( \\rho \\frac{\\nu_t}{\\sigma_\\varepsilon} \\frac{\\partial \\varepsilon}{\\partial x_j} \\right) + \\frac{\\varepsilon}{k} \\left( C_{1\\varepsilon} P_k + C_{3\\varepsilon} P_b \\right) - C_{2\\varepsilon} \\rho \\frac{\\varepsilon^2}{k} \\] where: \\(t\\) is time (s) \\(x_i\\) are the coordinates in the three Cartesian directions (m) \\(\\rho\\) is the density of water (kg/m\\(^3\\)) \\(u_i\\) are the mean velocity components in each Cartesian direction (m/s) \\(\\nu_t\\) is the turbulent (eddy) viscosity (m\\(^2\\)/s) \\(P_k\\) and \\(P_b\\) are the production terms of turbulent kinetic energy \\(C_{1\\varepsilon}, C_{2\\varepsilon}, C_{3\\varepsilon}, \\sigma_k, \\sigma_\\varepsilon\\) are model coefficients From \\(k\\) and \\(\\varepsilon\\), the vertical eddy viscosity \\(\\nu_t\\) is calculated as: \\[ \\nu_t = C_\\mu \\frac{k^2}{\\varepsilon} \\] where \\(C_\\mu\\) is a model coefficient (default value: 0.09). The quantity \\(\\nu_t\\) is then used to close the bulk momentum equations. The production term \\(P_k\\) is defined as: \\[ P_k = \\rho \\nu_t S^2 \\] where \\(S\\) is the magnitude of the mean rate of strain tensor: \\[ S = \\sqrt{2 S_{ij} S_{ij}} \\] The production due to buoyancy is estimated as: \\[ P_b = \\rho \\nu_h N^2 \\] where: \\(\\nu_h\\) is the turbulent eddy diffusivity for heat (m\\(^2\\)/s), calculated as \\(\\nu_t / \\text{Pr}_t\\) \\(\\text{Pr}_t\\) is the turbulent Prandtl number (default = 0.74) \\(N^2\\) is the Brunt–Väisälä frequency squared (s\\(^{-2}\\)): \\[ N^2 = -\\frac{g}{\\rho} \\frac{d\\rho}{dz} \\] with: \\(g\\) as the gravitational acceleration (m/s\\(^2\\)) \\(z\\) as the vertical coordinate (m) The following default parameters are used based on Rodi (1984): \\[ \\sigma_k = 1.0, \\quad \\sigma_\\varepsilon = 1.3, \\quad C_{1\\varepsilon} = 1.44, \\quad C_{2\\varepsilon} = 1.92 \\] Different values of \\(C_{3\\varepsilon}\\) can be used depending on the stratification: \\[ C_{3\\varepsilon} = \\begin{cases} C_{3\\varepsilon-} = 0 &amp; \\text{for } N^2 &lt; 0 \\quad \\text{(stable stratification)} \\\\ C_{3\\varepsilon+} = 1 &amp; \\text{for } N^2 \\geq 0 \\quad \\text{(unstable stratification)} \\end{cases} \\] By defining a negative \\(C_{3\\varepsilon-}\\) value using the Vertical Mixing Model Parameters command, the buoyancy production term \\(P_b\\) contributes to dissipation of turbulence under stable stratification. A.2 K-Omega Model Science The k-ω turbulence model solves two transport equations for: Turbulent kinetic energy \\(k\\) (units: m\\(^2\\)/s\\(^2\\)) Rate of the inverse turbulent time scale \\(\\omega\\) (units: s\\(^{-1}\\)) \\[ \\frac{\\partial}{\\partial t} (\\rho k) + \\frac{\\partial}{\\partial x_i} (\\rho k u_i) = \\frac{\\partial}{\\partial x_j} \\left( \\rho \\frac{\\nu_t}{\\sigma_k} \\frac{\\partial k}{\\partial x_j} \\right) + P_k + P_b - \\rho \\varepsilon \\] \\[ \\frac{\\partial}{\\partial t} (\\rho \\omega) + \\frac{\\partial}{\\partial x_i} (\\rho \\omega u_i) = \\frac{\\partial}{\\partial x_j} \\left( \\rho \\frac{\\nu_t}{\\sigma_\\omega} \\frac{\\partial \\omega}{\\partial x_j} \\right) + \\frac{\\omega}{k} \\left( \\alpha P_k + C_{3\\omega} P_b \\right) - \\beta \\rho \\omega^2 \\] where: \\(t\\): Time (s) \\(x_i\\): Cartesian coordinates (m) \\(\\rho\\): Density of water (kg/m\\(^3\\)) \\(u_i\\): Mean velocity components in each Cartesian direction (m/s) \\(\\nu_t\\): Turbulent eddy viscosity (m\\(^2\\)/s) \\(P_k\\), \\(P_b\\): Production terms of turbulent kinetic energy (see Appendix A.1) \\(\\alpha\\), \\(\\beta\\), \\(C_{3\\omega}\\), \\(\\sigma_k\\), \\(\\sigma_\\omega\\): Model coefficients From \\(k\\) and \\(\\omega\\), the vertical eddy viscosity \\(\\nu_t\\) is computed as: \\[ \\nu_t = \\frac{k}{\\omega} \\] This quantity \\(\\nu_t\\) is then used to close the bulk momentum equations. The relationship between the dissipation rate \\(\\varepsilon\\) and the inverse turbulent time scale \\(\\omega\\) is given by: \\[ \\varepsilon = C_\\mu k \\omega \\] where \\(C_\\mu\\) is a model coefficient (default = 0.09). The default values of the model coefficients are taken from Wilcox (1988): \\[ \\alpha = \\frac{5}{9}, \\quad \\beta = \\frac{3}{40}, \\quad \\sigma_k = 2, \\quad \\sigma_\\omega = 2 \\] The default values for \\(C_{3\\omega}\\) are zero for both stable and unstable stratification: \\[ C_{3\\omega} = \\begin{cases} C_{3\\omega-} = 0 &amp; \\text{for } N^2 &lt; 0 \\quad \\text{(stable stratification)} \\\\ C_{3\\omega+} = 0 &amp; \\text{for } N^2 \\geq 0 \\quad \\text{(unstable stratification)} \\end{cases} \\] A negative value for \\(C_{3\\omega-}\\) can be defined using the Vertical Mixing Model Parameters command. This allows the buoyancy production term to act as a sink, dissipating turbulence under stable stratification. Umlauf and Burchard (2005) summarise the recommended values of \\(C_{3\\varepsilon}\\) and \\(C_{3\\omega}\\) for k-ε and k-ω models as a function of the steady-state Richardson number. These are provided in Table A.2.1. A.2.1 Table: Model Parameters C3 for k-ε and k-ω Models Publications Steady-State Richardson Number k-ε Model k-ω Model C(3ε+) C(3ε−) C(3ω+) C(3ω−) Gibson and Launder (1978) 0.201.0-0.5960.0-0.623 0.251.0-0.3700.0-0.492 0.301.0-0.2340.0-0.413 Cheng et al. (2002) 0.201.0-1.0640.0-0.894 0.251.0-0.7440.0-0.709 0.301.0-0.5450.0-0.593 A.3 Second Order Model Science The simplified second-order turbulence closure formulation of Umlauf and Burchard (2005) is: \\[ \\nu_t = C_\\mu(\\alpha_M, \\alpha_N) \\frac{k}{\\varepsilon}, \\quad \\nu_h = C_\\mu&#39;(\\alpha_M, \\alpha_N) \\frac{k}{\\varepsilon} \\] \\[ \\alpha_M = \\tau^2 S^2, \\quad \\alpha_N = \\tau^2 N^2, \\quad \\tau = \\frac{k}{\\varepsilon} \\] The stability functions are written as: \\[ C_\\mu(\\alpha_M, \\alpha_N) = \\frac{n_0 + n_1 \\alpha_N + n_2 \\alpha_M} {d_0 + d_1 \\alpha_N + d_2 \\alpha_M + d_3 \\alpha_N \\alpha_M + d_4 \\alpha_N^2 + d_5 \\alpha_M^2} \\] \\[ C_\\mu&#39;(\\alpha_M, \\alpha_N) = \\frac{n_{b0} + n_{b1} \\alpha_N + n_{b2} \\alpha_M} {d_0 + d_1 \\alpha_N + d_2 \\alpha_M + d_3 \\alpha_N \\alpha_M + d_4 \\alpha_N^2 + d_5 \\alpha_M^2} \\] The model parameters \\(d_X\\) and \\(n_X\\) are defined as: \\[ \\begin{aligned} d_0 &amp;= 36N^3 N_b^2 \\\\\\\\ d_1 &amp;= 84a_5 a_{b3} N^2 N_b + 36N^3 N_b \\\\\\\\ d_2 &amp;= 9(a_{b2}^2 - a_{b1}^2) N^3 + 12(a_2^2 - 3a_3^2) N N_b^2 \\\\\\\\ d_3 &amp;= 12a_5 a_{b3}(a_2 a_{b1} - 3a_3 a_{b2})N + 12a_5 a_{b3}(a_3^2 - a_3^2) N_b + 12a_{b5}(3a_3^2 - a_3^2) N N_b \\\\\\\\ d_4 &amp;= 48a_5^2 a_{b3}^2 N + 36a_5 a_{b3} a_{b5} N^2 \\\\\\\\ d_5 &amp;= 3(a_2^2 - 3a_3^2)(a_{b1}^2 - a_{b2}^2) N \\\\\\\\ n_0 &amp;= 36a_1 N^2 N_b^2 \\\\\\\\ n_1 &amp;= -12a_5 a_{b3}(a_{b1} + a_{b2}) N^2 + 8a_5 a_{b3}(6a_1 - a_2 - 3a_3) N N_b + 36a_1 a_{b5} N^2 N_b \\\\\\\\ n_2 &amp;= 9a_1(a_{b2}^2 - a_{b1}^2) N^2 \\\\\\\\ n_{b0} &amp;= 12a_{b3}^2 N^3 N_b \\\\\\\\ n_{b1} &amp;= 12a_5 a_{b3}^2 N^2 \\\\\\\\ n_{b2} &amp;= 9a_1 a_{b3}(a_{b1} - a_{b2}) N^2 + [6a_1(a_2 - 3a_3) - 4(a_2^2 - 3a_3^2)] a_{b3} N N_b \\end{aligned} \\] The parameters \\(N\\), \\(N_b\\), and the coefficients \\(a_X\\) used in the equations above are defined as: \\[ \\begin{aligned} N &amp;= \\frac{c_1}{2}, \\quad N_b = c_{b1} \\\\\\\\ a_1 &amp;= \\frac{2}{3} - \\frac{1}{2} c_2, \\quad a_2 = 1 - \\frac{1}{2} c_3, \\quad a_3 = 1 - \\frac{1}{2} c_4 \\\\\\\\ a_4 &amp;= \\frac{1}{2} c_5 = 0, \\quad a_5 = \\frac{1}{2} - \\frac{1}{2} c_6 \\\\\\\\ a_{b1} &amp;= 1 - c_{b2}, \\quad a_{b2} = 1 - c_{b3}, \\quad a_{b3} = 2(1 - c_{b4}) \\\\\\\\ a_{b4} &amp;= 2(1 - c_{b5}), \\quad a_{b5} = 2 c_{bb}(1 - c_{b5}) \\end{aligned} \\] The empirical parameters \\(a_X\\) can be chosen from Table A.3.1. A.3.1 Table: Empirical Parameters Group in Second-Order Turbulence Model Parameter GL78 MY86 KC94 LDOR96 CHCD01A CHCD01B CCH02 c13.60006.00006.00003.00005.00005.00005.0000 c20.80000.32000.32000.80000.80000.69830.7983 c31.20000.00000.00002.00001.96801.96641.9680 c41.20000.00000.00001.11801.13601.09401.1360 c50.00000.00000.00000.00000.00000.00000.0000 c60.50000.00000.00000.50000.40000.49500.5000 cb13.00003.72803.72803.00005.95005.60005.5200 cb20.33330.00000.70000.33330.60000.60000.2134 cb30.33330.00000.70000.33331.00001.00000.3570 cb40.00000.00000.00000.00000.00000.00000.0000 cb50.33330.00000.20000.33330.33330.33330.3333 cbb0.80000.61020.61020.80000.72000.47700.8200 PublicationGibson and Launder (1978)Mellor and Yamada (1982)Kantha and Clayson (1994)Luyten et al. (1996)Canuto et al. (2001), version ACanuto et al. (2001), version BCheng et al. (2002) A.4 References References are provided in Section 3.6. "],["App-VMMB-1.html", "Appendix B Vertical Mixing Model Benchmarking B.1 Overview B.2 Open Channel Flow B.3 Wind Circulation B.4 Entrainment Of Wind Mixed Layer B.5 References", " Appendix B Vertical Mixing Model Benchmarking B.1 Overview This section presents the results from three foundational benchmark tests that increase in complexity. Results are compared with theoretical solutions where appropriate. The tests are: Open channel turbulent flow Wind induced circulation in a lake Deepening of a wind-mixed layer The first two tests focus on unstratified flow without the impact of Earth’s rotation, whilst the third test is conducted in stably stratified field, both with and without the action of Coriolis forcing. B.2 Open Channel Flow An open channel flow represents one of the most fundamental turbulent flow scenarios. In this test, an unstratified flow in a 1000 m long, 50 m wide, and 5 m deep rectangular channel with a uniformly rough surface (Manning’s n = 0.03) was investigated. The bed slope was set at 0.00042 to achieve a uniform flow with a depth-averaged velocity of 2 m/s. The horizontal mesh size was 10 m by 10 m, while the vertical mesh size used in the simulations was 0.25 m (Figure B.1). Figure B.1: Model Mesh - Open Channel Flow Benchmark The vertical profile of the velocity follows the Law of the Wall, and the vertical profile of the eddy viscosity \\(\\nu_t\\) is expressed by a parabolic function: \\[ \\nu_t = \\kappa h u_* \\frac{z}{h} \\left(1 - \\frac{z}{h} \\right) \\] Where: \\(\\kappa\\) is the von Karman constant (0.41) \\(h\\) is the water depth (m) \\(z\\) is the vertical coordinate (m) \\(u_*\\) is the bed shear velocity (m/s), calculated as: \\[ u_* = \\left( g^{1/2} n \\right) h^{-1/6} \\bar{U} \\] Where: \\(\\bar{U}\\) is the depth-averaged velocity (\\(m/s\\)) \\(g\\) is the gravitational acceleration (\\(m/s^2\\)) \\(n\\) is the Manning’s ‘n’ roughness (\\(s/m^{1/3}\\)) Figure B.2 presents the vertical profiles of the horizontal velocity and \\(\\nu_t\\) modelled using the k-ε and k-ω turbulence models with default parameters. The solutions of the two models are similar and agree well with the empirical solutions. The k-ω model predicts a higher maximum eddy viscosity at half-depth compared with the k-ε model. Figure B.2: Vertical profiles of horizontal velocity (left) and eddy viscosity (right) in a straight open channel simulated by k-ε and k-ω models B.3 Wind Circulation The wind circulation test represents an unstratified flow in a 1000 m long, 10 m deep, flat-bottomed rectangular lake. The flow is driven by a constant surface wind stress in the x-direction. Momentum is entrained into the deeper layer due to shear stress between vertical layers. A bottom current forms in the opposite direction to the wind forcing in accordance with mass conservation. The horizontal mesh size was 10 m in the wind direction, with a single cell across the width of the lake. The vertical mesh thickness was set to 0.5 m (Figure B.3). Bed roughness effects were assumed negligible, with a roughness length scale \\(k_s = 0.05\\). Figure B.3: Model Mesh - Wind Circulation Benchmark The analytical solution for the vertical velocity profile is: \\[ U(z) = \\frac{u_s}{\\kappa} \\left[1 + \\ln\\left(\\frac{h - z}{h}\\right)\\right] \\] Where the surface shear velocity \\(u_s\\) is given by: \\[ u_s = \\left( \\frac{\\tau_s}{\\rho_w} \\right)^{1/2} \\] And the surface shear stress \\(\\tau_s\\) is calculated from: \\[ \\tau_s = \\rho_a C_d W_{10}^2 \\] Where: \\(u_s\\) is the surface shear velocity (m/s) \\(\\tau_s\\) is the surface shear stress (N/m²) \\(\\rho_w\\) is the water density (= 1000 kg/m³) \\(\\rho_a\\) is the air density (= 1.2 kg/m³) \\(C_d\\) is the wind drag coefficient (0.0013) \\(W_{10}\\) is the wind speed 10 m above the surface (assumed 20 m/s in this test) Assuming the vertical profile of the eddy viscosity also follows a parabolic function, the bed shear velocity can be replaced by the surface shear velocity \\(u_s\\) in the parabolic function below: \\[ \\nu_t = \\kappa h u_s \\frac{z}{h} \\left(1 - \\frac{z}{h}\\right) \\] Figure B.4 presents the vertical profiles of horizontal velocity and \\(\\nu_t\\) modelled using the k-ε and k-ω turbulence models with default parameters. The results from both models agree well with empirical solutions, with the k-ω model showing nearly perfect agreement for velocity. Figure B.4: Vertical profiles of velocity (left) and eddy viscosity (right) driven by constant wind over a rectangular lake, simulated using k-ε and k-ω turbulence models B.4 Entrainment Of Wind Mixed Layer The previous two tests examined unstratified flow at equilibrium. This test simulates the dynamic entrainment and deepening of a wind-driven surface mixed layer in stably stratified flow. Entrainment is driven by surface wind stress, gradually eroding the stratified fluid below. Pollard et al. (1973) proposed a simple model for the deepening of the surface mixed layer. In the absence of the Coriolis force, the evolution of the mixed-layer depth \\(h_{\\text{MLD}}\\) is given by: \\[ h_{\\text{MLD}} = (2 R_{i,b})^{1/4} u_s \\sqrt{\\frac{t}{N_0}} \\] Where: \\(R_{i,b}\\) is the bulk Richardson number \\(u_s\\) is the surface shear velocity (m/s) \\(t\\) is the time since the onset of wind (s) \\(N_0\\) is the initial Brunt–Väisälä frequency (s\\(^{-1}\\)) \\(\\rho_a\\) is the air density (1.2 kg/m³) The test model consisted of one horizontal cell, 50 m deep, with 50 vertical layers. Zero-gradient boundaries were applied on all sides. A constant surface shear stress of 0.1 N/m² was applied in the x-direction. An inverse water temperature profile was used to set an initial stratification of \\(N_0 = 0.01 \\,\\text{s}^{-1}\\). Figure B.5: Model Mesh - Wind Entrainment Benchmark Figure B.6 and Figure B.7 show the development of the surface mixed-layer following wind onset, modelled with the k-ε and k-ω turbulence models, respectively. Dashed lines represent the empirical prediction by Pollard et al. (1973), using \\(R_{i,b} = 0.6\\) as suggested by Price (1979). Both turbulence models in TUFLOW FV reproduce the deepening of the surface mixed layer effectively. Figure B.6: Hovmöller diagrams of velocity (left) and eddy viscosity (right) over time, simulated by k-ε model. Dashed lines show the empirical model by Pollard et al. (1973) Figure B.7: Hovmöller diagrams of velocity (left) and eddy viscosity (right) over time, simulated by k-ω model. Dashed lines show the empirical model by Pollard et al. (1973) Figure B.8 and Figure B.9 present the same wind entrainment test results, but with the second-order turbulence model (Umlauf and Burchard, 2005) enabled. Compared to the results without second-order closure, the eddy viscosity is damped, and the surface mixed-layer develops slightly more slowly. This produces better agreement with the analytical solution of Pollard et al. (1973). Figure B.8: Hovmöller diagrams of velocity (left) and eddy viscosity (right) over time, simulated by k-ε model with second-order turbulence model. Dashed lines show the empirical model by Pollard et al. (1973) Figure B.9: Hovmöller diagrams of velocity (left) and eddy viscosity (right) over time, simulated by k-ω model with second-order turbulence model. Dashed lines show the empirical model by Pollard et al. (1973) B.4.1 Wind Entrainment With Coriolis Forcing The previous simulations were conducted without considering Earth’s rotation. This is valid for small systems (i.e., where characteristic length scales are smaller than the local Rossby radius). However, for larger systems, such as the open ocean away from the equator, the Coriolis force must be considered. It is known to generate features such as Ekman spirals (Figure B.10). Figure B.10: Northern Hemisphere Ekman spiral illustrated by Cardin and Olson (2015) When Ekman spirals form, the velocity oscillates with a characteristic period called the inertial period \\(T_f\\), which is defined by: \\[ T_f = \\frac{2\\pi}{f}, \\quad f = 2\\Omega \\sin\\phi \\] Where: \\(f\\) is the Coriolis parameter (s\\(^{-1}\\)) \\(\\Omega = 7.2921 \\times 10^{-5} \\,\\text{rad/s}\\) (Earth’s angular speed) \\(\\phi\\) is the latitude (degrees) Pollard et al. (1973) suggest that the surface mixed layer deepens rapidly within the first \\(0.5T_f\\) after wind onset, and the rate of deepening decreases significantly thereafter as Ekman spirals form. The predicted mixed-layer depth at \\(0.5T_f\\) is given by: \\[ h_{\\text{MLD}} = (8 R_{i,b})^{1/4} \\frac{u_s}{\\sqrt{N_0 f}} \\] An additional test was conducted at a latitude of 45° north, resulting in a Coriolis parameter of: \\[ f = 1.03 \\times 10^{-4} \\,\\text{rad/s} \\] This corresponds to an inertial period of: \\[ T_f = \\frac{2\\pi}{f} = 16.97 \\,\\text{hours} \\] Figure B.11 and Figure B.12 present the development of velocities in the x-direction (aligned with the wind) and y-direction (perpendicular to the wind). The velocity in the x-direction increased until approximately \\(0.5T_f\\), then decreased until \\(T_f\\). After this, the velocity exhibited periodic oscillations with the inertial period of 16.97 hours. In the y-direction (toward the equator), a negative velocity developed, which also oscillated with the same period, consistent with the formation of an Ekman spiral. As predicted by Pollard et al. (1973), the surface mixed-layer depth increased rapidly until \\(0.5T_f\\), and then continued to increase, but at a much slower rate. The modelled mixed-layer depth agrees well with the analytical prediction at \\(0.5T_f\\), shown as white dashed lines in the figures. The continued deepening beyond \\(0.5T_f\\) aligns with the results from Large Eddy Simulations (LES) performed by Ushijima and Yoshikawa (2020). Figure B.11: Hovmöller diagrams of velocity in the x- (wind direction, top) and y- (perpendicular to the wind, bottom) directions, simulated by k-ε model with the second-order turbulence model enabled Figure B.12: Hovmöller diagrams of velocity in the x- (wind direction, top) and y- (perpendicular to the wind, bottom) directions, simulated by k-ω model with the second-order turbulence model enabled B.5 References References are provided in Section 3.6. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
