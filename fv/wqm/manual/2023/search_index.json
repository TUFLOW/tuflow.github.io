[["index.html", "TUFLOW CATCH User Manual ", " TUFLOW CATCH User Manual July 2024 "],["introduction.html", "Introduction About this manual How to use this manual", " Introduction About this manual This document is the user manual for TUFLOW CATCH. How to use this manual Instructions are provided below on how to use this manual, including aspects of navigation and table filtering. These instructions are not provided elsewhere. Navigation This manual is designed for digital use within any web browser and has the following features: Section headers, to level three, are directly navigable via the left hand pane’s table of contents. This table of contents pane can be toggled on and off from view via the “s” key if more or less page width is required The angled arrows that float at the left and right hand side midpoints of every page can be used to navigate sequentially back and forth to the commencement of preceding or subsequent top level sections Model commands, parameters and cross references for tables and figures are navigable through hyperlinks, where appropriate. This includes parameters within equations, which will also appear as blue hyperlinks when active The space bar can be used to scroll down within each page without skipping text. Shift + space bar will similarly scroll up Browser back and forward buttons (or their equivalent keyboard shortcuts alt + \\(\\langle\\)left arrow\\(\\rangle\\) and alt + \\(\\langle\\)right arrow\\(\\rangle\\), respectively) can be used to navigate through browsing history. Some browsers may not return to the scroll location in a page last visited, but to the last clicked section header. Hyperlinks have been built into the body of the manual, and these can be used in lieu of browser buttons if required It is recommended that this manual be viewed in a browser window that is maximised or operating in full screen mode, with the latter (although browser dependent) typically toggled via the F11 key. When following hyperlinks, the target (i.e. location linked to) is displayed at the top of the landing page. The exception to this occurs when a target is located near the bottom of the landing page’s content. In this case, it is not possible for a web browser to display the target at the top of a page because this would generate underlying white space, and as such, the target will appear in the main body of the landing page. Searching This entire manual content can be searched by using the search box at the top of the table of contents pane (i.e. screen top left near the TUFLOW logo). This search box can be toggled on and off by clicking the search icon (magnifying glass) at the top left of any page. The table of contents is dynamically filtered in response to entering text in the search box, and clicking on any remaining table of contents entry will navigate directly to the searched text. Searched text will be highlighted within a page for easy identification, and multiple instances within one page can be navigated through by using the up and down arrow keys. Clearing the search box will restore the table of contents. Tables Where appropriate, tables are searchable via use of the search box, which is located at the top right of any search enabled table. Not all tables are searchable. When text is entered into the search box, table rows are dynamically filtered to only show those that contain the search text. This allows on-the-fly condensing of large tables so that only relevant content is presented. Tables can be sorted alphabetically (or reverse alphabetically) with respect to any column by clicking column headers. Where appropriate, the number of rows displayed is selectable via the Show entries drop down. Undisplayed rows can be accessed by clicking Previous or Next or by using the numbered navigation boxes, all of which are located at the bottom of each table. Below is an example of a searchable table. Type “lateral” (with or without the inverted commas) into the search box to see the table behaviour, or change the number of rows displayed (given this demonstration table has seven rows, only selecting “5” will change the number of rows displayed) and use the navigation buttons at the bottom of the table to look through all the data. The right hand column has hyperlinked words that allow navigation between related commands, or different versions of the same command, for ease of access. All hyperlinks have been deliberately disabled in this demonstration table, but are active (and explained) in live tables elsewhere in this manual. Command Description Links Catch Output Folder == \\(\\langle\\)folder name\\(\\rangle\\) Used in a global setting block block to control the location to which receiving model boundary condition files are written. \\(\\text{ }\\) Catch Output Interval Nodestring == \\(\\langle\\)dt (s)\\(\\rangle\\) Used in a global setting block block to control the timestep of receiving model boundary condition files written for nodestring inflows. \\(\\text{ }\\) Catch Output Interval Lateral == \\(\\langle\\)dt (s)\\(\\rangle\\) Used in a global setting block block to control the timestep of receiving model boundary condition files written for lateral inflows. \\(\\text{ }\\) CSV Write Frequency Day == \\(\\langle\\)dt (days)\\(\\rangle\\) Used in a global setting block block to control the frequency at which receiving model boundary condition files are written from memory to csv. \\(\\text{ }\\) Date Format == ISODATE Used in a global setting block block to set the time format. \\(\\text{ }\\) Start Date == \\(\\langle\\)dd/mm/yyyy hh:mm:ss\\(\\rangle\\) Used in a global setting block block to set the simulation start date. \\(\\text{ }\\) End Date == \\(\\langle\\)dd/mm/yyyy hh:mm:ss\\(\\rangle\\) Used in a global setting block block to set the simulation end date. \\(\\text{ }\\) Colour coding is often used for distinguishing different tabulated data types. In the above example, TUFLOW CATCH commands are pink and the associated argument options for each command are blue and contained in angled parentheses. Colour coding applied to other table types is explained throughout this manual when required. Commands Where specific commands are described, they appear in highlighted text, and often as a clickable link to the corresponding command description in Appendix 4. That Appendix is a searchable table of all commands, as per the demonstration table presented in this introduction. The below is an example of a TUFLOW CATCH command (the hyperlink has been disabled for this example). \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) Catch Output Folder == Where commands specify parameters (e.g. time steps etc.) then for consistency and brevity, these parameters are included directly in the command example using their notation (see following section that describes notation) rather than descriptive words. These notated parameters are also often a clickable link to descriptive explanations in Appendix ??. The link below is an example of a TUFLOW CATCH command with a parameter presented in notation form. Hyperlinks have been removed in this example. CSV Write Frequency Day == \\(dT_{csv-write}\\) Parameter notation The primary groups of parameters are listed below, with the letter or symbol used to denote each. Typical generalisations of units are parenthesised. Time steps, \\(dT\\) (time, seconds or days) Areal rates, \\(R_a\\) (mass per unit area per unit time) Limits, \\(L\\) (mass per unit area) Concentrations, \\(C\\) (mass per unit volume) Time constants, \\(T\\) (seconds) Rain rates, \\(R_r\\) (millimetres per hour) Rain depths, \\(R_d\\) (millimetres) Shear, \\(\\tau\\) (N per m^2) Typically (but not always) an instance of each of these groups will describe a simulated constituent and a process. Where appropriate, the simulated constituent and process are denoted as superscripts and subscripts, respectively. For example: The areal rate of accumulation of nitrate is notated as \\(R_{acc}^{NO_3}\\) The critical shear stress for erosion of sediment fraction 1 is notated as \\(\\tau_{ero}^{sed1}\\), The rain rate threshold for washoff of particulate organic carbon is notated as \\(R_{r}^{POC}\\) The rain depth threshold for washoff of free reactive phosphorus is notated as \\(R_{d}^{FRP}\\) Feedback Constructive suggestions to improve this manual are welcome, and can be emailed to support@tuflow.com. "],["Overview-1.html", "Section 1 Overview 1.1 Context 1.2 Features 1.3 Configurations 1.4 Science 1.5 Support", " Section 1 Overview 1.1 Context TUFLOW CATCH enables the seamless simulation of whole-of-catchment hydrologic, hydraulic, pollutant export and receiving waterway processes. It supports 1D, 2D and 3D simulation of these processes from top of catchment to receiving waterway outlet via solution of the relevant equations of motion and transport, and without recourse to lumped spatial or temporal assumptions. It draws on the power of GPU acceleration to explicitly simulate catchment water flow and pollutant processes in the surface and subsurface, and automatically reconfigures these predictions to drive downstream multidimensional receiving waterway hydrodynamic, sediment transport and water quality models. This modern framework, that draws on advanced compute capability, allows environmental modellers to holistically manage and understand catchments of interest and their receiving waters in an efficient, integrated and rigourous manner, without the need for manual model linking or reliance on top down average assumption modelling techniques. TUFLOW CATCH’s design is flexible so as to support tailoring of its setup to meet individual application demands and complexity, and allows for execution of multiannual studies such as (but not limited to): Assessment of the efficacy of proposed catchment management interventions (such as installation of constructed wetlands) on downstream receiving riverine or estuarine health Assessment of the interaction of catchment inflows with water supply offtakes or other sensitive receptors Quantitative Microbial Risk Assessments Sediment and other pollutant export catchment dynamics investigations \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) 1.2 Features Several key features have been included in the design of TUFLOW CATCH to support its use. Some are listed below. Simulation engine. To affect whole-of-catchment simulation, TUFLOW CATCH links and augments the power and functionality of two existing TUFLOW engines. This means that the decades of development, expertise and rigour embedded in the TUFLOW suite of products is exploited by TUFLOW CATCH. These existing TUFLOW engines are: TUFLOW HPC: Fixed grid simulation of 2D Surface and subsurface catchment hydrology, hydraulics, pollutant export and transport TUFLOW FV: Flexible mesh simulation of 1D, 2D and 3D receiving waterway hydrodynamic, advection dispersion, heat, sediment transport, water quality and particle tracking. Conceptually, TUFLOW CATCH links and coordinates TUFLOW HPC and TUFLOW FV as Figure 1.1. TUFLOW HPC coverage is represented by the fixed grid icons, and TUFLOW FV shown to be contained within the region enclosed by a brown boundary line Figure 1.1: Conceptual arrangement of TUFLOW CATCH engines Pollutant export. TUFLOW CATCH adds pollutant accumulation and washoff functionality to TUFLOW HPC. Pollutants are able to be accumulated and washed off on a cell by cell basis and under a range of user-selectable algorithms (accumulation or shear stress based, for example), and then routed as surface and surface flows and loads, via solution of the equations of motion and transport (rather than using lumped top down averaging assumptions) Automatic linkage TUFLOW CATCH automatically links the bottom of catchment TUFLOW HPC predictions (for both flow and pollutant loads) to the upstream of TUFLOW FV’s model domain to present a single integrated modelling platform to the user, with no need for manual handling or other post/pre processing. To affect this, TUFLOW CATCH automatically Determines the spatial locations where surface and subsurface waters drain to the user defined TUFLOW FV mesh and designates these as inflow locations to TUFLOW FV, and then Writes the TUFLOW HPC predictions as fully formatted TUFLOW FV inflow boundary conditions files and blocks, either as nodestrings or elements Command syntax. TUFLOW CATCH uses familiar TUFLOW style command == argument(s) syntax that has a long established pedigree within all other TUFLOW products Flexibility of constituents. TUFLOW CATCH can simulate any constituents that are initialised in TUFLOW FV, across all its modules, including sediment transport and water quality Log file user feedback. TUFLOW CATCH simulations generate TUFLOW HPC and TUFLOW FV log files as per usual that report all simulation configuration details for review Results viewing. TUFLOW CATCH has its own freely available QGIS plugin to support viewing and interrogation of combined TUFLOW HPC and TUFLOW FV results, as a single data set, such as Figure 1.2 Figure 1.2: Example of QGIS plugin combined results visualisation 1.3 Configurations The primary configurations for which TUFLOW CATCH is intended to be executed are as follows: Hydrology. The most basic configuration of TUFLOW CATCH is to simulate only water movement through surface and subsurface catchment flows, and to automatically route these into a downstream receiving waterway model. Use cases might include investigation of velocity fields in receiving waterways under a range of separate or continuous catchment inflow regimes, or modification of these fields in response to changes in catchment conditions, such as urbanisation. In this instance, the computational engines would be configured as follows: TUFLOW HPC: Simulate surface and subsurface hydrology, and write inflow boundary condition files for TUFLOW FV TUFLOW FV: Simulate only 2D or 3D barotropic hydrodynamics (i.e. without salinity, temperature or water density simulation) Pollutant export. The next level of functionality offered by TUFLOW CATCH is the addition of pollutant export within the catchment simulation, without the explicit and subsequent simulation of the fate and transport fo these pollutants in a downstream waterway model. Use cases might include investigation of pollutant export properties of a catchment under differing rainfall conditions, or the variation of this export in response to the implementation of intervention measures or land use changes. In this instance, the computational engines would be configured as follows: TUFLOW HPC: Simulate surface and subsurface hydrology, with pollutant accumulation, washoff and transport, and write summary files of total pollutant export at catchment outlet. Inflow boundary condition files for TUFLOW FV would also be written but remain unused TUFLOW FV: No direct simulation, other than to inform TUFLOW HPC of the constituents to be simulated. This is affected through TUFLOW CATCH’s interrogation of the sediment transport and water quality configurations specified in the TUFLOW FV simulation Integrated. This level represents the full functionality offered by TUFLOW CATCH. It augments the Pollutant export configuration above by including the explicit 2D or 3D simulation of the fate and transport of all catchment derived flows and pollutants within the downstream waterway model. Use cases might include the investigation of the efficacy of catchment intervention works on downstream water quality over multiannual periods. In this instance, the computational engines would be configured as follows: TUFLOW HPC: Simulate surface and subsurface hydrology, with pollutant accumulation, washoff and transport, and write summary files of total pollutant export at catchment outlet, as well as inflow boundary condition files for TUFLOW FV TUFLOW FV: Direct simulation of 2D or 3D baroclinic hydrodynamics, with sediment transport and water quality (and optionally particle tracking) as specified by the user If only the simulation of surface and subsurface water flows are of interest with no linkage between TUFLOW HPC and TUFLOW FV (i.e. the Hydrology configuration above but with no linkage to TUFLOW FV), then TUFLOW HPC can be run in isolation without the need for TUFLOW CATCH. Simply setting up and running TUFLOW HPC with appropriate results outputs at bottom of catchment would suffice. If either linkage with TUFLOW FV or simulation of pollutant export is of interest, then TUFLOW CATCH is required. 1.4 Science The science underpinning TUFLOW CATCH is that developed for TUFLOW HPC and TUFLOW FV (including their respective modules) and is described in those user and science manuals: TUFLOW HPC TUFLOW FV TUFLOW FV Sediment Transport module TUFLOW FV Water Quality module TUFLOW FV Particle Tracking module 1.5 Support BMT sells, distributes and supports TUFLOW CATCH. Contact support@tuflow.com or sales@tuflow.com for support and sales inquiries. Several supporting appendices have also been included in this manual. These contain content to assist users in understanding and applying TUFLOW CATCH. These Appendices are interlinked and hyperlinked with content from the body of the manual where appropriate, and are: Appendix ?? Description of command syntax and nomenclature Appendix 4 Listing of all commands, and their syntax, arguments, descriptions and cross references Appendices ?? to ?? Detailed process descriptions, including worked examples using a purpose built small demonstration model The user is directed to the respective manuals noted in Section 1.4 above for TUFLOW HPC and TUFLOW FV commands other than those specific to TUFLOW CATCH. "],["Architecture-1.html", "Section 2 Architecture 2.1 Context 2.2 Simulation Tiers 2.3 Linkage with TUFLOW FV 2.4 Linkage with Other Hydrodynamic Models", " Section 2 Architecture This section provides a description of the WQ Module’s architecture. This description is intentionally introductory, and details required to set up and execute simulations that deploy the WQ Module are provided in Section 3. The manual’s introduction should be reviewed for instructions regarding the use of interactive components deployed in this manual. \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) 2.1 Context As our understanding of the natural environment advances, the questions asked of water quality and ecological numerical models are rapidly increasing in breadth and complexity. Setting up, calibrating and executing defensible environmental models has therefore become an increasingly challenging proposition. The architecture of the WQ Module has been deliberately designed to assist users in overcoming some of these challenges, and in doing so improve the efficiency and effectiveness with which numerical modelling can support environmental management. Importantly, the WQ Module’s architecture provides a mechanism by which users can rapidly initiate and execute water quality simulations without (at least in early modelling stages) concerning themselves with the often time consuming set up and parameterisation of simulated environmental processes. In short, the WQ Module has been designed to provide immediate and easy access to its supporting state of the art environmental modelling science. The architecture that provides this easy access is tiered and these tiers are described below. 2.2 Simulation Tiers The WQ Module’s tiers are described below using the nomenclature of Figure 2.1. Every WQ Module simulation has the following tiers: Tier 1: Exactly one instance from a simulation class. This is user defined Tier 2: A suite of instances from a model class. The suite (and therefore number) of these instances is preset per simulation class. The exceptions to this are the phytoplankton and pathogen model classes, which when included in a simulation class can have as many instances within the suite as required by the user, with one instance (the default) per simulated phytoplankton or pathogen group Tier 3: Exactly one constituent model per model class instance (these are user selectable and there may be more than one constituent model available to choose from within a given model class instance) Tier 4: At least one computed variable per constituent model (the suite of computed variables is preset within each constituent model) Figure 2.1: WQ Module tiers Notwithstanding the above, a user need not specify any of the above in order to rapidly set up and execute a first pass WQ Module simulation. In this case, the WQ Module will automatically set the simplest instances of the simulation class, model classes, constituent models and computed variables by drawing on library defaults. Simulation tiers are described below. 2.2.1 Tier 1: Simulation Class This is the highest and overarching tier of the WQ Module’s architecture. Using a single command, this tier sets the overall water quality simulation structure, including the suite of model classes to be deployed (with potentially multiple phytoplankton or pathogen model classes), and therefore the corresponding suite of constituent models and computed variables. The available simulation classes are provided in Table 2.1 as their keywords, together with example uses of each. The simulation class instances are cumulative, that is, a more complex class instance will include all the capability of simpler class instances. Complexity increases with table row in Table 2.1. Table 2.1: WQ Module simulation class instances Simulation Class Instance Potential Uses DO Simulation of rudimentary dissolved oxygen dynamics such as:\\(\\cdot\\blockindent\\)Desalination return water impact analyses\\(\\cdot\\blockindent\\)Seasonal reservoir oxygen analyses\\(\\cdot\\blockindent\\)Agricultural drain oxygen analyses Inorganics Simulation of relatively simple aquatic ecosystems that experience primary productivity such as:\\(\\cdot\\blockindent\\)Shallow urban lakes\\(\\cdot\\blockindent\\)Smaller estuaries\\(\\cdot\\blockindent\\)Coastal ocean zones that are relatively free of organic materials or sediments\\(\\cdot\\blockindent\\)Mine voids Organics Simulation of more complex aquatic ecosystems such as:\\(\\cdot\\blockindent\\)Impacted coastal embayments or nearshore zones\\(\\cdot\\blockindent\\)Impacted lakes\\(\\cdot\\blockindent\\)Larger estuaries\\(\\cdot\\blockindent\\)Wetlands\\(\\cdot\\blockindent\\)Aquaculture operations\\(\\cdot\\blockindent\\)Environments receiving point and/or diffuse source organic pollutants Users can simply specify one preset simulation class (e.g. “organics”) in a water quality control file (Section 3.4 and following sections), and the WQ Module will draw on inbuilt library defaults to automatically construct and execute a water quality simulation, with no further user input required (beyond specification of water quality initial conditions, see Section 3.4.2). For example, a user may simply specify simulation class == organics and initial conditions, and the WQ Module will construct itself, execute and report simulation details via a log file. This initial level of simplicity is intended. 2.2.2 Tier 2: Model Class Each simulation class instance contains a preset suite of model class instances. These suites cannot be changed (although there may be multiple phytoplankton or pathogen model class instances), and are provided in Table 2.2 and as a network in Figure 2.2. For example, simulation class instance “inorganics” has the fixed suite of oxygen, silicate, inorganic nitrogen, inorganic phosphorus and (potentially multiple) phytoplankton model class instances. The exception to this is pathogens. These can be optionally simulated in any simulation class (or none), and if simulated, potentially multiple pathogen model classes can be included. Table 2.2: WQ Module simulation class instances and corresponding preset model class suites Simulation Class Instance Model Class Suite DO \\(\\cdot\\blockindent\\)Oxygen\\(\\cdot\\blockindent\\)Pathogens (optional, potentially multiple) Inorganics \\(\\cdot\\blockindent\\)Oxygen\\(\\cdot\\blockindent\\)Silicate\\(\\cdot\\blockindent\\)Inorganic Nitrogen\\(\\cdot\\blockindent\\)Inorganic Phosphorus\\(\\cdot\\blockindent\\)Phytoplankton (potentially multiple)\\(\\cdot\\blockindent\\)Pathogens (optional, potentially multiple) Organics \\(\\cdot\\blockindent\\)Oxygen\\(\\cdot\\blockindent\\)Silicate\\(\\cdot\\blockindent\\)Inorganic Nitrogen\\(\\cdot\\blockindent\\)Inorganic Phosphorus\\(\\cdot\\blockindent\\)Organic matter\\(\\cdot\\blockindent\\)Phytoplankton (potentially multiple)\\(\\cdot\\blockindent\\)Pathogens (optional, potentially multiple) Figure 2.2: WQ Module simulation class and model class instances 2.2.3 Tier 3: Constituent Model Whilst the suite of model class instances is set per simulation class instance, constituent models are interchangeable within a model class. In this way, a simulation class instance (at Tier 1) can be customised at the constituent model tier (at Tier 3), despite having a preset suite of model classes (at Tier 2, with potentially multiple phytoplankton and/or pathogen model class instances). Available constituent models are provided in Table 2.3, and presented graphically in Figure 2.3 as a direct extension of Figure 2.2. Pathogen model classes (and therefore constituent models) are always optional. Table 2.3: WQ Module model classes and corresponding available constituent models Model Class Available Constituent Models Oxygen O2 Silicate Si Inorganic Nitrogen AmmoniumNitrate Inorganic Phosphorus FRPhs FRPhsads Organic Matter Labile Refractory Phytoplankton Basic Advanced Pathogens Free Attached Figure 2.3: WQ Module simulation class and model class instances, with available constituent models For example, multiple inorganic phosphorus constituent models are available within the inorganic phosphorus model class, where these models execute different water quality processes and contain different computed variables. In this example, this can be set with a single line command: inorganic phosphorus model == frphsads \\(\\blockindent\\) \\(\\langle commands \\rangle\\) end inorganic phosphorus model This allows a user to interchange one phosphorus constituent model for another within the inorganic phosphorus model class, thereby customising the overarching simulation class instance. The environmental processes simulated within each constituent model are fixed. Despite this, these processes can nonetheless be switched on and off as required, offering an additional layer of customisation. For example, if oxygen is not required to be included in silicate sediment flux calculations, the linkage between these processes and oxygen can be turned off by setting: oxygen == off Alternatively, if a user wishes to simulate all inorganic processes other than nitrification for example, then the rate describing this unwanted process can simply be set to zero (as per the following command - the first numerical argument is the nitrification rate) and it will be turned off. All library defaults also set rate processes to zero. \\(\\blockindent\\) nitrification == 0.0, 0.0, 1.0 All processes included within each constituent model, and their respective WQ Module commands, are described in Sections ?? and 3, respectively. 2.2.4 Tier 4: Computed Variables Each Tier 3 constituent model contains a fixed set of computed variables. Table 2.4 (which is a direct extension of Table 2.3) provides the mapping between model classes, constituent models and their associated computed variables. These maps are also provided graphically in Figure 2.4, which is an extension of Figure 2.3, but presented in a non-hierarchical form. Click or hover over nodes to track their paths up or down the simulation tree. For clarity, Figure 2.4 (and elsewhere within this manual) uses acronyms for some computed variable names, and these acronyms are expanded in Appendix ??. All references in this manual to “organic matter” are to labile organic computed variables, unless specifically termed as refractory. Table 2.4: WQ Module model classes, available constituent models and computed variables Model Class Available Constituent Models Computed Variables Oxygen O2 Dissolved oxygen Silicate Si Silicate Inorganic Nitrogen AmmoniumNitrate AmmoniumNitrate Inorganic Phosphorus FRPhs Filterable reactive phosphorus (FRP) FRPhsads FRPAdsorbed FRP Organic Matter Labile Labile dissolved and particulate organic carbon, nitrogen and phosphorus Refractory Labile dissolved and particulate organic carbon, nitrogen and phosphorusRefractory dissolved carbon, nitrogen and phosphorus and refractory particulate organic matter Phytoplankton Basic Phytoplankton concentration and optionally cell density Advanced Phytoplankton concentration, internal nitrogen, internal phosphorus and optionally cell density Pathogens Free Pathogen alive and dead concentrations Attached Pathogen alive, attached and dead concentrations Figure 2.4: WQ Module simulation class and model class instances, available constituent models and computed variables Parameters that govern the behaviour of computed variables are set within each constituent model. Parameters that are not set by the user are populated automatically from the WQ Module library defaults. 2.3 Linkage with TUFLOW FV 2.3.1 Process Support is currently provided for linkage of the WQ Module with TUFLOW FV. Within this linkage, TUFLOW FV considers the WQ Module as a peripheral model with which it interacts at arm’s length. The role of TUFLOW FV is that it (in approximate run time order): Requests the number of water quality constituents from the WQ Module at start up, based on user setup specifications (e.g. the setting of the simulation class instance, with any constituent model modifications) Automatically sets up the corresponding number of tracers (one for each computed variable) within its simulation (users do not specify these tracers) Is then responsible for the: Application of WQ Module initial conditions Conservative advection and dispersion of these tracers (that represent the WQ Module’s computed variables) Application of WQ Module boundary conditions Calling the WQ Module at a user specified time step for the WQ Module to execute non-conservative transformation calculations on the suite of passive tracers Writing of WQ Module results files For example, if a WQ Module simulation was set to consider only dissolved oxygen, then TUFLOW FV would automatically allocate one tracer for the dissolved oxygen variable (the user does not need to specify passive tracers within TUFLOW FV), and advect and disperse that tracer throughout the model domain in response to initial and boundary conditions. At a user defined interval, TUFLOW FV would send the two- or three-dimensional tracer concentration field to the WQ Module for it to be modified in response to non-conservative ecological processes The WQ Module would then return this modified tracer field to TUFLOW FV for subsequent advection and dispersion, with this exchange process continuing to simulation end. 2.3.2 Treatment of light The TUFLOW FV heat module must be activated in order to use the WQ Module. One reason for this (beyond the need to compute water temperature) is that the heat module includes calculation of the light field within the model domain. This light field is used by various WQ Module constituent models. In order to provide this light field, TUFLOW FV splits the shortwave radiation specified in the heat module into four bands: near infrared (NIR) photosynthetically available radiation (PAR) ultraviolet A (UVA), and ultraviolet B (UVB) This split can be executed using TUFLOW FV defaults (recommended), or be user specified (not recommended). The corresponding band extinction coefficients in water with zero suspended sediment can also be specified in TUFLOW FV. Defaults are also available for all these coefficients and are recommended. TUFLOW FV uses these coefficients, along with other simulation properties, to compute the four light band intensities at the faces and centroids of each computational cell. The WQ Module uses the same split into bands as the TUFLOW FV defaults and ensures consistency in the treatment of light between TUFLOW FV and the WQ Module. The WQ Module can also modify the light field sent to it from TUFLOW FV via calculation of phytoplankton self shading (section ??), the absorption of light due to the presence of organic matter and other processes. If this occurs, the WQ Module returns a modified light extinction coefficient field to TUFLOW FV that is then used in subsequent hydrodynamic heat and light calculations. This modification of light by water quality computed variables only occurs for simulation classes beyond DO. 2.4 Linkage with Other Hydrodynamic Models The above communication between TUFLOW FV and the WQ Module is affected via implementation of a publicly available application programming interface (API). This API effectively sets the rules by which TUFLOW FV and the WQ Module communicate, and separates their roles. This API has been designed so that TUFLOW FV can drive any other water quality model that includes the API in its compilation. This is intentional, and allows users of other ecological models to access the hydrodynamic power of TUFLOW FV for their simulations. Contact support@tuflow.com for further information or assistance in this regard. "],["SimulationConstruction-1.html", "Section 3 Simulation Construction 3.1 Context 3.2 Units 3.3 General arrangement 3.4 TUFLOW FV control file commands 3.5 Water quality control file commands 3.6 Simulation Class: DO", " Section 3 Simulation Construction 3.1 Context Previous sections have presented the architecture and water quality processes available within the WQ Module. This section describes the construction of a TUFLOW simulation with the WQ Module activated. This includes descriptions of all commands, with hyperlinks to the Appendices where commands and explanations are listed in a searchable and sortable table for ease of access. TUFLOW FV is the hydrodynamic model used in all descriptions that follow. Optional model classes (such as pathogens) and their construction are first described in the simplest simulation class for which they can be deployed. Commentary on the ordering of optional constituents is provided in subsequent sections only where needed. 3.2 Units The WQ Module allows for simulation construction in one of two unit systems (see Section 3.5.1): A milligrams per litre system (which includes micrograms per litre for phytoplankton) that aligns with typical units of laboratory reporting, and A millimoles per cubic metre system A single units system must be adopted for a WQ Module simulation, and unit systems cannot be mixed within a simulation. This specification has implications for at least the setting of numerical values for: Initial conditions Boundary conditions Computed variable parameters When the milligrams per litre system is used, the WQ Module executes internal conversions between milligrams and millimoles, because millimoles are the units expected by the core water quality calculation routines. This conversion follows the form: \\[\\begin{equation} n = \\frac{m}{M} \\tag{3.1} \\end{equation}\\] where \\(n\\) is millimoles (mmol), \\(m\\) is mass (mg) and \\(M\\) is molar weight (mg/mmol). A similar concept applies to concentration and flux quantities. As such, the WQ Module assigns values to \\(M\\) in converting from milligrams to millimoles, i.e. from user specified milligram initial conditions, boundary conditions and computed variable parameters, to the equivalent millimole quantities. The complete list of values of \\(M\\) for all simulated constituents is provided in Table ??. The two possibilities for units for each parameter are provided in Appendix ??, where relevant. As an example, if a user specifies the milligrams per litre units system (or allows the same default to be set) and sets FRP flux == 3.1 in a materials block, then this value of 3.1 is assumed to be mg/m\\(^2\\)/day. Consistent with typical laboratory reporting conventions (see below), this mass flux is taken to be that of elemental phosphorus \\(P\\), not that of the phosphate molecule \\(PO_4^{3-}\\). This would mean (using Table ?? and Equation (3.1)) that the equivalent millimole rate would be computed as: \\[\\begin{equation} n = \\frac{3.1}{31} = 0.1 \\hspace{0.1cm} \\text{mmol/m$^2$/day of P} \\tag{3.2} \\end{equation}\\] Given the above, users opting to construct WQ Module simulations in the milligrams units system need to clearly understand what is being reported in: Field and/or laboratory measurements, and Other numerical model predictions that may be used as WQ Module boundary conditions (such as catchment pollutant export models) In the case of laboratory nutrient measurements, it is conventional to report concentrations of the typical quantities used by the WQ Module as silicate-Si, ammonium-N, nitrate-N, FRP-P, organic-C, organic-N, and organic-P. Whilst these quantities might be referred to informally as (for example) “nitrate concentrations”, the reported number is most commonly the concentration of elemental nitrogen contained within nitrate. To be clear, if a nitrate-N concentration is reported by a laboratory to be 3.5 mg/L, this means that in every litre of water, there are 3.5 milligrams of elemental nitrogen contained within nitrate molecules. Given the molar masses of elemental nitrogen and nitrate, this 3.5 milligrams of elemental N means that there are 15.5 milligrams of nitrate molecules (15.5 = 3.5 x 62/14) in the same litre of water. In this example, the concentration with which the WQ Module expects to be provided is 3.5 mg/L, not 15.5 mg/L. The use of other model data to force WQ Module boundary conditions is also interpreted in this way. For example, a catchment model might report that an inflow to the WQ Module at an upstream riverine boundary condition has a “total nitrogen” concentration of 10.0 mg/L, and a user may have then speciated this to nitrate by applying a multiplicative factor of 0.15. If this resulting nitrate concentration of 1.5 mg/L is applied to the WQ Module as a boundary condition, it must be a concentration of elemental nitrogen within nitrate, which is consistent with what would be reported by a laboratory. This means that the user must be sure that the “total nitrogen” reported by the catchment model is in fact an elemental nitrogen concentration. If users elect to construct WQ Module simulations in units of millimoles, then no internal WQ Module conversions take place, and the nature of the quantity (molecular or elemental) being specified is not relevant. For example, the user could specify millimoles units and a “FRP flux” of 0.1. This could be interpreted as a mmol/m\\(^2\\)/day rate of either the \\(PO_4^{3-}\\) molecule, or just phosphorus \\(P\\). This is because in one millimole of \\(PO_4^{3-}\\), there is also one millimole of elemental \\(P\\). The same one to one relationship holds for all other WQ Module relevant computed quantities (see Table ??), other than oxygen which is treated as a diatomic molecule. 3.3 General arrangement A water quality simulation is set up and executed under the umbrella of a TUFLOW FV control file (Figure 3.1, with other optional modules shown for illustrative purposes). That is: The TUFLOW FV control file (*.fvc) file remains the central file that initiates and coordinates an overall simulation. This mirrors the way in which other TUFLOW FV modules, such as the ST Module and PT Module, are activated and executed The TUFLOW FV control file contains a path to a separate WQ Module control file (*.fvwq) that in turn contains all the commands required to configure a WQ Module simulation \\(\\newcommand{\\blockindent}{\\hspace{0.5cm}}\\) Figure 3.1: Simulation Coordination TUFLOW FV and WQ Module control file commands are presented following. 3.4 TUFLOW FV control file commands A TUFLOW FV simulation is executed as described in the TUFLOW FV user manual. If the WQ Module is to be activated in a simulation then the following commands are to be included. 3.4.1 WQ Module activation Activation of the WQ Module is affected by specification of the following mandatory command in the TUFLOW control file: water quality model == TUFLOW Following this activation, TUFLOW FV will look for the specification of the name of the separate WQ Module control file via the following mandatory command: water quality control file == &lt;water quality control file name&gt;.fvwq This *.fvwq is separate to the *.fvc and contains user specified information that describes the configuration of the water quality simulation. If the *.fvwq is located in the same directory as the *.fvc, then this filename specification needs no associated path. It is recommended however that the *.fvwq be located in a directory separate to the *.fvc so that log and other related water quality specific files can be easily curated. If this approach is adopted, the following additional *.fvc command is required, noting that the folder path is specified as relative to the folder in which the *.fvc resides: water quality model directory == &lt;relative path to WQ directory&gt;\\(\\backslash\\) This command must terminate in a \\(\\backslash\\) character. If this command is issued, then the *.fvwq water quality control file must be located in the directory specified. In certain circumstances, executing water quality calculations in shallow cells can cause numerical instabilities. To control this behaviour, the WQ Module allows for water quality calculations to be switched off in cells that have depths less than a specified minimum (advection dispersion calculations will however continue to be performed - it is only the water quality-related non-conservative transformations that are turned off). This minimum depth (in meters) is specified in the TUFLOW FV *.fvc via the command: cell water quality depth == \\(d_{min-wq}\\) If this command is not issued then the default minimum depth of 0.01m (1cm) is applied. This command parallels the TUFLOW FV command that controls the execution of hydrodynamic calculations as a function of water depth: cell wet/dry depths == cell dry depth (m), cell wet depth (m) In this TUFLOW FV command: The cell dry depth value (default = 1.0e-06 m) corresponds to the water depth below which a cell is dropped completely from hydrodynamic (TUFLOW FV) computations (subject to the status of surrounding cells) and is therefore considered to be ‘dry’. Cells that have dried in a given time step are given a stat value of 0 in all TUFLOW FV results files, so this stat field acts as a mask to determine which cells are wet and dry when using post processing tools and or scripts. Dry cells are not contoured in QGIS or SMS when viewed, but appear as transparent. If set to a negative value the cell dry depth is set to zero. The cell wet depth value (default = 1.0e-02 m) corresponds to the water depth below which a cell’s momentum is set to zero in order to avoid unphysical velocities at very low depths. The cell is not considered to be dry and therefore has a stat value of -1. If this value is less than or equal to the cell dry depth, it is set to the cell dry depth. Given this, it is therefore recommended that across these commands and/or defaults, a user ensures that the following holds (as it does for the default values noted above): \\[\\begin{equation} \\text{cell dry depth} \\lt \\text{cell wet depth} \\lt \\text{cell water quality depth} \\tag{3.3} \\end{equation}\\] If, for example, cell water quality depth is set to a value less than cell dry depth, then water quality calculations will be attempted on cells that TUFLOW FV considers to be dry, which is to be avoided. If a situation arose where it was absolutely necessary, then cell water quality depth could be set to a value less than cell wet depth (but still greater than cell dry depth), but this is not recommended. To summarise, and if the recommended relative magnitudes of depths presented in Equation (3.3) is adopted, then the following applies: water depth \\(\\gt\\) cell water quality depth: water quality calculations and momentum calculations performed cell water quality depth \\(\\gt\\) water depth \\(\\gt\\) cell wet depth : water quality calculations switched off, momentum calculations performed (advection and dispersion calculations also performed on water quality variables) cell wet depth \\(\\gt\\) water depth \\(\\gt\\) cell dry depth: water quality calculations switched off, momentum calculations switched off (advection and dispersion calculations also performed) cell dry depth \\(\\gt\\) water depth: no calculations performed - cell is considered dry To support debugging, water quality calculations can also be turned off completely for all cells and all timesteps by issuing this command in the TUFLOW FV *.fvc: disable water quality model == \\(B_{disable-wq}\\) and setting \\(B_{disable-wq}\\) = 1. Omitting this command, or setting \\(B_{disable-wq}\\) to zero (“0”) instead of one (“1”), will activate water quality calculations. If this command is set to one (“1”), then the WQ Module will still initialise are report as such, but when TUFLOW executes, the module will not be called. Consistent with their specification in the *.fvc, the status of these latter two commands and their arguments are reported in the TUFLOW FV log file, rather than the WQ Module log file. An example block of these five commands that together activate the WQ Module, point TUFLOW FV to the water quality control file ..\\(\\backslash\\)WQ\\(\\backslash\\)Model_000.fvwq and set the minimum depth for executing water quality calculations to 5 centimetres is: water quality model == TUFLOW water quality model directory == ..\\WQ\\ water quality control file == .\\Model_000.fvwq cell water quality depth == 0.05 disable water quality model == 0 3.4.2 Initial and boundary conditions In addition to activating the WQ Module and specifying its control file, WQ Module initial and boundary condition information is also set through the TUFLOW FV control file. The processes for doing so are described below. These are followed by discussion of the related matter of constituent ordering within initial and boundary condition specifications. 3.4.2.1 Initial conditions Water quality initial conditions are specified within or via the TUFLOW FV control file, akin to the manner in which the sediment initial conditions are set on behalf of the sediment transport module. This specification is mandatory. There are currently a number of ways that water quality initial conditions may be specified. All are affected through TUFLOW FV commands which are described in the TUFLOW FV user manual. If no water quality initial conditions are specified, then a simulation will not execute. The specifications relevant to water quality simulations are described below. The potential limitations of some of these approaches are recognised and will be addressed in future release of the WQ Module. 3.4.2.1.1 Restart files Restart files are binary files that are generated from previous simulations. These can be used as inputs to initialise water quality simulations, provided that the restart and simulation model geometries, and water quality simulation computed variables and units are identical. A restart file is specified for all simulated quantities (not just water quality) and is controlled through commands described in the TUFLOW FV user manual. The key command is restart == &lt;restart file name&gt;.rst Most often, restart files are located in the log directory, but this is not mandatory. 3.4.2.1.2 Globally uniform Globally uniform (i.e. across all spatial dimensions) initial conditions are set via a command issued from within the TUFLOW FV control file. This is often useful in setting initial conditions for simple small water bodies or at the commencement of a modelling process where initial conditions are set to be placeholders and updated at a later time. The command to do so is: initial wq concentration == ordered initial conditions Each water quality computed variable is set to a single value everywhere. These initial concentrations must be specified in a particular order and this order is described in the following sections for different simulation classes. If the above command is used to set water quality initial conditions, then it must be accompanied by parallel commands that set globally uniform salinity, temperature (and optionally sediment) initial conditions: initial temperature == 15.0 initial Water Level == 1.00 initial sediment concentration == 10.0 initial salinity == 3.5 Setting a mix of globally uniform and other initial conditions (such as profile, 2d or 3d) is not permitted. 3.4.2.1.3 Globally laterally uniform Globally laterally uniform initial conditions use an initial profile to set hydrodynamic and water quality computed variable concentrations to be everywhere the same laterally, but to vary vertically. This is often useful in setting initial conditions for deep stationary water bodies such as lakes or reservoirs. The command to do so is: initial scalar profile == &lt;initial condition file name&gt;.csv An example of the form of the text file argument initial condition file name.csv for simulating five water quality constituents is: Depth,Sal,temp,sed_1,WQ_1,WQ_2,WQ_3,WQ_4,WQ_5 0.0,2.0,22.0,5.0,8.0,22.0,2.6,1.4,0.5 10.0,2.5,15.0,15.0,5.0,32.0,2.6,1.4,0.2 20.0,3.0,10.0,25.0,0.0,42.0,5.6,5.4,0.1 If the above command is used, then it must include profile information that also sets laterally uniform salinity, temperature (and optionally sediment) initial conditions. Setting a mix of laterally uniform and other initial conditions (such as globally uniform, 2d or 3d) is not permitted. The order of these columns in the argument csv file is not important, but the columns headers are keywords and must be used as shown. For example, the following structure for initial condition file name.csv is permitted: Depth,temp,WQ_3,Sal,sed_1,WQ_4,WQ_1,WQ_2,WQ_5 0,22,2.6,2,5,1.4,8,22,0.5 10,15,2.6,2.5,15,1.4,5,32,0.2 20,10,3,3,25,5.4,0,42,0.1 Notwithstanding this, it is still considered best practise to develop initial and boundary condition files that have a logically sequential order. Water quality initial conditions headers are labelled “WQ_1”, “WQ_2” onward, and the match between these header labels and water quality computed variables is set by the computed variable ordering of the simulation class deployed. 3.4.2.1.4 Globally vertically uniform Globally vertically uniform initial conditions use an initial two dimensional map to set hydrodynamic and water quality computed variable concentrations to be everywhere the same vertically, but to vary laterally. This is often useful in setting initial conditions for shallow water bodies that have horizontal concentration gradients such as small estuaries or urban lakes. The command to do so is: initial condition 2d == &lt;initial condition file name&gt;.csv An example of the form of the text file argument initial condition file name.csv for simulating five water quality constituents is: ID,WL,sal,temp,sed_1,WQ_1 1,1.0,3.5,15,10.0,8.0 2,1.0,3.5,15,10.0,7.5 3,1.0,3.5,15,10.0,7.0 4,1.0,3.5,15,10.0,6.5 If the above command is used, then it must include information that also sets vertically uniform salinity and temperature (and optionally sediment) initial conditions, as well as water level. Setting a mix of vertically uniform and other initial conditions (such as globally uniform, laterally uniform or 3d) is not permitted. The order of these columns in the argument csv file is not important, but the columns headers are keywords and must be used as shown. For example, the following structure for initial condition file name.csv is permitted: ID,WQ_1,WL,sed_1,sal,temp 1,8.0,1.0,10.0,3.5,15 2,7.5,1.0,10.0,3.5,15 3,7.0,1.0,10.0,3.5,15 4,6.5,1.0,10.0,3.5,15 Notwithstanding this, it is still considered best practise to develop initial and boundary condition files that have a logically sequential order. Water quality initial conditions headers are labelled “WQ_1”, “WQ_2” onward, and the match between these header labels and water quality computed variables is set by the computed variable ordering of the simulation class deployed. 3.4.2.1.5 Globally varying Globally variable initial conditions use an initial three dimensional map to set hydrodynamic and water quality computed variable concentrations at each 3D cell. This is analogous to using a restart file. The command to do so is: initial condition 3d == &lt;initial condition file name&gt;.csv An example of the form of the text file argument initial condition file name.csv for simulating five water quality constituents is as follows, noting that the “ID” column refers to a three dimensional cell ID, rather than the two dimensional column ID used in the initial condition 2d == command. ID,WL,sal,temp,sed_1,WQ_1 1,1.0,3.5,15,10.0,8.0 2,1.0,3.5,14,10.0,7.5 3,1.0,3.5,13,10.0,7.0 4,1.0,3.5,12,8.0,6.5 5,1.0,3.5,15,10.0,8.0 6,1.0,3.5,14,10.0,7.4 7,1.0,3.5,13,10.0,7.1 8,1.0,3.5,11,9.0,6.6 If the above command is used, then it must include information that also sets globally varying salinity and temperature (and optionally sediment) initial conditions, as well as water level. Setting a mix of vertically uniform and other initial conditions (such as globally uniform, laterally uniform or 2d) is not permitted. The order of these columns in the argument csv file is not important, but the columns headers are keywords and must be used as shown. For example, the following structure for initial condition file name.csv is permitted: ID,WQ_1,WL,sed_1,sal,temp 1,8.0,1.0,10.0,3.5,15 2,7.5,1.0,10.0,3.5,14 3,7.0,1.0,10.0,3.5,13 4,6.5,1.0,8.0,3.5,12 5,8.0,1.0,10.0,3.5,15 6,7.4,1.0,10.0,3.5,14 7,7.1,1.0,10.0,3.5,13 8,6.6,1.0,9.0,3.5,12 Notwithstanding this, it is still considered best practise to develop initial and boundary condition files that have a logically sequential order. Water quality initial conditions headers are labelled “WQ_1”, “WQ_2” onward, and the match between these header labels and water quality computed variables is set by the computed variable ordering of the simulation class deployed. 3.4.2.2 Boundary conditions Water quality boundary conditions are also specified via the *.fvc file, either directly or via an include statement that points TUFLOW FV to a subsidiary boundary condition control file(s). This specification of water quality variable concentrations is optional, so in early water quality model construction stages this specification can be omitted. Omitted water quality boundary conditions will be set to zero. It is not recommended that this approach be taken beyond initial simulation setup stages, but that it be used only to develop a water quality simulation to the point where it executes without issuing error or unwanted warning messages. At this point, all water quality boundary conditions should be assigned. All TUFLOW boundary conditions that specify water temperature or salinity will also require specification of the behaviour of simulated water quality variables. Common boundary conditions to which this applies include inflows (e.g. types Q, QC, QN, QG and others) and tidal boundaries (e.g. types WLS). Wave and meteorological boundary conditions do not need specification of water quality conditions. As for initial conditions, boundary conditions that use columnar data structures (e.g. *.csv files) are interpreted using column headers specified in an expected order within calling TUFLOW FV BC blocks. Further detail and the associated ordering is provided in the following sections (sections 3.6, ?? and ?? for simulation classes DO, inorganics and organics, respectively). 3.4.2.3 Ordering Specification of initial conditions and most boundary conditions presently relies on listing water quality variables in a particular order. This applies in all instances when water quality initial or boundary conditions are provided in columnar or list form, which is most frequently in text file format. This is conceptually similar to the manner in which TUFLOW FV also relies on ordering of its initial and boundary conditions. Future releases of TUFLOW FV will allow alternative methods for specification of initial and boundary conditions that do not rely on assumed ordering. In the interim however, the following applies. 3.4.2.3.1 Initial Conditions Initial conditions, if set using means other than a restart file, must be specified with water quality constituents in a preset order (globally uniform), or be referenced using incrementally numbered headers as “WQ_1”, “WQ_2” etc (profile, 2d or 3d, see Section 3.4.2.1). For globally uniform initial conditions (Section 3.4.2.1.2), the following *.fvc command can be used for a typical inorganics simulation class: initial wq concentration == 7.5, 0.0, 4.2, 10.5, 0.6, 5.5 There are no references to headers or variable names, but TUFLOW FV assumes that these numbers correspond to the ordered variables of the particular configuration of the inorganics simulation class returned to it from the WQ Module. In this example, this ordering is: Dissolved oxygen (7.5 mg/L) Silicate (0.0 mg/L) Ammonium (4.2 mg/L) Nitrate (10.5 mg/L) Filterable reactive phosphorus (0.6 mg/L), and One phytoplankton group (5.5 \\(\\mu\\)g/L) The expected ordering is the same as that for boundary condition specifications, as described below. For other initial condition specifications that involve providing csv files, the headers “WQ_1”, “WQ_2” etc must be used to denote water quality initial conditions. The ordering of the associated columns does not matter, however the assignment of a computed variable initial condition to a “WQ_XX” header (where XX is a number) does rely on the ordering described below - the first water quality computed variable expected should be headed “WQ_1” and so on. 3.4.2.3.2 Boundary Conditions Ordering of water quality boundary conditions is only important when specifying header information via the bc header == (or equivalent) command within a TUFLOW FV *.fvc file BC block. It is in these commands (where comma separated header strings are specified) that TUFLOW FV expects a particular order of TUFLOW FV and WQ Module constituents. No column ordering is expected in boundary condition data files themselves. Ordering is only expected in the order of headers specified within a BC block within an TUFLOW FV control file. This is best illustrated by example. If a user has elected to deploy the inorganics simulation class without sediment, then the following will be simulated (beyond the basic velocity and water level hydrodynamic variable suite): Salinity Temperature Dissolved oxygen Silicate Ammonium Nitrate Filterable reactive phosphorus One (assumed for this example, but can be multiple) phytoplankton group These will eventually need proper boundary condition specification in boundary condition blocks and have supporting data provided in (usually) text files. In a simple model with only one WL boundary condition, a bc block of the following form would be required as a minimum to properly specify the hydrodynamic and water quality boundaries: bc == WL, 1, datafile.csv \\(\\blockindent\\) bc header == time, wsel, sali, temp, DOxy, SiO4, NH41, nitr, frph, bluegreen end bc To be clear: The names listed on the bc header == line (time, wse etc.) are not keywords or special names, and can be any names that a user chooses TUFLOW FV will however, assume that these names (whatever they have been set to) have been listed in such an order that they have a one to one correspondence to the ten computed variables as follows: time \\(\\rightarrow\\) Time stamp wsel \\(\\rightarrow\\) Water surface elevation sali \\(\\rightarrow\\) Salinity temp \\(\\rightarrow\\) Temperature DOxy \\(\\rightarrow\\) Dissolved oxygen SiO4 \\(\\rightarrow\\) Silicate NH41 \\(\\rightarrow\\) Ammonium nitr \\(\\rightarrow\\) Nitrate frph \\(\\rightarrow\\) Filterable reactive phosphorus bluegreen \\(\\rightarrow\\) Phytoplankton group one TUFLOW then matches the user specified names to the expected simulation variables, based on this ordering, to then interrogate boundary condition files. Following the above matching, TUFLOW FV interrogates the relevant boundary condition file (“datafile.csv” in the example above), where this file can have its columns arranged in any order: the order of these columns does not matter because TUFLOW FV will use the mapping previously developed via the bc header == command to look through all data file columns one by one, searching for the headers specified, regardless of the actual ordering of boundary condition file columns. For example, the silicate boundary condition data could be positioned in column 14 of the boundary condition file, but as long as it is labelled with the correct header (“SiO4” as specified in bc header ==), TUFLOW FV will know to assign column 14 of the boundary condition data file to the silicate computed variable. Ordering is set by the user’s selection of simulation class and constituent models, and is explicitly listed in each simulation class section (Sections 3.6.5, ?? and ?? for DO, inorganics and organics, respectively). The expected ordering for a particular simulation is also reported in the simulation water quality log file for checking. 3.5 Water quality control file commands The water quality control file comprises three parts, with each part containing different types of commands and flags. Whilst it is recommended that these parts be kept separate and in the order described below (especially given how complex water quality simulations can become), doing so is not mandatory and commands or command blocks may be entered in any order. These parts are as follows, with the first two mirroring the architecture described in Section 2: Simulation controls (i.e. simulation class) Constituent model settings (i.e. constituent model class) Material specifications Notwithstanding this, a WQ Module control file need not contain any commands, and can be completely blank. This is by design, and intended to allow users to rapidly set up and execute a TUFLOW water quality simulation. If the water quality control file is left blank, then the WQ Module will: Construct a simulation using the dissolved oxygen simulation class (which is the simplest class) Set the simulation units to mg/L Set library defaults for all parameters Set the water quality model timestep to the default Assign zero dissolved oxygen concentration to all boundary conditions. This is by design, and will assist in ensuring that the subsequent user-defined updating of boundary conditions is thorough and complete (zero dissolved oxygen boundary conditions are rare and therefore easily identifiable). Initial conditions will also need to be specified in the TUFLOW FV control file as per Section 3.4.2. Specification of boundary conditions can be deferred. The water quality control file sections are described below. Details specific to each simulation class and constituent model are provided in subsequent sections 3.5.1 Part 1: Simulation controls Simulation controls set the high level operation of the WQ Module and are not specific to a simulation class. All are optional. Available commands set the: Simulation class via simulation class == Timestep dt (in seconds) at which TUFLOW calls the WQ Module via wq dt == Units of simulation via wq units == Frequency of equilibrium substepping fess (in number of timesteps) to execute non-kinetic equilibrium calculations via wq equilibrium substeps == Reporting or suppression of minimum / maximum concentration exceedances (see Section 3.5.2) via report min max warnings == A typical simulation control section might therefore look like the following: simulation class == DO wq dt == 600.0 wq units == mgl wq equilibrium substeps == 1 report min max warnings == on 3.5.2 Part 2: Constituent model settings Constituent model settings are those that: Specify the constituent model to be used within each preset constituent model class. These are referred to as constituent model blocks Set the parameters for each of these constituent models, as commands within these blocks All are optional, however if a constituent model block is initiated then it requires an end XXXX model command to terminate the block, where XXXX is the name of the constituent model class, such as inorganic nitrogen. An example of a user selecting to use the adsorbed filterable reactive phosphorous constituent model (that is a model available within the inorganic phosphorus constituent model class), and setting some parameters within that model is as follows: inorganic phosphorus model == frpads atmospheric deposition == 12.6, 0.5 end inorganic phosphorus model Parameters not specified by the user are set to library defaults. All constituent models allow for constraining (and then reporting) the predictions of their respective computed variable concentrations via the setting of minimum and maximum limits, if desired. This is often useful in identifying unusual model behaviours or instabilities. Where exceedences of these limits are identified by the WQ Module: Time and model cell information is written to the WQ Module log file in real time. This allows for easy identification of potential model issues via periodic examination of the WQ Module log file, rather than waiting for simulation completion The WQ Module resets the computed concentration to the relevant specified minimum or maximum concentration The above resetting will result in mass conservation errors. It should not be relied on to artificially control the behaviour of an otherwise unstable or runaway water quality simulation. Rather, this functionality should be used as a convenient way to check model performance and flag potential issues, with a view to then implementing corrective action. Equally, suppressing warnings written to the WQ log file using the report min max warnings == command described in Section 3.5.1 is not recommended because doing so may mask underlying model construction issues. These limits are optionally specified in each constituent model block. An example that sets these limits for ammonium is: ammonium min max == 0.0, 25.0 Although in the strictest sense, sediment (benthic) flux half saturation concentrations and temperature coefficients are benthic properties, the WQ Module does not yet support these parameters being applied on a spatially varying basis (i.e. per material). As such, these are considered to be constituent model global parameters and so are set in this part of the water quality control file, i.e. within respective constituent model blocks. An example that sets an oxygen half saturation and temperature coefficient for benthic flux is: oxygen benthic == 5.0, 1.08 3.5.3 Part 3: Material specifications The final part of the water quality control file (*.fvwq) provides for specification of benthic (sediment) fluxes, via material blocks. The commands required to commence and terminate a materials block are as follows: material == &lt;up to 10 comma separated material numbers, or “default”&gt; and end material This material block nomenclature mirrors that used in the TUFLOW FV and sediment transport control files. An example of specifying oxygen and nitrate benthic fluxes for materials 2, 7 and 12 is: material == 2, 7, 12 oxygen flux == -60.0 nitrate flux == 12.5 end material The WQ Module allows for specification of a default set of benthic fluxes that are applied across all materials, by using the key word default instead of specifying material numbers in a material block. These defaults can then be progressively overwritten on a material by material basis by specifying subsequent material blocks. For example, a model that has ten materials in total, eight of which have the same oxygen benthic flux (all materials except 4 and 7), can have its overall oxygen benthic flux specified as: material == default oxygen flux == -60.0 end material material == 4, 7 oxygen flux == -20.0 end material 3.5.4 Summary In order to set up and execute a water quality simulation using the WQ Module, the following steps are required: Modify the TUFLOW FV control file: Add at least the following commands to TUFLOW FV control file (*.fvc): water quality model == TUFLOW water quality control file == &lt;water quality control file name&gt;.fvwq Optionally add a folder path command to the TUFLOW FV control file (*.fvc) with a trailing backslash: water quality model dir == &lt;relative path to *.fvwq file&gt;\\(\\backslash\\) Add appropriate initial conditions for all water quality constituents, observing ordering rules where required Initially optionally add boundary conditions for all water quality constituents, observing ordering rules in bc header == commands Create the water quality control file with the corresponding name and path Modify the water quality control file Optionally add to the water quality control file: Part 1: A simulation controls section Part 2: A constituent model setting section with one or more constituent model blocks with one or more parameter commands Part 3: A material block specifications section Once initially constructed, boundary conditions can be added (if not already in place), and progressive refinement and parameterisation of constituent models and benthic fluxes can be affected. Details of these commands and their options within each specific simulation class are provided in subsequent sections. Subsections are separated into the above water quality control file parts for ease and consistency of reference. All commands are optional. 3.5.5 Log files Every WQ Module water quality simulation generates a log file that contains an echo of the WQ Module construction and execution commentary. It is written to the same location (and with the same name) as the WQ Module control file, with the file extension “fvwqlog”. This file contains a great deal of information that should be carefully reviewed. Suppressing warnings written to this log file, although possible, is not recommended or encouraged. 3.6 Simulation Class: DO If no simulation class is specified then a simulation will be automatically constructed using this DO class, and populated with library defaults for all parameters. Computed variables will be: Dissolved oxygen Pathogens (optional, potentially multiple) 3.6.1 Prerequisites The DO simulation class requires simulation of the following in TUFLOW FV: Hydrodynamics, in either two or three dimensions (including any internal one dimensional structures if present) Salinity Temperature Heat module on (i.e. meteorological forcing is required) Simulation of suspended sediment (via TUFLOW FV’s sediment transport module) is optional, unless attached pathogens are simulated. 3.6.2 Part 1: Simulation specification The DO simulation class is set via simulation class == DO The other commands in this part are not specific to this simulation class. See section 3.5.1. 3.6.3 Part 2: Constituent model specification As per Tables 2.2 and 2.3, oxygen is the only mandatory constituent model class available within the DO simulation class, and there is only one oxygen constituent model within that class, with code O2. Pathogens may be optionally simulated (in any simulation class). 3.6.3.1 Model class: Oxygen 3.6.3.1.1 Constituent model: O2 This constituent model is specified as: oxygen model == O2 Minimum and maximum concentrations are specified as: \\(\\blockindent\\) oxygen min max == \\(\\left[DO\\right]_{min}^{O_2}\\), \\(\\left[DO\\right]_{max}^{O_2}\\) Global benthic parameters (used in Equation (??)) are specified as: \\(\\blockindent\\) oxygen benthic == \\(K_{sed-O_2}^{O_2}\\), \\(\\theta_{sed}^{O_2}\\) The oxygen piston model to be used (in either Equation (??) or Equation (??)) is specified as: \\(\\blockindent\\) oxygen piston model == Wanninkhof92 or \\(\\blockindent\\) oxygen piston model == Ho16 The argument (either “Wanninkhof92” or “Ho16”) activates a different oxygen piston model (Equation (??) or Equation (??), respectively). Although not strictly necessary, the use of “oxygen” to prefix these block commands is deliberate so as to maintain consistency of command style with other constituent model blocks that include more than one computed variable, such as nitrogen, phosphorus and organics. Nonetheless, if the “oxygen” prefix is omitted within this constituent model block, the WQ Module will still interpret the above commands correctly. This constituent model block must be terminated using the command: end oxygen model 3.6.3.2 Model class: Pathogens (optional) This model class is optional. 3.6.3.2.1 Constituent model: Free This constituent model is specified as: pathogen model == free, pathname pathname is any user specified pathogen group name that: Uses only alphanumeric characters Has no spaces Excludes the keyword ‘PATH’, and Is not the same as any other group name Minimum and maximum concentrations are specified as: \\(\\blockindent\\) alive min max == \\(\\left[PTH_a\\right]_{min}^{pth}\\), \\(\\left[PTH_a\\right]_{max}^{pth}\\) Mortality parameters are specified as: \\(\\blockindent\\) mortality == \\(k_{d}^{pth}\\), \\(C_{SM}^{pth}\\), \\(\\alpha\\), \\(\\beta\\), \\(\\theta_{mor}^{pth}\\) \\(\\beta\\) is not currently used but must be retained as a placeholder in this command for future use. Light inactivation parameters are specified in three separate but related commands, with one command per light band (visible, UV-A and UV-B): \\(\\blockindent\\) visible inactivation == \\(k_{vis}\\), \\(c_{S_{vis}}^{pth}\\), \\(K_{DO_{vis}}^{pth}\\) \\(\\blockindent\\) uva inactivation == \\(k_{uva}\\), \\(c_{S_{uva}}^{pth}\\), \\(K_{DO_{uva}}^{pth}\\) \\(\\blockindent\\) uvb inactivation == \\(k_{uvb}\\), \\(c_{S_{uvb}}^{pth}\\), \\(K_{DO_{uvb}}^{pth}\\) Settling of non-attached pathogens is specified as follows, with a negative number being a downwards velocity: \\(\\blockindent\\) settling == \\(V_{settle}^{pth}\\) This constituent model block must be terminated using the command: end pathogen model 3.6.3.2.2 Constituent model: Attached This constituent model must be accompanied by simulation of at least one sediment fraction within the TUFLOW FV sediment transport (ST) module, and is specified as: pathogen model == attached, pathname pathname is any user specified pathogen group name that: Uses only alphanumeric characters Has no spaces Excludes the keyword ‘PATH’, and Is not the same as any other group name The commands are the same as those specified within a free pathogen constituent model block (Section 3.6.3.2.1), with the following modification or additions. Settling is specified for both free and attached pathogens: \\(\\blockindent\\) settling == \\(V_{settle}^{pth}\\), \\(V_{settle}^{pth_t}\\) The target attached pathogen fraction is specified as: \\(\\blockindent\\) target attached fraction == \\(f_{att}^{pth}\\) This constituent model block must be terminated using the command: end pathogen model 3.6.4 Part 3: Material specification Oxygen benthic flux (used in Equation (??)) is specified within both default and numbered material blocks as: \\(\\blockindent\\) oxygen flux == \\(F_{sed}^{O_2}\\) 3.6.5 Constituent ordering Dissolved oxygen is the only mandatory constituent simulated by the WQ Module for this simulation class, and therefore oxygen concentration is specified as the first variable (shown in symbolic form below): initial wq concentration == \\(\\left[ DO \\right]\\) Similarly, in a bc header == command within a bc block, oxygen is expected to be the first and only mandatory water quality variable after hydrodynamic boundary conditions. \\(\\blockindent\\)bc header == time, water_elev, sal, temp, clay, sand, DO_mgL DO_mgL is the header used to designate oxygen in the related boundary condition file, noting that the DO_mgL column in the boundary condition file can appear in any column in the boundary condition file, and that it does not need to be the seventh column. The header text “DO_mgL” is just an example, and it can be any header desired, as long as it matches the correct column header in the boundary condition file. 3.6.5.1 Pathogens (optional) If pathogens are simulated, then their headers are required at the end of any lists, regardless of the other hydrodynamic and water quality constituents simulated. This therefore applies to all simulation classes from DO to organics. Alive and dead pathogens are always required to be specified, in that order, and if attached pathogens are simulated then that attached pathogens header is listed between those of alive and dead. This pattern is repeated for each specified pathogen group, in the order in which pathogen groups are defined via pathogen constituent model blocks in the water quality control file. For example, where two pathogen groups are simulated (called ECOLI and CRYPTO, and defined in that order in the corresponding water quality control file), with ECOLI including attachment, the above bc header would be extended to the following: \\(\\blockindent\\)bc header == time, water_elev, sal, temp, clay, sand, DO_mgL, ECOLI_alive, ECOLI_att, ECOLI_dead, CRYPTO_al, CRYPTO_de 3.6.6 Example Following is an example of all the available WQ Module simulation class == DO commands. A single material applied as zeros everywhere as the default, other than for materials 1 and 4 where the default flux is overwritten. One (optional) pathogen constituent model block has been included, but is not required. simulation class == DO wq dt == 600 wq units == mgl oxygen model == O2 oxygen benthic == 4.0, 1.05 oxygen min max == 0.0, 15.0 end oxygen model !optional pathogen constituent model block: pathogen model == free, crypto alive min max == 0.0, 1e7 mortality == 0.08, 2e-12, 6.1, 1.0, 1.11 visible inactivation == 0.082, 0.0067, 0.5 uva inactivation == 0.5, 0.0067, 0.5 uvb inactivation == 1.0, 0.0067, 0.5 settling == -0.03 end pathogen model material == default oxygen flux == 0 end material material == 1, 4 oxygen flux == -137.0 end material "],["AppCommands.html", "Section 4 Commands", " Section 4 Commands .book .book-body .page-wrapper .page-inner { max-width: 95%; } All WQ Module commands and descriptions follow. This page has deliberately been set to be wider than the main document so as to accommodate the detail contained within the table. Tips provided in the manual’s introduction for interacting with the table should be reviewed, especially with regard to searching and navigation. Other tips for use specific to this table include: Commands are coloured and although they show as underlined on mouse hover, these are not hyperlinked Corresponding arguments (presented as their symbols) are coloured and listed in the required order within angled parentheses following each command ==. Each argument is a hyperlink to its description in the relevant Appendix. This description then includes hyperlinks to the relevant science and command syntax (Section 3). This allows easy navigation between command, parameter and scientific information The final text of each description is ‘Simulation construction section …’ and is a link to the relevant part of Section 3 where the command syntax is presented in context. More parameter details and descriptions are subsequently available via further hyperlinks included in the construction section Commands that have multiple possible combinations of more than one argument are presented as separate table entries. These related entries (that share the same command) are easily navigable by use of the links provided in the right hand table column, headed “Links” Table 4.1: WQ Module Commands Command Description Links oxygen flux == \\(\\langle\\)\\(F_{sed}^{O_2}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of oxygen. Simulation construction section 3.6.4. \\(\\text{ }\\) oxygen benthic == \\(\\langle\\)\\(K_{sed-O_2}^{O_2}\\),\\(\\theta_{sed}^{O_2}\\)\\(\\rangle\\) Used in an oxygen constituent model block to control the response of benthic oxygen flux to temperature and oxygen concentration. Simulation construction section 3.6.3.1.1. \\(\\text{ }\\) oxygen model == \\(\\langle\\)O2\\(\\rangle\\) Used to commence an oxygen constituent model block via specification of a constituent model from the oxygen constituent model class. Simulation construction section 3.6.3.1. \\(\\text{ }\\) oxygen min max == \\(\\langle\\)\\(\\left[DO\\right]_{min}^{O_2}\\),\\(\\left[DO\\right]_{max}^{O_2}\\)\\(\\rangle\\) Used in an oxygen constituent model block to set minimum and maximum dissolved oxygen concentrations. Simulation construction section 3.6.3.1.1. \\(\\text{ }\\) simulation class == \\(\\langle\\)DO;inorganics;organics\\(\\rangle\\) Used in Part 1: Simulation controls of WQ Module control file to specify water quality simulation class. If not specified, “DO” is assumed and all associated “DO” class default parameters are applied. Simulation construction section 3.5.1. \\(\\text{ }\\) end oxygen model Used to terminate an oxygen constituent model block. Must follow an oxygen model == command. Simulation construction section 3.6.3.1.1. \\(\\text{ }\\) wq units == \\(\\langle\\)mgl;mmm\\(\\rangle\\) Used in Part 1: Simulation controls of WQ Module control file to set the units used for water quality simulation. Milligrams per litre and millimoles per cubic metre are “mgl” and “mmm”, respectively. Simulation construction section 3.5.1. \\(\\text{ }\\) wq dt == \\(\\langle\\)\\(dt\\)\\(\\rangle\\) Used in Part 1: Simulation controls of WQ Module control file to set the timestep at which TUFLOW calls the WQ Module to undertake non-conservative water quality calculations, in seconds. Simulation construction section 3.5.1. \\(\\text{ }\\) silicate flux == \\(\\langle\\)\\(F_{sed}^{Si}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of silicate. Simulation construction section ??. \\(\\text{ }\\) silicate benthic == \\(\\langle\\)\\(K_{sed-O_2}^{Si}\\),\\(\\theta_{sed}^{Si}\\)\\(\\rangle\\) Used in a silicate constituent model block to control the response of benthic silicate flux to temperature and oxygen concentration. Simulation construction section ??. \\(\\text{ }\\) silicate min max == \\(\\langle\\)\\(\\left[Si\\right]_{min}^{Si}\\),\\(\\left[Si\\right]_{max}^{Si}\\)\\(\\rangle\\) Used in a silicate constituent model block to set minimum and maximum silicate concentrations. Simulation construction section ??. \\(\\text{ }\\) silicate model == \\(\\langle\\)Si\\(\\rangle\\) Used to commence a silicate constituent model block via specification of a constituent model from the silicate constituent model class. Simulation construction section ??. \\(\\text{ }\\) oxygen == \\(\\langle\\)on;off\\(\\rangle\\) Used in a silicate constituent model block to switch the dependence of silicate processes on dissolved oxygen on or off. Simulation construction section ??. \\(\\text{ }\\) ammonium flux == \\(\\langle\\)\\(F_{sed}^{NH_4}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of ammonium. Simulation construction section ??. \\(\\text{ }\\) ammonium benthic == \\(\\langle\\)\\(K_{sed-O_2}^{NH_4}\\),\\(\\theta_{sed}^{NH_4}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to control the response of benthic ammonium flux to temperature and oxygen concentration. Simulation construction section ??. \\(\\text{ }\\) ammonium min max == \\(\\langle\\)\\(\\left[NH_4\\right]_{min}^{NH_4}\\),\\(\\left[NH_4\\right]_{max}^{NH_4}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to set minimum and maximum ammonium concentrations. Simulation construction section ??. \\(\\text{ }\\) inorganic nitrogen model == \\(\\langle\\)AmmoniumNitrate\\(\\rangle\\) Used to commence an inorganic nitrogen constituent model block via specification of a constituent model from the inorganic nitrogen constituent model class. Simulation construction section ??. \\(\\text{ }\\) oxygen == \\(\\langle\\)on;off\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to switch the dependence of all nitrogen (ammonium and nitrate) processes on dissolved oxygen on or off. Simulation construction section ??. \\(\\text{ }\\) end silicate model Used to terminate a silicate constituent model block. Must follow a silicate model == command. Simulation construction section ??. \\(\\text{ }\\) end inorganic nitrogen model Used to terminate an inorganic nitrogen nitrogen constituent model block. Must follow an inorganic nitrogen model == command. Simulation construction section ??. \\(\\text{ }\\) nitrate flux == \\(\\langle\\)\\(F_{sed}^{NO_3}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of nitrate. Simulation construction section ??. \\(\\text{ }\\) nitrate benthic == \\(\\langle\\)\\(K_{sed-O_2}^{NO_3}\\),\\(\\theta_{sed}^{NO_3}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to control the response of benthic nitrate flux to temperature and oxygen concentration. Simulation construction section ??. \\(\\text{ }\\) nitrate min max == \\(\\langle\\)\\(\\left[NO_3\\right]_{min}^{NO_3}\\),\\(\\left[NO_3\\right]_{max}^{NO_3}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to set minimum and maximum nitrate concentrations. Simulation construction section ??. \\(\\text{ }\\) nitrification == \\(\\langle\\)\\(R_{nitrif}^{NH_4}\\),\\(K_{nitrif-O_2}^{NH_4}\\),\\(\\theta_{nitrif}^{NH_4}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to control nitrification and its response to oxygen concentration and temperature. Simulation construction section ??. \\(\\text{ }\\) denitrification == \\(\\langle\\)Michaelis Menten,\\(R_{denit}^{NO_3}\\),\\(K_{denit-O2-MM}^{NO_3}\\),\\(\\theta_{denit}^{NO_3}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to activate the Michaelis Menten model and control denitrification and its response to ambient oxygen concentrations and temperature. Simulation construction section ??. to exponential denitrification == \\(\\langle\\)exponential,\\(R_{denit}^{NO_3}\\),\\(K_{denit-O2-exp}^{NO_3}\\),\\(\\theta_{denit}^{NO_3}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to activate the exponential model and control denitrification and its response to ambient oxygen concentrations and temperature. Simulation construction section ??. to Michaelis Menten atmospheric deposition == \\(\\langle\\)\\(\\left[{TN}\\right]_{rain}\\),\\(R_{atm-dry}^{TN}\\),\\(f_{TN}^{NO_3}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to control the wet and dry atmospheric deposition of inorganic nitrogen. Simulation construction section ??. \\(\\text{ }\\) inorganic phosphorus model == \\(\\langle\\)FRPhs,FRPhsads\\(\\rangle\\) Used to commence an inorganic phosphorus constituent model block via specification of a constituent model from the inorganic phosphorus constituent model class. Simulation construction section ??. \\(\\text{ }\\) end inorganic phosphorus model Used to terminate an inorganic phosphorus phosphorus constituent model block. Must follow a inorganic phosphorus model == command. Simulation construction section ??. \\(\\text{ }\\) FRP min max == \\(\\langle\\)\\(\\left[FRP\\right]_{min}^{FRP}\\),\\(\\left[FRP\\right]_{max}^{FRP}\\)\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to set minimum and maximum FRP concentrations. Simulation construction section ??. \\(\\text{ }\\) FRP flux == \\(\\langle\\)\\(F_{sed}^{FRP}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of FRP. Simulation construction section ??. \\(\\text{ }\\) FRP benthic == \\(\\langle\\)\\(K_{sed-O_2}^{FRP}\\),\\(\\theta_{sed}^{FRP}\\)\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to control the response of benthic FRP flux to temperature and oxygen concentration. Simulation construction section ??. \\(\\text{ }\\) oxygen == \\(\\langle\\)on;off\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to switch the dependence of FRP processes on dissolved oxygen on or off. Simulation construction section ??. \\(\\text{ }\\) atmospheric deposition == \\(\\langle\\)\\(\\left[{FRP}\\right]_{rain}\\),\\(R_{atm-dry}^{FRPads}\\)\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to control the wet (and dry) atmospheric deposition of FRP (adsorbed FRP). Simulation construction section ??. \\(\\text{ }\\) FRPads min max == \\(\\langle\\)\\(\\left[FRPads\\right]_{min}^{FRPads}\\),\\(\\left[FRPads\\right]_{max}^{FRPads}\\)\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to set minimum and maximum adsorbed FRP concentrations. Simulation construction section ??. \\(\\text{ }\\) adsorption == \\(\\langle\\)linear,\\(K_{ads-L}^{FRP}\\)\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to set the paramters for the linear FRP adsorption model. Simulation construction section ??. to quadratic adsorption == \\(\\langle\\)quadratic,\\(K_{ads-Q}^{FRP}\\),\\(Q^{FRP}_{max}\\)\\(\\rangle\\) Used in a constituent model block to set the paramters for the quadratic FRP adsorption model. Simulation construction section ??. to linear phyto model == \\(\\langle\\)basic;advanced,group_name\\(\\rangle\\) Used to commence a phytoplankton constituent model block via specification of a model from the phytoplankton constituent model class, and a phytoplankton group name. The group name can be any name required. If the advanced phytoplankton model is used then internal nitrogen and phosphorus concentrations will be simulated as computed variables and therefore must have respective initial conditions and boundary conditions specified, paying attention to ordering rules as required. Simulation construction section ??. \\(\\text{ }\\) min max == \\(\\langle\\)\\(\\left[PHY\\right]_{min}^{PHY}\\),\\(\\left[PHY\\right]_{max}^{PHY}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set minimum and maximum phytoplankton group concentrations. Simulation construction section ??. \\(\\text{ }\\) temperature limitation == \\(\\langle\\)none\\(\\rangle\\) Used in a phytoplankton constituent model block to turn off phytoplankton group temperature limitation. Simulation construction section ??. to standard temperature limitation == \\(\\langle\\)standard,\\(T_{std}^{phy}\\),\\(T_{opt}^{phy}\\),\\(T_{max}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set the standard phytoplankton group temperature limitation function. Simulation construction section ??. to none salinity limitation == \\(\\langle\\)none\\(\\rangle\\) Used in a phytoplankton constituent model block to turn off phytoplankton group salinity limitation. Simulation construction section ??. to fresh,to marine,to mixed,to estuarine salinity limitation == \\(\\langle\\)fresh,\\(S_{opt-fresh}^{phy}\\),\\(S_{max-fresh}^{phy}\\),\\(L_{max-fresh}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to select the freshwater phytoplankton group salinity limitation. Simulation construction section ??. to none,to marine,to mixed,to estuarine salinity limitation == \\(\\langle\\)marine,\\(S_{opt-marine}^{phy}\\),\\(L_{zero-marine}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to select the marine phytoplankton group salinity limitation. Simulation construction section ??. to none,to fresh,to mixed,to estuarine salinity limitation == \\(\\langle\\)mixed,\\(S_{opt-mix}^{phy}\\),\\(S_{max-mix}^{phy}\\),\\(L_{zero-mix}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to select the mixed phytoplankton group salinity limitation. Simulation construction section ??. to none,to marine,to mixed,to estuarine salinity limitation == \\(\\langle\\)estuarine,\\(S_{opt-est}^{phy}\\),\\(S_{max-est}^{phy}\\),\\(P_{est}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to select the estuarine phytoplankton group salinity limitation. Simulation construction section ??. to none,to fresh,to marine,to mixed nitrogen limitation == \\(\\langle\\)\\(\\left[N\\right]_{min}^{phy}\\),\\(K_{lim-N}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set nitrogen limitation parameters for the basic phytoplankton model. Simulation construction section ??. to advanced nitrogen limitation == \\(\\langle\\)\\(\\left[N\\right]_{min}^{phy}\\),\\(K_{lim-N}^{phy}\\),\\(X_{N-C-min}^{phy}\\),\\(X_{N-C-max}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set nitrogen limitation parameters for the advanced phytoplankton model. Simulation construction section ??. to basic phosphorus limitation == \\(\\langle\\)\\(\\left[P\\right]_{min}^{phy}\\),\\(K_{lim-P}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set phosphorus limitation parameters for the basic phytoplankton model. Simulation construction section ??. to advanced phosphorus limitation == \\(\\langle\\)\\(\\left[P\\right]_{min}^{phy}\\),\\(K_{lim-P}^{phy}\\),\\(X_{P-C-min}^{phy}\\),\\(X_{P-C-max}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set phosphorus limitation parameters for the advanced phytoplankton model. Simulation construction section ??. to basic silicate limitation == \\(\\langle\\)\\(\\left[Si\\right]_{min}^{phy}\\),\\(K_{lim-Si}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set silicate limitation parameters for the basic phytoplankton model. Specifying this command triggers silicate uptake. Simulation construction section ??. \\(\\text{ }\\) light limitation == \\(\\langle\\)basic,\\(Ke^{phy}\\),\\(I_{K-bas}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set basic light limitation parameters for the basic and advanced phytoplankton constituent models. If stokes settling is used then the vlaue of \\(I_K\\) specified in this command overrides any value specified using the settling == stokes , \\(I_K\\) command. Simulation construction section ??. to monod,to steele,to webb,to jassby,to chalker,to klepper,to integrated, light limitation == \\(\\langle\\)monod,\\(Ke^{phy}\\),\\(I_{K-mon}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set monod light limitation parameters for the basic and advanced phytoplankton constituent models. If stokes settling is used then the vlaue of \\(I_K\\) specified in this command overrides any value specified using the settling == stokes , \\(I_K\\) command. Simulation construction section ??. to basic,to steele,to webb,to jassby,to chalker,to klepper,to integrated, light limitation == \\(\\langle\\)steele,\\(Ke^{phy}\\),\\(I_{S-ste}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set steele light limitation parameters for the basic and advanced phytoplankton constituent models. Simulation construction section ??. to basic,to monod,to webb,to jassby,to chalker,to klepper,to integrated, light limitation == \\(\\langle\\)webb,\\(Ke^{phy}\\),\\(I_{K-web}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set webb light limitation parameters for the basic and advanced phytoplankton constituent models. If stokes settling is used then the vlaue of \\(I_K\\) specified in this command overrides any value specified using the settling == stokes , \\(I_K\\) command. Simulation construction section ??. to basic,to steele,to monod,to jassby,to chalker,to klepper,to integrated, light limitation == \\(\\langle\\)jassby,\\(Ke^{phy}\\),\\(I_{K-jas}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set jassby light limitation parameters for the basic and advanced phytoplankton constituent models. If stokes settling is used then the vlaue of \\(I_K\\) specified in this command overrides any value specified using the settling == stokes , \\(I_K\\) command. Simulation construction section ??. to basic,to steele,to webb,to monod,to chalker,to klepper,to integrated, light limitation == \\(\\langle\\)chalker,\\(Ke^{phy}\\),\\(I_{K-cha}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set chalker light limitation parameters for the basic and advanced phytoplankton constituent models. If stokes settling is used then the vlaue of \\(I_K\\) specified in this command overrides any value specified using the settling == stokes , \\(I_K\\) command. Simulation construction section ??. to basic,to steele,to webb,to jassby,to monod,to klepper,to integrated, light limitation == \\(\\langle\\)klepper,\\(Ke^{phy}\\),\\(I_{S-kle}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set klepper light limitation parameters for the basic and advanced phytoplankton constituent models. Simulation construction section ??. to basic,to steele,to webb,to jassby,to chalker,to monod,to integrated, light limitation == \\(\\langle\\)integrated,\\(Ke^{phy}\\),\\(I_{S-int}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set integrated light limitation parameters for the basic and advanced phytoplankton constituent models. Simulation construction section ??. to basic,to steele,to webb,to jassby,to chalker,to klepper,to monod, uptake == \\(\\langle\\)\\(X_{N-C-con}^{phy}\\),\\(X_{P-C-con}^{phy}\\),\\(X_{Si-C-con}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set constant nitrogen, phosphorus and optionally silicate to biomass ratios for the basic phytoplankton constituent model only. Simulation construction section ??. to advanced uptake == \\(\\langle\\)\\(R_{N-uptake}^{phy}\\),\\(R_{P-uptake}^{phy}\\),\\(X_{Si-C-con}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set nitrogen and phosphorus (and optionally silicate) uptake rates for the advanced phytoplankton constituent model only. The silicate internal concentration ratio is ignored if silicate uptake is not activated. Simulation construction section ??. to basic settling == \\(\\langle\\)none\\(\\rangle\\) Used in a phytoplankton constituent model block to turn off settling in both basic and advanced phytoplankton constituent models. Simulation construction section ??. to constant,to thermal,to stokes,to motile settling == \\(\\langle\\)constant,\\(V_{settle}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set a constant settling velocity in both basic and advanced phytoplankton constituent models. A negative value specified in this command is a downwards velocity. Setting the settling velocity to zero in this model is the same as using settling == none. Simulation construction section ??. to none,to thermal,to stokes,to motile settling == \\(\\langle\\)thermal,\\(V_{settle}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set a constant settling velocity in both basic and advanced phytoplankton constituent models, allowing for temperature effects to settling. A negative value specified in this command is a downwards velocity. Simulation construction section ??. to none,to constant,to stokes,to motile settling == \\(\\langle\\)stokes,\\(I_{K-sto}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to compute settling velocity via stokes settling laws in both basic and advanced phytoplankton constituent models. Density must be simulated as a computed variable for each phytoplankton group that uses this model, so must have cell density initial conditions and boundary conditions specified as per ordering rules. The specification of \\(I_K\\) is not mandatory in this command. If it is not specified then the \\(I_K\\) specified in the phytoplankton constituent model’s light limitation model will be used. If a light limitaton model is not specified, or uses \\(I_S\\) instead of \\(I_K\\), then the library default value of \\(I_K\\) is used. If \\(I_K\\) is specified both in this stokes settling command and a phytoplankton constituent model light limitation function, then the value specified in the “light limitation ==” command is used, and the value specified in this command is ignored. Simulation construction section ??. to none,to constant,to thermal,to motile settling == \\(\\langle\\)motile,\\(V_{mot}^{phy}\\),\\(I_{K-mot}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to compute settling velocity via motility functions that depend on ambient conditions, in only the advanced phytoplankton constituent model. The specification of \\(I_K\\) is not mandatory in this command. If it is not specified then the \\(I_K\\) specified in the phytoplankton constituent model’s light limitation model will be used. If a light limitaton model is not specified, or uses \\(I_S\\) instead of \\(I_K\\), then the library default value of \\(I_K\\) is used. If \\(I_K\\) is specified both in this motile settling command and a phytoplankton constituent model light limitation function, then the value specified in the “light limitation ==” command is used, and the value specified in this command is ignored. Simulation construction section ??. to none,to constant,to thermal,to stokes carbon chla ratio == \\(\\langle\\)\\(X_{cc}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set the ratio of phytoplankton cell carbon biomass to chlorophyll a . Simulation construction section ??. \\(\\text{ }\\) end phyto model Used to terminate a phytoplankton constituent model block. Must follow a phyto model == command. Simulation construction section ??. \\(\\text{ }\\) nitrogen fixing == \\(\\langle\\)\\(R_{nfix}^{N_2}\\),\\(f_{nfix}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set the nitrogen fixing parameters of a phytoplankton constituent model. The first parameter sets the rate of nitrogen fixing and the second dictates the influence of nitrogen fixing on primary productivity. Simulation construction section ??. \\(\\text{ }\\) primary productivity == \\(\\langle\\)\\(R_{prod}^{phy}\\),\\(\\theta_{prod}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set primary productivity parameters of a phytoplankton constituent model. Simulation construction section ??. \\(\\text{ }\\) respiration == \\(\\langle\\)\\(R_{resp}^{phy}\\),\\(\\theta_{resp}^{phy}\\),\\(f_{true-resp}^{phy}\\),\\(f_{excr-loss}^{phy}\\),\\(f_{exud}^{phy}\\)\\(\\rangle\\) Used in a phytoplankton constituent model block to set respiration and exudation parameters of a phytoplankton constituent model. Simulation construction section ??. \\(\\text{ }\\) water quality model == \\(\\langle\\)tuflow\\(\\rangle\\) Instruct TUFLOW FV to activate TUFLOW WQ Module. Simulation construction section 3.4.1. \\(\\text{ }\\) water quality control file == \\(\\langle\\)water quality control file name\\(\\rangle\\) Name of WQ Module control file, with no path. If this file is not in the FV control file directory, then additionally use command water quality mode directory ==. Simulation construction section 3.4.1. \\(\\text{ }\\) water quality model directory == \\(\\langle\\)water quality control file directory\\(\\rangle\\) Relative path from location of FV control file to the WQ Module control file directory, including last backslash, e.g. “..\\(\\backslash\\)WQM\\(\\backslash\\)”. Simulation construction section 3.4.1. \\(\\text{ }\\) restart == \\(\\langle\\)restart file path and name\\(\\rangle\\) Specification of full path and name of previously saved restart file. Simulation construction section 3.4.2.1. \\(\\text{ }\\) initial wq concentration == \\(\\langle\\)comma separated wq initial conditions\\(\\rangle\\) Ordered individual computed variable initial conditions. Simulation construction section 3.4.2.1. \\(\\text{ }\\) initial scalar profile == \\(\\langle\\)initial condition file name and path\\(\\rangle\\) Ordered individual computed variable initial conditions in a columnar text file. Simulation construction section 3.4.2.1. \\(\\text{ }\\) initial condition 2d == \\(\\langle\\)initial condition file name and path\\(\\rangle\\) Ordered individual computed variable initial conditions in a columnar text file. Simulation construction section 3.4.2.1. \\(\\text{ }\\) initial condition 3d == \\(\\langle\\)initial condition file name and path\\(\\rangle\\) Ordered individual computed variable initial conditions in a columnar text file. Simulation construction section 3.4.2.1. \\(\\text{ }\\) material == \\(\\langle\\)Up to 10 comma separated material integers\\(\\rangle\\) Command to initiate a materials block. Commands within this block apply to the material numbers listed in this command. Simulation construction section 3.5.3. \\(\\text{ }\\) end material Command to terminate a materials block. This command must be paired with a corresponding material command to initiate the block. Simulation construction section 3.5.3. \\(\\text{ }\\) include sediment == \\(\\langle\\)include sediment transport calculations,include sediment in density calculation\\(\\rangle\\) TUFLOW FV command to include sediment simulation. Sediment must be simulated if adsorbed phosphorus is included in a WQ Module simulation. Simulation construction section ??. \\(\\text{ }\\) carbon min max == \\(\\langle\\)\\(\\left[POC\\right]_{min}^{POC}\\),\\(\\left[POC\\right]_{max}^{POC}\\),\\(\\left[DOC\\right]_{min}^{DOC}\\),\\(\\left[DOC\\right]_{max}^{DOC}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set minimum and maximum particulate and dissolved organic carbon concentrations. Simulation construction section ??. \\(\\text{ }\\) nitrogen min max == \\(\\langle\\)\\(\\left[PON\\right]_{min}^{PON}\\),\\(\\left[PON\\right]_{max}^{PON}\\),\\(\\left[DON\\right]_{min}^{DON}\\),\\(\\left[DON\\right]_{max}^{DON}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set minimum and maximum particulate and dissolved organic nitrogen concentrations. Simulation construction section ??. \\(\\text{ }\\) phosphorus min max == \\(\\langle\\)\\(\\left[POP\\right]_{min}^{POP}\\),\\(\\left[POP\\right]_{max}^{POP}\\),\\(\\left[DOP\\right]_{min}^{DOP}\\),\\(\\left[DOP\\right]_{max}^{DOP}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set minimum and maximum particulate and dissolved organic phosphorus concentrations. Simulation construction section ??. \\(\\text{ }\\) organic matter model == \\(\\langle\\)labile,refractory\\(\\rangle\\) Used to commence an organics constituent model block via specification of a model from the organics constituent model class.. Simulation construction section ??. \\(\\text{ }\\) DOC flux == \\(\\langle\\)\\(F_{sed}^{DOC}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of DOC. Simulation construction section ??. \\(\\text{ }\\) DON flux == \\(\\langle\\)\\(F_{sed}^{DON}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of DON. Simulation construction section ??. \\(\\text{ }\\) DOP flux == \\(\\langle\\)\\(F_{sed}^{DOP}\\)\\(\\rangle\\) Used in a materials block to control the sediment flux rate of DOP. Simulation construction section ??. \\(\\text{ }\\) organics benthic == \\(\\langle\\)\\(K_{sed-O_2}^{DOM}\\),\\(\\theta_{sed}^{DOM}\\)\\(\\rangle\\) Used in an organics constituent model block to control the response of benthic DOM flux to temperature and oxygen concentration. Simulation construction section ??. \\(\\text{ }\\) end organic matter model Used to terminate an organics constituent model block. Must follow an organic matter model == command. Simulation construction section ??. \\(\\text{ }\\) oxygen == \\(\\langle\\)on;off\\(\\rangle\\) Used in an organics constituent model block to switch the dependence of all processes on dissolved oxygen on or off. Anammox and DRNA processes will be switched off entirely if this command is issued asnd set to ‘off’. Simulation construction section ??. \\(\\text{ }\\) hydrolysis == \\(\\langle\\)\\(R_{hyd}^{POC}\\),\\(R_{hyd}^{PON}\\),\\(R_{hyd}^{POP}\\),\\(K_{hyd-O_2}^{POM}\\),\\(\\theta_{hyd}^{POM}\\)\\(\\rangle\\) Used in an organics constituent model block to parameterise particulate organic carbon, nitrogen and phosphorus hydrolysis. Simulation construction section ??. \\(\\text{ }\\) mineralisation == \\(\\langle\\)\\(R_{miner}^{DOM}\\),\\(K_{miner-O_2}^{DOM}\\),\\(\\theta_{miner}^{DOM}\\),\\(f_{an}\\),\\(K_{miner-NO_3}^{NO_3}\\)\\(\\rangle\\) Used in an organics constituent model block to parameterise dissolved organic matter (carbon, nitrogen and phosphorus) mineralisation. It includes the parameters that govern anaerobic mineralisation, that is, the consumption of nitrate in the dissolved organic matter mineralisation process. Simulation construction section ??. \\(\\text{ }\\) self shading == \\(\\langle\\)\\(Ke^{POM}\\),\\(Ke^{DOM}\\)\\(\\rangle\\) Used in an organics constituent model block to parameterise light attenuation due to the presence of particulate and dissolved organic matter. Simulation construction section ??. \\(\\text{ }\\) ref breakdown == \\(\\langle\\)\\(R_{bdn}^{RPOM}\\),\\(X_N^{RPOM}\\),\\(X_P^{RPOM}\\)\\(\\rangle\\) Used in an organics constituent model block to parameterise the breakdown of refractory particulate organic matter. Simulation construction section ??. \\(\\text{ }\\) ref carbon min max == \\(\\langle\\)\\(\\left[RPOM\\right]_{min}^{RPOM}\\),\\(\\left[RPOM\\right]_{max}^{RPOM}\\),\\(\\left[RDOC\\right]_{min}^{RDOC}\\),\\(\\left[RDOC\\right]_{max}^{RDOC}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set minimum and maximum refractory particulate organic matter and refractory dissolved organic carbon concentrations. Simulation construction section ??. \\(\\text{ }\\) ref nitrogen min max == \\(\\langle\\)\\(\\left[RDON\\right]_{min}^{RDON}\\),\\(\\left[RDON\\right]_{max}^{RDON}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set minimum and maximum refractory dissolved organic nitrogen concentrations. Simulation construction section ??. \\(\\text{ }\\) ref phosphorus min max == \\(\\langle\\)\\(\\left[RDOP\\right]_{min}^{RDOP}\\),\\(\\left[RDOP\\right]_{max}^{RDOP}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set minimum and maximum refractory dissolved organic phosphorus concentrations. Simulation construction section ??. \\(\\text{ }\\) ref activation == \\(\\langle\\)\\(R_{act}^{RDOM}\\)\\(\\rangle\\) Used in an organic matter constituent model block to set the rate of activation of refractory dissolved organic carbon, nitrogen and phosphorus. Simulation construction section ??. \\(\\text{ }\\) ref self shading == \\(\\langle\\)\\(Ke^{RPOM}\\),\\(R_{CDOM}^{RDOM}\\)\\(\\rangle\\) Used in an organics constituent model block to parameterise light attenuation due to the presence of refractory particulate and dissolved organic matter. Simulation construction section ??. \\(\\text{ }\\) ref photolysis == \\(\\langle\\)\\(f_{photo}^{RDOM}\\)\\(\\rangle\\) Used in an organics constituent model block to parameterise the proportion of photolysis of refractory dissolved organic matter that produces labile dissolved organic matter. Simulation construction section ??. \\(\\text{ }\\) anaerobic oxidation of ammonium == \\(\\langle\\)\\(k_{anmx}^{N_2}\\),\\(K_{anmx-NH_4}^{N_2}\\),\\(K_{anmx-NO_2}^{N_2}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to control anaerobic oxidation of ammonium and its response to ambient ammonium and nitrate concentrations. Simulation construction section ??. \\(\\text{ }\\) diss nitrate reduction to ammonium == \\(\\langle\\)\\(R_{DRNA}^{NO_3}\\),\\(K_{DRNA-O_2}^{NO_3}\\)\\(\\rangle\\) Used in an inorganic nitrogen constituent model block to control dissimilatory reduction of nitrate to ammonium and its response to ambient oxygen concentrations. Simulation construction section ??. \\(\\text{ }\\) settling == \\(\\langle\\)\\(V_{settle}^{FRP}\\)\\(\\rangle\\) Used in an inorganic phosphorus constituent model block to control the settling rate of adsorbed FRP. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) settling == \\(\\langle\\)none\\(\\rangle\\) Used in an organic matter constituent model block to set the settling rate of labile particulate organic matter to zero. Simulation construction section ??. \\(\\text{ }\\) settling == \\(\\langle\\)constant,\\(V_{settle}^{lorg}\\)\\(\\rangle\\) Used in an organic matter constituent model block to control the settling rate of labile particulate organic matter. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) settling == \\(\\langle\\)thermal,\\(V_{settle}^{lorg}\\)\\(\\rangle\\) Used in an organic matter constituent model block to control the settling rate of labile particulate organic matter. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) settling == \\(\\langle\\)stokes,\\(d_{lorg}\\),\\(\\rho_{lorg}\\)\\(\\rangle\\) Used in an organic matter constituent model block to control the settling rate of labile particulate organic matter. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) ref settling == \\(\\langle\\)none\\(\\rangle\\) Used in an organic matter constituent model block to set the settling rate of refractory particulate organic matter to zero. Simulation construction section ??. \\(\\text{ }\\) ref settling == \\(\\langle\\)constant,\\(V_{settle}^{rorg}\\)\\(\\rangle\\) Used in an organic matter constituent model block to control the settling rate of refractory particulate organic matter. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) ref settling == \\(\\langle\\)thermal,\\(V_{settle}^{rorg}\\)\\(\\rangle\\) Used in an organic matter constituent model block to control the settling rate of refractory particulate organic matter. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) ref settling == \\(\\langle\\)stokes,\\(d_{rorg}\\),\\(\\rho_{rorg}\\)\\(\\rangle\\) Used in an organic matter constituent model block to control the settling rate of refractory particulate organic matter. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section ??. \\(\\text{ }\\) cell water quality depth == \\(\\langle\\)\\(d_{min-wq}\\)\\(\\rangle\\) Instruct TUFLOW FV to not execute water quality calculations on cells that have depths less than this specified value. Simulation construction section 3.4.1. \\(\\text{ }\\) disable water quality model == \\(\\langle\\)\\(B_{disable-wq}\\)\\(\\rangle\\) Instruct TUFLOW FV to disable (1) or enable (0) water quality calculations on all cells. Simulation construction section 3.4.1. \\(\\text{ }\\) wq equilibrium substeps == \\(\\langle\\)\\(fess\\)\\(\\rangle\\) Used in Part 1: Simulation controls of WQ Module control file to set the frequency of timesteps at which the WQ Module undertakes non-kinetic calculations, in number of water quality timesteps. This only applies to FRP adsorption. Simulation construction section 3.5.1. \\(\\text{ }\\) oxygen piston model == \\(\\langle\\)Wanninkhof92\\(\\rangle\\) Used in an oxygen constituent model block to activate the Wanninkhof 1992 oxygen piston model. Simulation construction section 3.6.3.1. to Ho16 oxygen piston model == \\(\\langle\\)Ho16\\(\\rangle\\) Used in an oxygen constituent model block to activate the Ho et al 2016 oxygen piston model. Simulation construction section 3.6.3.1. to Wanninkhof92 report min max warnings == \\(\\langle\\)on;off\\(\\rangle\\) Used in Part 1: Simulation controls of WQ Module control file to suppress writing concentration limit exceedance warnings to the WQ log file. If not specified it is set to on. This command should not be used as a way to ignore concentration exceedances, and has only been included in the WQ Module to allow for the rare occassions when known and expected exceedances occurr regularly - writing of these to the log file can cause very large log files to be written and result in system instability. Simulation construction section 3.5.1. \\(\\text{ }\\) mortality == \\(\\langle\\)\\(k_d^{pth}\\),\\(C_{SM}^{pth}\\),\\(\\alpha\\),\\(\\beta\\),\\(\\theta_{mor}^{pth}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to control the mortality of pathogens. The fourth parameter \\(\\beta\\) is unused but must be kept as a placeholder in this command so that five arguments are specified. Simulation construction section 3.6.3.2.1. \\(\\text{ }\\) visible inactivation == \\(\\langle\\)\\(k_{vis}^{pth}\\),\\(c_{S_{vis}}^{pth}\\),\\(K_{DO_{vis}}^{pth}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to control the inactivation of pathogens due to visible light. Simulation construction section 3.6.3.2.1. \\(\\text{ }\\) uva inactivation == \\(\\langle\\)\\(k_{uva}^{pth}\\),\\(c_{S_{uva}}^{pth}\\),\\(K_{DO_{uva}}^{pth}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to control the inactivation of pathogens due to UV-A light. Simulation construction section 3.6.3.2.1. \\(\\text{ }\\) uvb inactivation == \\(\\langle\\)\\(k_{uvb}^{pth}\\),\\(c_{S_{uvb}}^{pth}\\),\\(K_{DO_{uvb}}^{pth}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to control the inactivation of pathogens due to UV-B light. Simulation construction section 3.6.3.2.1. \\(\\text{ }\\) alive min max == \\(\\langle\\)\\(\\left[PTH_a\\right]_{min}^{pth}\\),\\(\\left[PTH_a\\right]_{max}^{pth}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to set minimum and maximum alive (free) pathogen concentrations. Simulation construction section 3.6.3.2.1. \\(\\text{ }\\) settling == \\(\\langle\\)\\(V_{settle}^{pth}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to set free pathogen settling velocities. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section 3.6.3.2.1. to attached settling == \\(\\langle\\)\\(V_{settle}^{pth}\\),\\(V_{settle}^{pth_t}\\)\\(\\rangle\\) Used in an (optional) pathogens constituent model block to set free and attached pathogen settling velocities. This will be linked directly to the TUFLOW FV ST Module in future releases of the WQ Module. Simulation construction section 3.6.3.2.2. to free "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
